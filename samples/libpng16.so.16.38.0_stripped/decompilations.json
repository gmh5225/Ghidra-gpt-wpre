{"_DT_INIT": "\nvoid _DT_INIT(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n", "FUN_00105020": "\nvoid FUN_00105020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n", "__longjmp_chk": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __longjmp_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "__cxa_finalize": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_get_y_offset_microns": "\nundefined4 png_get_y_offset_microns(long param_1,long param_2)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 1) != 0)) &&\n     (*(char *)(param_2 + 0xdc) == '\\x01')) {\n    return *(undefined4 *)(param_2 + 0xd8);\n  }\n  return 0;\n}\n\n", "png_image_free": "\nvoid png_image_free(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  FILE *__stream;\n  long in_FS_OFFSET;\n  long local_58;\n  long lStack80;\n  long local_48;\n  long lStack64;\n  long local_38;\n  ulong uStack48;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((param_1 != (long **)0x0) && (plVar1 = *param_1, plVar1 != (long *)0x0)) && (plVar1[2] == 0))\n  {\n    lVar2 = *plVar1;\n    if (lVar2 != 0) {\n      if ((*(byte *)(plVar1 + 5) & 2) != 0) {\n        __stream = *(FILE **)(lVar2 + 0x108);\n        *(byte *)(plVar1 + 5) = *(byte *)(plVar1 + 5) & 0xfd;\n        if (__stream != (FILE *)0x0) {\n          *(undefined8 *)(lVar2 + 0x108) = 0;\n          fclose(__stream);\n        }\n      }\n      local_58 = *plVar1;\n      lStack80 = plVar1[1];\n      local_48 = plVar1[2];\n      lStack64 = plVar1[3];\n      local_38 = plVar1[4];\n      uStack48 = plVar1[5];\n      *param_1 = &local_58;\n      png_free(local_58,local_48,local_38,local_58,plVar1);\n      if ((uStack48 & 1) == 0) {\n        png_destroy_read_struct(&local_58,&lStack80,0);\n      }\n      else {\n        png_destroy_write_struct(&local_58);\n      }\n    }\n    *param_1 = (long *)0x0;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_benign_errors": "\nvoid png_set_benign_errors(long param_1,int param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 0x130) & 0xff8fffff;\n  if (param_2 != 0) {\n    uVar1 = *(uint *)(param_1 + 0x130) | 0x700000;\n  }\n  *(uint *)(param_1 + 0x130) = uVar1;\n  return;\n}\n\n", "png_chunk_error": "\nvoid png_chunk_error(long param_1,undefined8 param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack232 [216];\n  undefined8 local_10;\n  \n  local_10 = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    FUN_0010ac90(*(undefined4 *)(param_1 + 0x218),auStack232);\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1);\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(0,param_2,param_2);\n}\n\n", "free": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_read_update_info": "\nvoid png_read_update_info(long param_1,undefined8 param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if ((*(byte *)(param_1 + 0x130) & 0x40) == 0) {\n    FUN_0011e980();\n    FUN_00116210(param_1,param_2);\n    return;\n  }\n  FUN_0010b490(param_1,\"png_read_update_info/png_start_read_image: duplicate call\");\n  return;\n}\n\n", "abort": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "__errno_location": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "remove": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint remove(char *__filename)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_get_rowbytes": "\nundefined8 png_get_rowbytes(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined8 *)(param_2 + 0x10);\n  }\n  return 0;\n}\n\n", "png_set_swap_alpha": "\nvoid png_set_swap_alpha(long param_1)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x20000;\n  }\n  return;\n}\n\n", "png_set_sRGB": "\nvoid png_set_sRGB(long param_1,long param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_00109ad0(param_1,param_2 + 0x34);\n    FUN_00107910(param_1,param_2);\n    return;\n  }\n  return;\n}\n\n", "png_create_write_struct": "\nvoid png_create_write_struct(void)\n\n{\n  png_create_write_struct_2();\n  return;\n}\n\n", "png_write_chunk_data": "\nvoid png_write_chunk_data(long param_1,long param_2,long param_3)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if ((param_2 != 0) && (param_3 != 0)) {\n    FUN_00121aa0();\n    FUN_001068d0(param_1,param_2,param_3);\n    return;\n  }\n  return;\n}\n\n", "png_set_bKGD": "\nvoid png_set_bKGD(long param_1,long param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_2 != 0 && param_3 != (undefined8 *)0x0) && (param_1 != 0)) {\n    uVar1 = *param_3;\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x20;\n    *(undefined8 *)(param_2 + 0xca) = uVar1;\n    *(undefined2 *)(param_2 + 0xd2) = *(undefined2 *)(param_3 + 1);\n  }\n  return;\n}\n\n", "ferror": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_write_sig": "\nvoid png_write_sig(long param_1)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  *(undefined4 *)(param_1 + 0x474) = 0x12;\n  local_18 = 0xa1a0a0d474e5089;\n  FUN_00121aa0(param_1,(long)&local_18 + (ulong)*(byte *)(param_1 + 0x26d),\n               (long)(int)(8 - (uint)*(byte *)(param_1 + 0x26d)));\n  if (*(byte *)(param_1 + 0x26d) < 3) {\n    *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x1000;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_malloc_warn": "\nlong png_malloc_warn(long param_1)\n\n{\n  long lVar1;\n  \n  if (param_1 != 0) {\n    lVar1 = FUN_0010cbb0();\n    if (lVar1 == 0) {\n      png_warning(param_1,\"Out of memory\");\n    }\n    return lVar1;\n  }\n  return 0;\n}\n\n", "fread": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "inflateReset2": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflateReset2(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_hIST": "\nvoid png_set_hIST(long param_1,long param_2,long param_3)\n\n{\n  ushort uVar1;\n  long lVar2;\n  long lVar3;\n  char *pcVar4;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 0) {\n    return;\n  }\n  pcVar4 = \"Invalid palette size, hIST allocation skipped\";\n  if ((ushort)(*(short *)(param_2 + 0x20) - 1U) < 0x100) {\n    png_free_data(param_1,param_2,8);\n    lVar2 = png_malloc_warn(param_1);\n    *(long *)(param_2 + 0x100) = lVar2;\n    if (lVar2 != 0) {\n      uVar1 = *(ushort *)(param_2 + 0x20);\n      *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 8;\n      if (uVar1 != 0) {\n        lVar3 = 0;\n        do {\n          *(undefined2 *)(lVar2 + lVar3 * 2) = *(undefined2 *)(param_3 + lVar3 * 2);\n          lVar3 = lVar3 + 1;\n        } while ((int)lVar3 < (int)(uint)uVar1);\n      }\n      *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x40;\n      return;\n    }\n    pcVar4 = \"Insufficient memory for hIST chunk data\";\n  }\n  png_warning(param_1,pcVar4);\n  return;\n}\n\n", "strtod": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\ndouble strtod(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_pCAL": "\nvoid png_set_pCAL(long param_1,long param_2,char *param_3,undefined4 param_4,undefined4 param_5,\n                 uint param_6,uint param_7,char *param_8,char **param_9)\n\n{\n  void **ppvVar1;\n  long lVar2;\n  int iVar3;\n  size_t sVar4;\n  size_t sVar5;\n  void *pvVar6;\n  undefined8 *puVar7;\n  undefined8 uVar8;\n  char *pcVar9;\n  ulong uVar10;\n  long lVar11;\n  char **ppcVar12;\n  byte bVar13;\n  undefined local_5c;\n  \n  bVar13 = 0;\n  if ((((param_1 == 0) || (param_2 == 0)) || (param_3 == (char *)0x0)) ||\n     ((param_8 == (char *)0x0 || ((0 < (int)param_7 && (param_9 == (char **)0x0)))))) {\n    return;\n  }\n  pcVar9 = \"Invalid pCAL equation type\";\n  if (param_6 < 4) {\n    if (param_7 < 0x100) {\n      sVar4 = strlen(param_3);\n      if (0 < (int)param_7) {\n        ppcVar12 = param_9;\n        do {\n          pcVar9 = *ppcVar12;\n          if (pcVar9 == (char *)0x0) {\nLAB_0011f7a9:\n            pcVar9 = \"Invalid format for pCAL parameter\";\n            goto LAB_0011f7b5;\n          }\n          sVar5 = strlen(pcVar9);\n          iVar3 = FUN_00108410(pcVar9,sVar5);\n          if (iVar3 == 0) goto LAB_0011f7a9;\n          ppcVar12 = ppcVar12 + 1;\n        } while (ppcVar12 != param_9 + (ulong)(param_7 - 1) + 1);\n      }\n      pvVar6 = (void *)png_malloc_warn(param_1,sVar4 + 1);\n      *(void **)(param_2 + 0x108) = pvVar6;\n      if (pvVar6 != (void *)0x0) {\n        memcpy(pvVar6,param_3,sVar4 + 1);\n        *(char *)(param_2 + 0x129) = (char)param_7;\n        *(undefined4 *)(param_2 + 0x110) = param_4;\n        *(undefined4 *)(param_2 + 0x114) = param_5;\n        local_5c = (undefined)param_6;\n        *(undefined *)(param_2 + 0x128) = local_5c;\n        sVar4 = strlen(param_8);\n        pvVar6 = (void *)png_malloc_warn(param_1,sVar4 + 1);\n        *(void **)(param_2 + 0x118) = pvVar6;\n        if (pvVar6 == (void *)0x0) {\n          pcVar9 = \"Insufficient memory for pCAL units\";\n        }\n        else {\n          uVar10 = (ulong)(param_7 + 1) << 3;\n          memcpy(pvVar6,param_8,sVar4 + 1);\n          puVar7 = (undefined8 *)png_malloc_warn(param_1,uVar10);\n          *(undefined8 **)(param_2 + 0x120) = puVar7;\n          if (puVar7 != (undefined8 *)0x0) {\n            *puVar7 = 0;\n            *(undefined8 *)((long)puVar7 + ((uVar10 & 0xffffffff) - 8)) = 0;\n            uVar10 = (ulong)((uint)(((int)puVar7 -\n                                    (int)(undefined8 *)((ulong)(puVar7 + 1) & 0xfffffffffffffff8)) +\n                                   (int)uVar10) >> 3);\n            puVar7 = (undefined8 *)((ulong)(puVar7 + 1) & 0xfffffffffffffff8);\n            for (; uVar10 != 0; uVar10 = uVar10 - 1) {\n              *puVar7 = 0;\n              puVar7 = puVar7 + (ulong)bVar13 * -2 + 1;\n            }\n            if (0 < (int)param_7) {\n              lVar11 = 0;\n              do {\n                sVar4 = strlen(*(char **)((long)param_9 + lVar11));\n                lVar2 = *(long *)(param_2 + 0x120);\n                uVar8 = png_malloc_warn(param_1,sVar4 + 1);\n                *(undefined8 *)(lVar2 + lVar11) = uVar8;\n                pvVar6 = *(void **)(*(long *)(param_2 + 0x120) + lVar11);\n                if (pvVar6 == (void *)0x0) {\n                  pcVar9 = \"Insufficient memory for pCAL parameter\";\n                  goto LAB_0011f92c;\n                }\n                ppvVar1 = (void **)((long)param_9 + lVar11);\n                lVar11 = lVar11 + 8;\n                memcpy(pvVar6,*ppvVar1,sVar4 + 1);\n              } while (lVar11 != (ulong)(param_7 - 1) * 8 + 8);\n            }\n            *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x400;\n            *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x80;\n            return;\n          }\n          pcVar9 = \"Insufficient memory for pCAL params\";\n        }\nLAB_0011f92c:\n        png_warning(param_1,pcVar9);\n        return;\n      }\n      pcVar9 = \"Insufficient memory for pCAL purpose\";\n    }\n    else {\n      pcVar9 = \"Invalid pCAL parameter count\";\n    }\n  }\nLAB_0011f7b5:\n  FUN_0010b520(param_1,pcVar9,1);\n  return;\n}\n\n", "crc32": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid crc32(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_sBIT": "\nvoid png_set_sBIT(long param_1,long param_2,undefined4 *param_3)\n\n{\n  undefined4 uVar1;\n  \n  if ((param_2 != 0 && param_3 != (undefined4 *)0x0) && (param_1 != 0)) {\n    uVar1 = *param_3;\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 2;\n    *(undefined4 *)(param_2 + 0xb0) = uVar1;\n    *(undefined *)(param_2 + 0xb4) = *(undefined *)(param_3 + 1);\n  }\n  return;\n}\n\n", "png_set_swap": "\nvoid png_set_swap(long param_1)\n\n{\n  if ((param_1 != 0) && (*(char *)(param_1 + 0x268) == '\\x10')) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x10;\n    return;\n  }\n  return;\n}\n\n", "png_convert_from_struct_tm": "\nvoid png_convert_from_struct_tm(short *param_1,undefined4 *param_2)\n\n{\n  *param_1 = *(short *)(param_2 + 5) + 0x76c;\n  *(char *)(param_1 + 1) = *(char *)(param_2 + 4) + '\\x01';\n  *(char *)((long)param_1 + 3) = (char)param_2[3];\n  *(char *)(param_1 + 2) = (char)param_2[2];\n  *(char *)((long)param_1 + 5) = (char)param_2[1];\n  *(char *)(param_1 + 3) = (char)*param_2;\n  return;\n}\n\n", "png_set_filler": "\nvoid png_set_filler(long param_1,undefined2 param_2,int param_3)\n\n{\n  uint uVar1;\n  \n  if (param_1 != 0) {\n    if ((*(byte *)(param_1 + 0x12d) & 0x80) == 0) {\n      if (*(char *)(param_1 + 0x267) == '\\0') {\n        if (*(byte *)(param_1 + 0x268) < 8) {\n          FUN_0010b490(param_1,\"png_set_filler is invalid for low bit depth gray output\");\n          return;\n        }\n        *(undefined *)(param_1 + 0x26c) = 2;\n      }\n      else {\n        if (*(char *)(param_1 + 0x267) != '\\x02') {\n          FUN_0010b490(param_1,\"png_set_filler: inappropriate color type\");\n          return;\n        }\n        *(undefined *)(param_1 + 0x26c) = 4;\n      }\n    }\n    else {\n      *(undefined2 *)(param_1 + 0x272) = param_2;\n    }\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x8000;\n    uVar1 = *(uint *)(param_1 + 0x130) | 0x80;\n    if (param_3 != 1) {\n      uVar1 = *(uint *)(param_1 + 0x130) & 0xffffff7f;\n    }\n    *(uint *)(param_1 + 0x130) = uVar1;\n  }\n  return;\n}\n\n", "png_get_x_pixels_per_meter": "\nuint png_get_x_pixels_per_meter(long param_1,long param_2)\n\n{\n  uint uVar1;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    return 0;\n  }\n  uVar1 = *(uint *)(param_2 + 8) & 0x80;\n  if ((uVar1 != 0) && (uVar1 = 0, *(char *)(param_2 + 0xe8) == '\\x01')) {\n    return *(uint *)(param_2 + 0xe0);\n  }\n  return uVar1;\n}\n\n", "inflateValidate": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflateValidate(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_chunk_benign_error": "\nvoid png_chunk_benign_error(long param_1)\n\n{\n  if ((*(byte *)(param_1 + 0x132) & 0x10) != 0) {\n    png_chunk_warning();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_chunk_error();\n}\n\n", "pow": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\ndouble pow(double __x,double __y)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "fclose": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_cHRM_fixed": "\nvoid png_set_cHRM_fixed(long param_1,long param_2,undefined4 param_3,undefined4 param_4,\n                       undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                       undefined4 param_9,undefined4 param_10)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  undefined4 local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 != 0) && (param_2 != 0)) {\n    local_40 = param_7;\n    local_3c = param_8;\n    local_38 = param_9;\n    local_34 = param_10;\n    local_48 = param_5;\n    local_44 = param_6;\n    local_30 = param_3;\n    local_2c = param_4;\n    iVar1 = FUN_001098a0(param_1,param_2 + 0x34,&local_48,2);\n    if (iVar1 != 0) {\n      *(ushort *)(param_2 + 0x7e) = *(ushort *)(param_2 + 0x7e) | 0x10;\n    }\n    FUN_00107910(param_1,param_2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "strlen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_shift": "\nvoid png_set_shift(long param_1,undefined4 *param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 != 0) {\n    uVar1 = *param_2;\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 8;\n    *(undefined4 *)(param_1 + 0x2dd) = uVar1;\n    *(undefined *)(param_1 + 0x2e1) = *(undefined *)(param_2 + 1);\n  }\n  return;\n}\n\n", "__stack_chk_fail": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_create_info_struct": "\nundefined8 * png_create_info_struct(long param_1)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  undefined8 *puVar3;\n  byte bVar4;\n  \n  bVar4 = 0;\n  if (param_1 != 0) {\n    puVar1 = (undefined8 *)FUN_0010cbb0(param_1,0x168);\n    if (puVar1 != (undefined8 *)0x0) {\n      *puVar1 = 0;\n      puVar1[0x2c] = 0;\n      puVar3 = (undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n      for (uVar2 = (ulong)(((int)puVar1 -\n                           (int)(undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8)) + 0x168U\n                          >> 3); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + (ulong)bVar4 * -2 + 1;\n      }\n    }\n    return puVar1;\n  }\n  return (undefined8 *)0x0;\n}\n\n", "png_set_gAMA_fixed": "\nvoid png_set_gAMA_fixed(long param_1,long param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_00109a40(param_1,param_2 + 0x34);\n    FUN_00107910(param_1,param_2);\n    return;\n  }\n  return;\n}\n\n", "png_set_sPLT": "\nvoid png_set_sPLT(long param_1,long param_2,char **param_3,int param_4)\n\n{\n  uint uVar1;\n  long lVar2;\n  size_t sVar3;\n  void *pvVar4;\n  void **ppvVar5;\n  char *pcVar6;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (((param_2 != 0) && (0 < param_4)) && (param_3 != (char **)0x0)) {\n    lVar2 = FUN_0010cc20(param_1,*(undefined8 *)(param_2 + 0x140),*(undefined4 *)(param_2 + 0x148),\n                         param_4,0x20);\n    if (lVar2 == 0) {\n      pcVar6 = \"too many sPLT chunks\";\nLAB_00120881:\n      FUN_0010b520(param_1,pcVar6,1);\n      return;\n    }\n    png_free(param_1,*(undefined8 *)(param_2 + 0x140));\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x20;\n    *(long *)(param_2 + 0x140) = lVar2;\n    ppvVar5 = (void **)((long)*(int *)(param_2 + 0x148) * 0x20 + lVar2);\n    do {\n      while ((pcVar6 = *param_3, pcVar6 == (char *)0x0 || (param_3[2] == (char *)0x0))) {\n        FUN_0010b490(param_1,\"png_set_sPLT: invalid sPLT\");\n        param_4 = param_4 + -1;\n        if (param_4 == 0) {\n          return;\n        }\n      }\n      *(undefined *)(ppvVar5 + 1) = *(undefined *)(param_3 + 1);\n      sVar3 = strlen(pcVar6);\n      pvVar4 = (void *)FUN_0010cbb0(param_1,sVar3 + 1);\n      *ppvVar5 = pvVar4;\n      if (pvVar4 == (void *)0x0) {\nLAB_00120875:\n        pcVar6 = \"sPLT out of memory\";\n        goto LAB_00120881;\n      }\n      memcpy(pvVar4,*param_3,sVar3 + 1);\n      pvVar4 = (void *)FUN_0010cbf0(param_1,*(undefined4 *)(param_3 + 3),10);\n      ppvVar5[2] = pvVar4;\n      if (pvVar4 == (void *)0x0) {\n        png_free(param_1,*ppvVar5);\n        *ppvVar5 = (void *)0x0;\n        goto LAB_00120875;\n      }\n      uVar1 = *(uint *)(param_3 + 3);\n      pcVar6 = param_3[2];\n      param_3 = param_3 + 4;\n      *(uint *)(ppvVar5 + 3) = uVar1;\n      memcpy(pvVar4,pcVar6,(ulong)uVar1 * 10);\n      *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x2000;\n      *(int *)(param_2 + 0x148) = *(int *)(param_2 + 0x148) + 1;\n      param_4 = param_4 + -1;\n      ppvVar5 = ppvVar5 + 4;\n    } while (param_4 != 0);\n  }\n  return;\n}\n\n", "png_read_image": "\nvoid png_read_image(long param_1,undefined8 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  int local_3c;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if ((*(byte *)(param_1 + 0x130) & 0x40) == 0) {\n    local_3c = png_set_interlace_handling();\n    png_start_read_image(param_1);\n  }\n  else {\n    if ((*(char *)(param_1 + 0x264) != '\\0') && ((*(byte *)(param_1 + 0x134) & 2) == 0)) {\n      png_warning(param_1,\"Interlace handling should be turned on when using png_read_image\");\n      *(undefined4 *)(param_1 + 0x200) = *(undefined4 *)(param_1 + 0x1fc);\n    }\n    local_3c = png_set_interlace_handling(param_1);\n  }\n  iVar1 = *(int *)(param_1 + 0x1fc);\n  if (0 < local_3c) {\n    iVar2 = 0;\n    do {\n      puVar3 = param_2;\n      if (iVar1 != 0) {\n        do {\n          puVar4 = puVar3 + 1;\n          png_read_row(param_1,*puVar3,0);\n          puVar3 = puVar4;\n        } while (param_2 + (ulong)(iVar1 - 1) + 1 != puVar4);\n      }\n      iVar2 = iVar2 + 1;\n    } while (local_3c != iVar2);\n  }\n  return;\n}\n\n", "modf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\ndouble modf(double __x,double *__iptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "deflateReset": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid deflateReset(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_get_x_offset_microns": "\nundefined4 png_get_x_offset_microns(long param_1,long param_2)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 1) != 0)) &&\n     (*(char *)(param_2 + 0xdc) == '\\x01')) {\n    return *(undefined4 *)(param_2 + 0xd4);\n  }\n  return 0;\n}\n\n", "png_set_write_fn": "\nvoid png_set_write_fn(long param_1,undefined8 param_2,code *param_3,code *param_4)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x108) = param_2;\n    if (param_3 == (code *)0x0) {\n      param_3 = FUN_00121a50;\n    }\n    *(code **)(param_1 + 0xf8) = param_3;\n    if (param_4 == (code *)0x0) {\n      param_4 = FUN_00121a30;\n    }\n    *(code **)(param_1 + 0x290) = param_4;\n    if (*(long *)(param_1 + 0x100) != 0) {\n      *(undefined8 *)(param_1 + 0x100) = 0;\n      png_warning(param_1,\"Can\\'t set both read_data_fn and write_data_fn in the same structure\");\n      return;\n    }\n  }\n  return;\n}\n\n", "png_handle_as_unknown": "\nundefined png_handle_as_unknown(long param_1,int *param_2)\n\n{\n  int *piVar1;\n  int *piVar2;\n  \n  if (((param_1 != 0) && (param_2 != (int *)0x0)) && (*(int *)(param_1 + 0x3c4) != 0)) {\n    piVar2 = (int *)((ulong)(uint)(*(int *)(param_1 + 0x3c4) * 5) + (long)*(int **)(param_1 + 0x3c8)\n                    );\n    do {\n      piVar1 = (int *)((long)piVar2 + -5);\n      if (*piVar1 == *param_2) {\n        return *(undefined *)((long)piVar2 + -1);\n      }\n      piVar2 = piVar1;\n    } while (*(int **)(param_1 + 0x3c8) < piVar1);\n  }\n  return 0;\n}\n\n", "png_set_background_fixed": "\nvoid png_set_background_fixed\n               (long param_1,undefined8 *param_2,int param_3,int param_4,undefined4 param_5)\n\n{\n  undefined2 uVar1;\n  undefined8 uVar2;\n  int iVar3;\n  \n  iVar3 = FUN_00113f30(param_1,0);\n  if ((param_2 != (undefined8 *)0x0) && (iVar3 != 0)) {\n    if (param_3 == 0) {\n      png_warning(param_1,\"Application must supply a known background gamma\");\n      return;\n    }\n    uVar2 = *param_2;\n    *(undefined4 *)(param_1 + 0x278) = param_5;\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\n    *(undefined8 *)(param_1 + 0x27c) = uVar2;\n    uVar1 = *(undefined2 *)(param_2 + 1);\n    *(char *)(param_1 + 0x274) = (char)param_3;\n    *(undefined2 *)(param_1 + 0x284) = uVar1;\n    if (param_4 == 0) {\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) & 0xff7ffeff | 0x40080;\n      return;\n    }\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) & 0xff7fffff | 0x40180;\n  }\n  return;\n}\n\n", "deflate": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid deflate(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_write_info": "\nvoid png_write_info(long param_1,long param_2)\n\n{\n  int *piVar1;\n  int iVar2;\n  long lVar3;\n  ushort uVar4;\n  uint uVar5;\n  byte *pbVar6;\n  long lVar7;\n  char cVar8;\n  int iVar9;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    png_write_info_before_PLTE();\n    uVar5 = *(uint *)(param_2 + 8);\n    if ((uVar5 & 8) == 0) {\n      if (*(char *)(param_2 + 0x25) == '\\x03') {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Valid palette required for paletted images\");\n      }\n    }\n    else {\n      FUN_00125d90(param_1,*(undefined8 *)(param_2 + 0x18),*(undefined2 *)(param_2 + 0x20));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x10) != 0) {\n      uVar4 = *(ushort *)(param_2 + 0x22);\n      cVar8 = *(char *)(param_2 + 0x25);\n      if (((*(byte *)(param_1 + 0x136) & 8) != 0) && (cVar8 == '\\x03')) {\n        uVar5 = (uint)uVar4;\n        if (0x100 < uVar4) {\n          uVar5 = 0x100;\n        }\n        if (uVar4 == 0) {\n          uVar4 = 0;\n        }\n        else {\n          lVar3 = 0;\n          do {\n            pbVar6 = (byte *)(*(long *)(param_2 + 0xb8) + lVar3);\n            lVar3 = lVar3 + 1;\n            *pbVar6 = ~*pbVar6;\n          } while ((int)lVar3 < (int)uVar5);\n          cVar8 = *(char *)(param_2 + 0x25);\n          uVar4 = *(ushort *)(param_2 + 0x22);\n        }\n      }\n      FUN_00126790(param_1,*(undefined8 *)(param_2 + 0xb8),param_2 + 0xc0,uVar4,cVar8);\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x20) != 0) {\n      FUN_00126910(param_1,param_2 + 0xca,*(undefined *)(param_2 + 0x25));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x10000) != 0) {\n      FUN_00126aa0(param_1,*(undefined8 *)(param_2 + 0xf0),*(undefined4 *)(param_2 + 0xec));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x40) != 0) {\n      FUN_00126b40(param_1,*(undefined8 *)(param_2 + 0x100),*(undefined2 *)(param_2 + 0x20));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x100) != 0) {\n      FUN_001271d0(param_1,*(undefined4 *)(param_2 + 0xd4),*(undefined4 *)(param_2 + 0xd8));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x400) != 0) {\n      FUN_00127270(param_1,*(undefined8 *)(param_2 + 0x108),*(undefined4 *)(param_2 + 0x110),\n                   *(undefined4 *)(param_2 + 0x114),*(undefined *)(param_2 + 0x128),\n                   *(undefined *)(param_2 + 0x129),*(undefined8 *)(param_2 + 0x118),\n                   *(undefined8 *)(param_2 + 0x120));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x4000) != 0) {\n      FUN_001275d0(param_1,*(undefined *)(param_2 + 0x14c),*(undefined8 *)(param_2 + 0x150));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x80) != 0) {\n      FUN_001276a0(param_1,*(undefined4 *)(param_2 + 0xe0),*(undefined4 *)(param_2 + 0xe4));\n      uVar5 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar5 & 0x200) != 0) {\n      FUN_00127740(param_1);\n      uVar5 = *(uint *)(param_2 + 8);\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x200;\n    }\n    if (((uVar5 & 0x2000) != 0) && (0 < *(int *)(param_2 + 0x148))) {\n      iVar9 = 0;\n      do {\n        iVar9 = iVar9 + 1;\n        FUN_00126430(param_1);\n      } while (*(int *)(param_2 + 0x148) != iVar9 && iVar9 <= *(int *)(param_2 + 0x148));\n    }\n    if (0 < *(int *)(param_2 + 0x94)) {\n      lVar3 = *(long *)(param_2 + 0xa0);\n      lVar7 = 0;\n      iVar9 = 0;\n      do {\n        piVar1 = (int *)(lVar3 + lVar7);\n        iVar2 = *piVar1;\n        if (iVar2 < 1) {\n          if (iVar2 == 0) {\n            FUN_00126d20(param_1,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 4),0);\n            lVar3 = *(long *)(param_2 + 0xa0);\n            *(undefined4 *)(lVar3 + lVar7) = 0xfffffffe;\n          }\n          else if (iVar2 == -1) {\n            FUN_00126c00(param_1,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 4));\n            lVar3 = *(long *)(param_2 + 0xa0);\n            *(undefined4 *)(lVar3 + lVar7) = 0xfffffffd;\n          }\n        }\n        else {\n          FUN_00126e50(param_1,iVar2,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 10),\n                       *(undefined8 *)(piVar1 + 0xc),*(undefined8 *)(piVar1 + 4));\n          lVar3 = *(long *)(param_2 + 0xa0);\n          *(int *)(lVar3 + lVar7) = (*(int *)(lVar3 + lVar7) != -1) - 3;\n        }\n        iVar9 = iVar9 + 1;\n        lVar7 = lVar7 + 0x38;\n      } while (iVar9 < *(int *)(param_2 + 0x94));\n    }\n    if (*(int *)(param_2 + 0x138) != 0) {\n      FUN_00121c20(param_1,param_2 + 0x130,param_2 + 0x138,2);\n      return;\n    }\n  }\n  return;\n}\n\n", "memset": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_start_read_image": "\nvoid png_start_read_image(long param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if ((*(byte *)(param_1 + 0x130) & 0x40) == 0) {\n    FUN_0011e980();\n    return;\n  }\n  FUN_0010b490(param_1,\"png_start_read_image/png_read_update_info: duplicate call\");\n  return;\n}\n\n", "png_write_row": "\nvoid png_write_row(long param_1,void *param_2)\n\n{\n  ushort *puVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  uint local_38 [2];\n  size_t local_30;\n  byte local_28;\n  char local_27;\n  char local_26;\n  byte local_25;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) goto LAB_00122d83;\n  if ((*(int *)(param_1 + 0x214) == 0) && (*(char *)(param_1 + 0x265) == '\\0')) {\n    if ((*(byte *)(param_1 + 0x12d) & 4) == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"png_write_info was never called before png_write_row\");\n    }\n    FUN_001277f0();\n  }\n  if (((*(char *)(param_1 + 0x264) != '\\0') && ((*(byte *)(param_1 + 0x134) & 2) != 0)) &&\n     (*(byte *)(param_1 + 0x265) < 7)) {\n    switch(*(undefined *)(param_1 + 0x265)) {\n    case 0:\n      if ((*(byte *)(param_1 + 0x214) & 7) == 0) goto LAB_00122c80;\n      break;\n    case 1:\n      if (((*(byte *)(param_1 + 0x214) & 7) == 0) && (4 < *(uint *)(param_1 + 0x1f8)))\n      goto LAB_00122c80;\n      break;\n    case 2:\n      if ((*(uint *)(param_1 + 0x214) & 7) == 4) goto LAB_00122c80;\n      break;\n    case 3:\n      if (((*(byte *)(param_1 + 0x214) & 3) == 0) && (2 < *(uint *)(param_1 + 0x1f8)))\n      goto LAB_00122c80;\n      break;\n    case 4:\n      if ((*(uint *)(param_1 + 0x214) & 3) == 2) goto LAB_00122c80;\n      break;\n    case 5:\n      if (((*(byte *)(param_1 + 0x214) & 1) == 0) && (1 < *(uint *)(param_1 + 0x1f8)))\n      goto LAB_00122c80;\n      break;\n    case 6:\n      if ((*(byte *)(param_1 + 0x214) & 1) != 0) goto LAB_00122c80;\n    }\nLAB_00122e50:\n    FUN_001279b0(param_1);\n    goto LAB_00122d83;\n  }\nLAB_00122c80:\n  local_28 = *(byte *)(param_1 + 0x267);\n  local_27 = *(char *)(param_1 + 0x269);\n  local_38[0] = *(uint *)(param_1 + 0x204);\n  local_26 = *(char *)(param_1 + 0x26c);\n  local_25 = local_26 * local_27;\n  if (local_25 < 8) {\n    local_30 = (ulong)local_25 * (ulong)local_38[0] + 7 >> 3;\n  }\n  else {\n    local_30 = (ulong)(local_25 >> 3) * (ulong)local_38[0];\n  }\n  memcpy((void *)(*(long *)(param_1 + 0x228) + 1),param_2,local_30);\n  if (*(char *)(param_1 + 0x264) == '\\0') {\nLAB_00122de0:\n    uVar5 = *(uint *)(param_1 + 0x134);\n  }\n  else {\n    uVar5 = *(uint *)(param_1 + 0x134);\n    if ((*(byte *)(param_1 + 0x265) < 6) && ((uVar5 & 2) != 0)) {\n      FUN_00127b30();\n      if (local_38[0] == 0) goto LAB_00122e50;\n      goto LAB_00122de0;\n    }\n  }\n  if (uVar5 != 0) {\n    FUN_001246c0();\n  }\n  if ((local_25 != *(byte *)(param_1 + 0x26a)) || (local_25 != *(byte *)(param_1 + 0x26f))) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal write transform logic error\");\n  }\n  if (((*(ulong *)(param_1 + 0x3e0) & 0xff00000004) == 0x4000000004) && ((local_28 & 2) != 0)) {\n    puVar1 = (ushort *)(*(long *)(param_1 + 0x228) + 1);\n    if (local_27 != '\\b') {\n      if (local_27 == '\\x10') {\n        if (local_28 == 2) {\n          lVar6 = 6;\n        }\n        else {\n          if (local_28 != 6) goto LAB_00122d4c;\n          lVar6 = 8;\n        }\n        uVar5 = 0;\n        if (local_38[0] == 0) goto LAB_00122d5a;\n        do {\n          uVar5 = uVar5 + 1;\n          uVar4 = (uint)(ushort)(puVar1[1] << 8 | puVar1[1] >> 8);\n          iVar2 = (ushort)(*puVar1 << 8 | *puVar1 >> 8) - uVar4;\n          iVar3 = (ushort)(puVar1[2] << 8 | puVar1[2] >> 8) - uVar4;\n          *(char *)((long)puVar1 + 1) = (char)iVar2;\n          *(char *)puVar1 = (char)((uint)iVar2 >> 8);\n          *(char *)(puVar1 + 2) = (char)((uint)iVar3 >> 8);\n          *(char *)((long)puVar1 + 5) = (char)iVar3;\n          puVar1 = (ushort *)((long)puVar1 + lVar6);\n        } while (local_38[0] != uVar5);\n      }\n      goto LAB_00122d4c;\n    }\n    if (local_28 == 2) {\n      lVar6 = 3;\n    }\n    else {\n      if (local_28 != 6) goto LAB_00122d4c;\n      lVar6 = 4;\n    }\n    uVar5 = 0;\n    if (local_38[0] != 0) {\n      do {\n        uVar5 = uVar5 + 1;\n        *(char *)puVar1 = *(char *)puVar1 - *(char *)((long)puVar1 + 1);\n        *(char *)(puVar1 + 1) = *(char *)(puVar1 + 1) - *(char *)((long)puVar1 + 1);\n        puVar1 = (ushort *)((long)puVar1 + lVar6);\n      } while (local_38[0] != uVar5);\n      goto LAB_00122d4c;\n    }\n  }\n  else {\nLAB_00122d4c:\n    if ((local_28 == 3) && (-1 < *(int *)(param_1 + 0x25c))) {\n      FUN_00121800(param_1,local_38);\n    }\n  }\nLAB_00122d5a:\n  FUN_00127e80(param_1,local_38);\n  if (*(code **)(param_1 + 0x308) != (code *)0x0) {\n    (**(code **)(param_1 + 0x308))\n              (param_1,*(undefined4 *)(param_1 + 0x214),*(undefined *)(param_1 + 0x265));\n  }\nLAB_00122d83:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_warning": "\nvoid png_warning(long param_1,char *param_2)\n\n{\n  char cVar1;\n  code *UNRECOVERED_JUMPTABLE;\n  char *pcVar2;\n  \n  if (param_1 != 0) {\n    if (*param_2 == '#') {\n      pcVar2 = param_2 + 1;\n      param_2 = param_2 + 0xf;\n      cVar1 = *pcVar2;\n      while (cVar1 != ' ') {\n        pcVar2 = pcVar2 + 1;\n        if (param_2 == pcVar2) goto LAB_0010af9e;\n        cVar1 = *pcVar2;\n      }\n      UNRECOVERED_JUMPTABLE = *(code **)(param_1 + 0xe8);\n      param_2 = pcVar2;\n    }\n    else {\nLAB_0010af9e:\n      UNRECOVERED_JUMPTABLE = *(code **)(param_1 + 0xe8);\n    }\n    if (UNRECOVERED_JUMPTABLE != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x0010afaa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*UNRECOVERED_JUMPTABLE)();\n      return;\n    }\n  }\n  __fprintf_chk(stderr,1,\"libpng warning: %s\",param_2);\n  fputc(10,stderr);\n  return;\n}\n\n", "png_get_y_pixels_per_meter": "\nuint png_get_y_pixels_per_meter(long param_1,long param_2)\n\n{\n  uint uVar1;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    return 0;\n  }\n  uVar1 = *(uint *)(param_2 + 8) & 0x80;\n  if ((uVar1 != 0) && (uVar1 = 0, *(char *)(param_2 + 0xe8) == '\\x01')) {\n    return *(uint *)(param_2 + 0xe4);\n  }\n  return uVar1;\n}\n\n", "fputc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "deflateInit2_": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid deflateInit2_(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_write_end": "\nvoid png_write_end(long param_1,long param_2)\n\n{\n  int *piVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  int iVar5;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if ((*(byte *)(param_1 + 300) & 4) != 0) {\n    if (*(uint *)(param_1 + 0x25c) != (uint)*(ushort *)(param_1 + 600) &&\n        (int)(uint)*(ushort *)(param_1 + 600) <= (int)*(uint *)(param_1 + 0x25c)) {\n      png_benign_error();\n    }\n    if (param_2 != 0) {\n      if (((*(byte *)(param_2 + 9) & 2) != 0) && ((*(byte *)(param_1 + 0x12d) & 2) == 0)) {\n        FUN_00127740(param_1);\n      }\n      if (0 < *(int *)(param_2 + 0x94)) {\n        lVar3 = *(long *)(param_2 + 0xa0);\n        lVar4 = 0;\n        iVar5 = 0;\n        do {\n          piVar1 = (int *)(lVar3 + lVar4);\n          iVar2 = *piVar1;\n          if (iVar2 < 1) {\n            if (iVar2 == 0) {\n              FUN_00126d20(param_1,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 4),0);\n              lVar3 = *(long *)(param_2 + 0xa0);\n              *(undefined4 *)(lVar3 + lVar4) = 0xfffffffe;\n            }\n            else if (iVar2 == -1) {\n              FUN_00126c00(param_1,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 4));\n              lVar3 = *(long *)(param_2 + 0xa0);\n              *(undefined4 *)(lVar3 + lVar4) = 0xfffffffd;\n            }\n          }\n          else {\n            FUN_00126e50(param_1,iVar2,*(undefined8 *)(piVar1 + 2),*(undefined8 *)(piVar1 + 10),\n                         *(undefined8 *)(piVar1 + 0xc),*(undefined8 *)(piVar1 + 4));\n            lVar3 = *(long *)(param_2 + 0xa0);\n            *(int *)(lVar3 + lVar4) = (*(int *)(lVar3 + lVar4) != -1) - 3;\n          }\n          iVar5 = iVar5 + 1;\n          lVar4 = lVar4 + 0x38;\n        } while (*(int *)(param_2 + 0x94) != iVar5 && iVar5 <= *(int *)(param_2 + 0x94));\n      }\n      if ((*(byte *)(param_2 + 10) & 1) != 0) {\n        FUN_00126aa0(param_1,*(undefined8 *)(param_2 + 0xf0),*(undefined4 *)(param_2 + 0xec));\n      }\n      if (*(int *)(param_2 + 0x138) != 0) {\n        FUN_00121c20(param_1,param_2 + 0x130,param_2 + 0x138,8);\n      }\n    }\n    *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 8;\n    FUN_001261d0(param_1);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"No IDATs written into file\");\n}\n\n", "memcmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_filter": "\nvoid png_set_filter(long param_1,int param_2,ulong param_3)\n\n{\n  uint uVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  byte bVar4;\n  ulong uVar5;\n  uint uVar6;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  uVar2 = param_3 & 0xffffffff;\n  bVar4 = (byte)uVar2;\n  if ((((*(byte *)(param_1 + 0x3e0) & 4) == 0) || (param_2 != 0x40)) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Unknown custom filter method\");\n  }\n  if (bVar4 < 8) {\n                    /* WARNING: Could not find normalized switch variable to match jumptable */\n    switch(param_3 & 0xff) {\n    case 1:\n      *(undefined *)(param_1 + 0x266) = 0x10;\n      break;\n    case 2:\n      *(undefined *)(param_1 + 0x266) = 0x20;\n      break;\n    case 3:\n      *(undefined *)(param_1 + 0x266) = 0x40;\n      break;\n    case 4:\n      *(undefined *)(param_1 + 0x266) = 0x80;\n      break;\n    default:\n      FUN_0010b490(param_1);\n    case 0:\n      *(undefined *)(param_1 + 0x266) = 8;\n    }\n  }\n  else {\n    *(byte *)(param_1 + 0x266) = bVar4;\n  }\n  if (*(long *)(param_1 + 0x228) == 0) goto LAB_0012384b;\n  uVar6 = *(uint *)(param_1 + 0x1f8);\n  uVar5 = (ulong)uVar6;\n  if (*(int *)(param_1 + 0x1fc) == 1) {\n    uVar1 = (uint)uVar2;\n    uVar2 = param_3 & 0xffffff1f;\n    bVar4 = (byte)uVar2;\n    if (uVar6 == 1) goto LAB_001238ba;\n    uVar6 = uVar1 >> 4 & 1;\n  }\n  else {\n    if (uVar6 == 1) {\nLAB_001238ba:\n      uVar2 = uVar2 & 0xffffffffffffff2f;\n    }\n    bVar4 = (byte)uVar2;\n    if (((uVar2 & 0xe0) == 0) || (*(long *)(param_1 + 0x220) != 0)) {\n      uVar6 = (((((uint)(uVar2 >> 4) & 1) - (uint)((uVar2 & 0x20) == 0)) -\n               (uint)((uVar2 & 0x40) == 0)) + 3) - (uint)((uVar2 & 0x80) == 0);\n    }\n    else {\n      bVar4 = bVar4 & 0x1f;\n      FUN_0010b470(param_1,\"png_set_filter: UP/AVG/PAETH cannot be added after start\");\n      uVar5 = (ulong)*(uint *)(param_1 + 0x1f8);\n      uVar6 = (uint)(uVar2 >> 4) & 1;\n    }\n  }\n  uVar1 = (uint)*(byte *)(param_1 + 0x26c) * (uint)*(byte *)(param_1 + 0x269);\n  if (uVar1 < 8) {\n    uVar5 = uVar5 * (long)(int)uVar1 + 7 >> 3;\n  }\n  else {\n    uVar5 = uVar5 * ((ulong)(long)(int)uVar1 >> 3);\n  }\n  if (*(long *)(param_1 + 0x230) == 0) {\n    uVar3 = png_malloc(param_1,uVar5 + 1);\n    *(undefined8 *)(param_1 + 0x230) = uVar3;\n  }\n  if ((1 < (int)uVar6) && (*(long *)(param_1 + 0x238) == 0)) {\n    uVar3 = png_malloc(param_1,uVar5 + 1);\n    *(undefined8 *)(param_1 + 0x238) = uVar3;\n  }\nLAB_0012384b:\n  *(byte *)(param_1 + 0x266) = bVar4;\n  return;\n}\n\n", "png_set_interlace_handling": "\nundefined8 png_set_interlace_handling(long param_1)\n\n{\n  if ((param_1 != 0) && (*(char *)(param_1 + 0x264) != '\\0')) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 2;\n    return 7;\n  }\n  return 1;\n}\n\n", "png_write_chunk": "\nvoid png_write_chunk(undefined8 param_1,uint *param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = *param_2;\n  FUN_001259d0(param_1,uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 |\n                       uVar1 << 0x18);\n  return;\n}\n\n", "frexp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\ndouble frexp(double __x,int *__exponent)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "_setjmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint _setjmp(__jmp_buf_tag *__env)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_eXIf_1": "\nvoid png_set_eXIf_1(long param_1,long param_2,undefined4 param_3,long param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  bool bVar4;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    if (*(long *)(param_2 + 0xf0) != 0) {\n      png_free();\n      *(undefined8 *)(param_2 + 0xf0) = 0;\n    }\n    *(undefined4 *)(param_2 + 0xec) = param_3;\n    lVar2 = png_malloc_warn(param_1);\n    *(long *)(param_2 + 0xf0) = lVar2;\n    if (lVar2 == 0) {\n      png_warning(param_1,\"Insufficient memory for eXIf chunk data\");\n      return;\n    }\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x8000;\n    iVar1 = *(int *)(param_2 + 0xec);\n    if (0 < iVar1) {\n      uVar3 = 0;\n      do {\n        *(undefined *)(lVar2 + uVar3) = *(undefined *)(param_4 + uVar3);\n        bVar4 = iVar1 - 1 != uVar3;\n        uVar3 = uVar3 + 1;\n      } while (bVar4);\n    }\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x10000;\n  }\n  return;\n}\n\n", "png_set_expand_gray_1_2_4_to_8": "\nvoid png_set_expand_gray_1_2_4_to_8(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x1000;\n  }\n  return;\n}\n\n", "png_write_info_before_PLTE": "\nvoid png_write_info_before_PLTE(long param_1,undefined4 *param_2)\n\n{\n  undefined uVar1;\n  ushort uVar2;\n  uint uVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if ((param_2 == (undefined4 *)0x0) || ((*(byte *)(param_1 + 0x12d) & 4) != 0)) {\n    return;\n  }\n  png_write_sig();\n  if (((*(byte *)(param_1 + 0x12d) & 0x10) != 0) && (*(int *)(param_1 + 0x3e0) != 0)) {\n    png_warning(param_1,\"MNG features are not allowed in a PNG datastream\");\n    *(undefined4 *)(param_1 + 0x3e0) = 0;\n  }\n  uVar1 = *(undefined *)(param_2 + 10);\n  FUN_00125a70(param_1,*param_2,param_2[1],*(undefined *)(param_2 + 9),\n               *(undefined *)((long)param_2 + 0x25),*(undefined *)((long)param_2 + 0x26),\n               *(undefined *)((long)param_2 + 0x27));\n  if ((short)*(ushort *)((long)param_2 + 0x7e) < 0) {\nLAB_001223d8:\n    if ((*(byte *)(param_2 + 2) & 2) == 0) goto LAB_001223de;\nLAB_00122425:\n    FUN_001265e0(param_1,param_2 + 0x2c,*(undefined *)((long)param_2 + 0x25));\nLAB_001223b0:\n    uVar2 = *(ushort *)((long)param_2 + 0x7e);\n    if ((short)uVar2 < 0) goto LAB_001223de;\n  }\n  else {\n    uVar3 = param_2[2];\n    if (((*(ushort *)((long)param_2 + 0x7e) & 8) != 0) && ((uVar3 & 1) != 0)) {\n      FUN_001261f0(param_1,param_2[0xd],uVar3,uVar1);\n      if (*(short *)((long)param_2 + 0x7e) < 0) goto LAB_001223d8;\n      uVar3 = param_2[2];\n    }\n    if ((uVar3 & 0x1000) != 0) {\n      if ((uVar3 & 0x800) != 0) {\n        FUN_0010b470(param_1,\"profile matches sRGB but writing iCCP instead\");\n      }\n      FUN_001262c0(param_1,*(undefined8 *)(param_2 + 0x20),*(undefined8 *)(param_2 + 0x22));\nLAB_001223aa:\n      if ((*(byte *)(param_2 + 2) & 2) != 0) goto LAB_00122425;\n      goto LAB_001223b0;\n    }\n    if ((uVar3 & 0x800) != 0) {\n      FUN_00126250(param_1,*(undefined2 *)(param_2 + 0x1f));\n      goto LAB_001223aa;\n    }\n    if ((uVar3 & 2) != 0) goto LAB_00122425;\n    uVar2 = *(ushort *)((long)param_2 + 0x7e);\n  }\n  if (((uVar2 & 0x10) != 0) && ((*(byte *)(param_2 + 2) & 4) != 0)) {\n    FUN_001266d0(param_1,param_2 + 0xe);\n  }\nLAB_001223de:\n  if (param_2[0x4e] != 0) {\n    FUN_00121c20(param_1,param_2 + 0x4c,param_2 + 0x4e,1);\n  }\n  *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x400;\n  return;\n}\n\n", "png_set_IHDR": "\nvoid png_set_IHDR(long param_1,uint *param_2,uint param_3,uint param_4,undefined param_5,\n                 undefined param_6,undefined param_7,undefined param_8,undefined param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  ulong uVar3;\n  \n  if (param_1 != 0) {\n    if (param_2 != (uint *)0x0) {\n      param_2[1] = param_4;\n      *(undefined *)(param_2 + 9) = param_5;\n      *(undefined *)((long)param_2 + 0x26) = param_8;\n      *(undefined *)((long)param_2 + 0x25) = param_6;\n      *(undefined *)((long)param_2 + 0x27) = param_9;\n      *param_2 = param_3;\n      *(undefined *)(param_2 + 10) = param_7;\n      FUN_00107f60(param_1,param_3,param_4,param_5,param_6,param_7,param_8,param_9);\n      bVar2 = *(byte *)((long)param_2 + 0x25);\n      if (bVar2 == 3) {\n        *(undefined *)((long)param_2 + 0x29) = 1;\n        cVar1 = '\\x01';\n      }\n      else {\n        if ((bVar2 & 2) == 0) {\n          *(undefined *)((long)param_2 + 0x29) = 1;\n          cVar1 = '\\x01';\n        }\n        else {\n          *(undefined *)((long)param_2 + 0x29) = 3;\n          cVar1 = '\\x03';\n        }\n        if ((bVar2 & 4) != 0) {\n          cVar1 = cVar1 + '\\x01';\n          *(char *)((long)param_2 + 0x29) = cVar1;\n        }\n      }\n      bVar2 = cVar1 * *(char *)(param_2 + 9);\n      *(byte *)((long)param_2 + 0x2a) = bVar2;\n      if (bVar2 < 8) {\n        uVar3 = (ulong)bVar2 * (ulong)param_3 + 7 >> 3;\n      }\n      else {\n        uVar3 = (ulong)(bVar2 >> 3) * (ulong)param_3;\n      }\n      *(ulong *)(param_2 + 4) = uVar3;\n    }\n    return;\n  }\n  return;\n}\n\n", "png_error": "\nvoid png_error(long param_1,char *param_2)\n\n{\n  if ((param_1 != 0) && (*(code **)(param_1 + 0xe0) != (code *)0x0)) {\n    (**(code **)(param_1 + 0xe0))();\n  }\n  if (param_2 == (char *)0x0) {\n    param_2 = \"undefined\";\n  }\n  __fprintf_chk(stderr,1,\"libpng error: %s\",param_2);\n  fputc(10,stderr);\n  png_longjmp(param_1,1);\n  if ((*(byte *)(param_1 + 0x132) & 0x20) != 0) {\n    png_warning();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error();\n}\n\n", "png_write_chunk_end": "\nvoid png_write_chunk_end(long param_1)\n\n{\n  long in_FS_OFFSET;\n  undefined local_24 [4];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x474) = 0x82;\n    png_save_uint_32(local_24,*(undefined4 *)(param_1 + 0x24c));\n    FUN_00121aa0(param_1,local_24,4);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "__memcpy_chk": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __memcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_create_read_struct_2": "\nlong png_create_read_struct_2(void)\n\n{\n  long lVar1;\n  undefined8 uStack16;\n  \n  lVar1 = FUN_00106ab0();\n  if (lVar1 != 0) {\n    *(uint *)(lVar1 + 0x130) = *(uint *)(lVar1 + 0x130) | 0x300000;\n    *(undefined4 *)(lVar1 + 300) = 0x8000;\n    *(undefined4 *)(lVar1 + 0x470) = 0x2000;\n    png_set_read_fn(lVar1,0,0,uStack16);\n  }\n  return lVar1;\n}\n\n", "png_destroy_read_struct": "\nvoid png_destroy_read_struct(long *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  uint uVar1;\n  long lVar2;\n  uint uVar3;\n  \n  if (param_1 == (long *)0x0) {\n    return;\n  }\n  lVar2 = *param_1;\n  if (lVar2 != 0) {\n    png_destroy_info_struct(lVar2,param_3);\n    png_destroy_info_struct(lVar2,param_2);\n    *param_1 = 0;\n    FUN_0010a480(lVar2);\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x400));\n    *(undefined8 *)(lVar2 + 0x400) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x478));\n    *(undefined8 *)(lVar2 + 0x478) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x460));\n    *(undefined8 *)(lVar2 + 0x460) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x378));\n    *(undefined8 *)(lVar2 + 0x378) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x380));\n    uVar1 = *(uint *)(lVar2 + 0x3ac);\n    *(undefined8 *)(lVar2 + 0x380) = 0;\n    if ((uVar1 & 0x1000) == 0) {\n      uVar3 = uVar1 & 0xffffefff;\n      *(uint *)(lVar2 + 0x3ac) = uVar3;\n    }\n    else {\n      png_free(lVar2,*(undefined8 *)(lVar2 + 0x250));\n      uVar1 = *(uint *)(lVar2 + 0x3ac);\n      *(undefined8 *)(lVar2 + 0x250) = 0;\n      uVar3 = uVar1 & 0xffffefff;\n      *(uint *)(lVar2 + 0x3ac) = uVar3;\n    }\n    if ((uVar1 & 0x2000) != 0) {\n      png_free(lVar2,*(undefined8 *)(lVar2 + 0x2e8));\n      uVar3 = *(uint *)(lVar2 + 0x3ac);\n      *(undefined8 *)(lVar2 + 0x2e8) = 0;\n    }\n    *(uint *)(lVar2 + 0x3ac) = uVar3 & 0xffffdfff;\n    inflateEnd(lVar2 + 0x140);\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x330));\n    *(undefined8 *)(lVar2 + 0x330) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x440));\n    *(undefined8 *)(lVar2 + 0x440) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x3c8));\n    *(undefined8 *)(lVar2 + 0x3c8) = 0;\n    png_free(lVar2,*(undefined8 *)(lVar2 + 0x3d8));\n    *(undefined8 *)(lVar2 + 0x3d8) = 0;\n    FUN_0010ce50(lVar2);\n    return;\n  }\n  return;\n}\n\n", "memcpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_mem_fn": "\nvoid png_set_mem_fn(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 1000) = param_2;\n    *(undefined8 *)(param_1 + 0x3f0) = param_3;\n    *(undefined8 *)(param_1 + 0x3f8) = param_4;\n  }\n  return;\n}\n\n", "png_set_tIME": "\nvoid png_set_tIME(long param_1,long param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  \n  if (((param_2 != 0 && param_3 != (undefined8 *)0x0) && (param_1 != 0)) &&\n     ((*(byte *)(param_1 + 0x12d) & 2) == 0)) {\n    if (((0xb < (byte)(*(char *)((long)param_3 + 2) - 1U)) ||\n        (0x1e < (byte)(*(char *)((long)param_3 + 3) - 1U))) ||\n       ((0x17 < *(byte *)((long)param_3 + 4) ||\n        ((0x3b < *(byte *)((long)param_3 + 5) || (0x3c < *(byte *)((long)param_3 + 6))))))) {\n      png_warning(param_1,\"Ignoring invalid time value\");\n      return;\n    }\n    uVar1 = *param_3;\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x200;\n    *(undefined8 *)(param_2 + 0xa8) = uVar1;\n  }\n  return;\n}\n\n", "png_set_tRNS": "\nvoid png_set_tRNS(long param_1,long param_2,undefined8 *param_3,uint param_4,undefined8 *param_5)\n\n{\n  ushort uVar1;\n  undefined2 uVar2;\n  int iVar3;\n  undefined8 *puVar4;\n  ulong uVar5;\n  long lVar6;\n  ulong uVar7;\n  undefined8 *puVar8;\n  undefined8 *puVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 0) {\n    return;\n  }\n  uVar7 = (ulong)param_4;\n  if (param_3 != (undefined8 *)0x0) {\n    png_free_data(param_1,param_2,0x2000);\n    if (param_4 - 1 < 0x100) {\n      puVar4 = (undefined8 *)png_malloc(param_1,0x100);\n      *(undefined8 **)(param_2 + 0xb8) = puVar4;\n      if (param_4 < 8) {\n        if ((param_4 & 4) == 0) {\n          if ((param_4 != 0) && (*(undefined *)puVar4 = *(undefined *)param_3, (param_4 & 2) != 0))\n          {\n            *(undefined2 *)((long)puVar4 + (uVar7 - 2)) =\n                 *(undefined2 *)((long)param_3 + (uVar7 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar4 = *(undefined4 *)param_3;\n          *(undefined4 *)((long)puVar4 + (uVar7 - 4)) = *(undefined4 *)((long)param_3 + (uVar7 - 4))\n          ;\n        }\n      }\n      else {\n        *puVar4 = *param_3;\n        *(undefined8 *)((long)puVar4 + (uVar7 - 8)) = *(undefined8 *)((long)param_3 + (uVar7 - 8));\n        lVar6 = (long)puVar4 - (long)(undefined8 *)((ulong)(puVar4 + 1) & 0xfffffffffffffff8);\n        puVar8 = (undefined8 *)((long)param_3 - lVar6);\n        puVar9 = (undefined8 *)((ulong)(puVar4 + 1) & 0xfffffffffffffff8);\n        for (uVar5 = (ulong)(param_4 + (int)lVar6 >> 3); uVar5 != 0; uVar5 = uVar5 - 1) {\n          *puVar9 = *puVar8;\n          puVar8 = puVar8 + (ulong)bVar10 * -2 + 1;\n          puVar9 = puVar9 + (ulong)bVar10 * -2 + 1;\n        }\n      }\n      *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x10;\n      *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x2000;\n    }\n    else {\n      puVar4 = *(undefined8 **)(param_2 + 0xb8);\n    }\n    *(undefined8 **)(param_1 + 0x2e8) = puVar4;\n  }\n  if (param_5 == (undefined8 *)0x0) {\n    *(short *)(param_2 + 0x22) = (short)param_4;\n    if (param_4 == 0) {\n      return;\n    }\n    goto LAB_001205e8;\n  }\n  if (*(byte *)(param_2 + 0x24) < 0x10) {\n    iVar3 = (1 << (*(byte *)(param_2 + 0x24) & 0x1f)) + -1;\n    if (*(char *)(param_2 + 0x25) == '\\0') {\n      uVar1 = *(ushort *)(param_5 + 1);\njoined_r0x0012063d:\n      if (iVar3 < (int)(uint)uVar1) {\nLAB_001205b3:\n        png_warning(param_1,\"tRNS chunk has out-of-range samples for bit_depth\");\n      }\n    }\n    else if (*(char *)(param_2 + 0x25) == '\\x02') {\n      if (((int)(uint)*(ushort *)((long)param_5 + 2) <= iVar3) &&\n         ((int)(uint)*(ushort *)((long)param_5 + 4) <= iVar3)) {\n        uVar1 = *(ushort *)((long)param_5 + 6);\n        goto joined_r0x0012063d;\n      }\n      goto LAB_001205b3;\n    }\n  }\n  if (param_4 == 0) {\n    uVar7 = 1;\n  }\n  *(undefined8 *)(param_2 + 0xc0) = *param_5;\n  uVar2 = *(undefined2 *)(param_5 + 1);\n  *(short *)(param_2 + 0x22) = (short)uVar7;\n  *(undefined2 *)(param_2 + 200) = uVar2;\nLAB_001205e8:\n  *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x10;\n  *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x2000;\n  return;\n}\n\n", "png_save_uint_32": "\nvoid png_save_uint_32(uint *param_1,uint param_2)\n\n{\n  *param_1 = param_2 >> 0x18 | (param_2 & 0xff0000) >> 8 | (param_2 & 0xff00) << 8 | param_2 << 0x18\n  ;\n  return;\n}\n\n", "inflateEnd": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflateEnd(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_save_int_32": "\nvoid png_save_int_32(void)\n\n{\n  png_save_uint_32();\n  return;\n}\n\n", "png_set_PLTE": "\nvoid png_set_PLTE(long param_1,long param_2,void *param_3,uint param_4)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    if (*(char *)(param_2 + 0x25) == '\\x03') {\n      if ((1 << (*(byte *)(param_2 + 0x24) & 0x1f) < (int)param_4) || ((int)param_4 < 0)) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Invalid palette length\");\n      }\n    }\n    else if (0x100 < param_4) {\n      png_warning(param_1,\"Invalid palette length\");\n      return;\n    }\n    if ((0 < (int)param_4) && (param_3 == (void *)0x0)) {\nLAB_0011fe50:\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid palette\");\n    }\n    if (param_4 == 0) {\n      if ((*(byte *)(param_1 + 0x3e0) & 1) == 0) goto LAB_0011fe50;\n      png_free_data(param_1,param_2,0x1000,0);\n      pvVar1 = (void *)png_calloc(param_1,0x300);\n      *(void **)(param_1 + 0x250) = pvVar1;\n    }\n    else {\n      png_free_data(param_1,param_2,0x1000,0);\n      pvVar1 = (void *)png_calloc(param_1,0x300);\n      *(void **)(param_1 + 0x250) = pvVar1;\n      pvVar1 = memcpy(pvVar1,param_3,(long)(int)param_4 * 3);\n    }\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x1000;\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 8;\n    *(void **)(param_2 + 0x18) = pvVar1;\n    *(short *)(param_1 + 600) = (short)param_4;\n    *(short *)(param_2 + 0x20) = (short)param_4;\n  }\n  return;\n}\n\n", "png_get_channels": "\nundefined png_get_channels(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x29);\n  }\n  return 0;\n}\n\n", "adler32": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid adler32(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_read_fn": "\nvoid png_set_read_fn(long param_1,undefined8 param_2,code *param_3)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x108) = param_2;\n    if (param_3 == (code *)0x0) {\n      param_3 = FUN_001136f0;\n    }\n    *(code **)(param_1 + 0x100) = param_3;\n    if (*(long *)(param_1 + 0xf8) != 0) {\n      *(undefined8 *)(param_1 + 0xf8) = 0;\n      png_warning(param_1,\"Can\\'t set both read_data_fn and write_data_fn in the same structure\");\n    }\n    *(undefined8 *)(param_1 + 0x290) = 0;\n    return;\n  }\n  return;\n}\n\n", "png_write_image": "\nvoid png_write_image(long param_1,long param_2)\n\n{\n  long lVar1;\n  int iVar2;\n  long lVar3;\n  int iVar4;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  iVar4 = 0;\n  iVar2 = png_set_interlace_handling();\n  if (0 < iVar2) {\n    do {\n      lVar3 = 0;\n      if (*(int *)(param_1 + 0x1fc) != 0) {\n        do {\n          lVar1 = lVar3 * 8;\n          lVar3 = lVar3 + 1;\n          png_write_row(param_1,*(undefined8 *)(param_2 + lVar1));\n        } while ((uint)lVar3 <= *(uint *)(param_1 + 0x1fc) &&\n                 *(uint *)(param_1 + 0x1fc) != (uint)lVar3);\n      }\n      iVar4 = iVar4 + 1;\n    } while (iVar2 != iVar4);\n  }\n  return;\n}\n\n", "png_set_packing": "\nvoid png_set_packing(long param_1)\n\n{\n  if ((param_1 != 0) && (*(byte *)(param_1 + 0x268) < 8)) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 4;\n    *(undefined *)(param_1 + 0x269) = 8;\n  }\n  return;\n}\n\n", "png_benign_error": "\nvoid png_benign_error(long param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 300) & 0x8000;\n  if ((*(byte *)(param_1 + 0x132) & 0x10) == 0) {\n    if ((uVar1 != 0) && (*(int *)(param_1 + 0x218) != 0)) {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error();\n    }\n                    /* WARNING: Subroutine does not return */\n    png_error();\n  }\n  if ((uVar1 != 0) && (*(int *)(param_1 + 0x218) != 0)) {\n    png_chunk_warning();\n    return;\n  }\n  png_warning();\n  return;\n}\n\n", "png_destroy_info_struct": "\nvoid png_destroy_info_struct(long param_1,undefined8 *param_2)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  undefined8 *puVar3;\n  byte bVar4;\n  \n  bVar4 = 0;\n  if (param_2 == (undefined8 *)0x0) {\n    return;\n  }\n  if ((param_1 != 0) && (puVar1 = (undefined8 *)*param_2, puVar1 != (undefined8 *)0x0)) {\n    *param_2 = 0;\n    png_free_data(param_1,puVar1,0xffff,0xffffffff);\n    *puVar1 = 0;\n    puVar1[0x2c] = 0;\n    puVar3 = (undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n    for (uVar2 = (ulong)(((int)puVar1 -\n                         (int)(undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8)) + 0x168U >>\n                        3); uVar2 != 0; uVar2 = uVar2 - 1) {\n      *puVar3 = 0;\n      puVar3 = puVar3 + (ulong)bVar4 * -2 + 1;\n    }\n    png_free(param_1,puVar1);\n    return;\n  }\n  return;\n}\n\n", "png_set_rgb_to_gray_fixed": "\nvoid png_set_rgb_to_gray_fixed(long param_1,int param_2,int param_3,int param_4)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,1);\n  if (iVar1 != 0) {\n    if (param_2 == 2) {\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x400000;\n    }\n    else if (param_2 == 3) {\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x200000;\n    }\n    else {\n      if (param_2 != 1) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"invalid error action to rgb_to_gray\");\n      }\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x600000;\n    }\n    if (*(char *)(param_1 + 0x267) == '\\x03') {\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x1000;\n    }\n    if ((-1 < param_3) && (-1 < param_4)) {\n      if (param_3 + param_4 < 0x186a1) {\n        *(undefined *)(param_1 + 0x3d1) = 1;\n        *(short *)(param_1 + 0x3d2) = (short)((ulong)((uint)(param_3 << 0xf) >> 5) / 0xc35);\n        *(short *)(param_1 + 0x3d4) = (short)((ulong)((uint)(param_4 << 0xf) >> 5) / 0xc35);\n        return;\n      }\n      FUN_0010b470(param_1,\"ignoring out of range rgb_to_gray coefficients\");\n    }\n    if ((*(ulong *)(param_1 + 0x3d0) & 0xffffffff0000) == 0) {\n      *(undefined4 *)(param_1 + 0x3d2) = 0x5b8a1b38;\n    }\n  }\n  return;\n}\n\n", "fflush": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_oFFs": "\nvoid png_set_oFFs(long param_1,long param_2,undefined4 param_3,undefined4 param_4,undefined param_5)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x100;\n    *(undefined4 *)(param_2 + 0xd4) = param_3;\n    *(undefined4 *)(param_2 + 0xd8) = param_4;\n    *(undefined *)(param_2 + 0xdc) = param_5;\n  }\n  return;\n}\n\n", "png_get_header_ver": "\nundefined1 * png_get_header_ver(void)\n\n{\n  return &DAT_0012902e;\n}\n\n", "png_read_row": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid png_read_row(long param_1,long param_2,long param_3)\n\n{\n  byte bVar1;\n  ushort *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  byte *__src;\n  uint uVar6;\n  long lVar7;\n  long in_FS_OFFSET;\n  uint local_38 [2];\n  ulong local_30;\n  undefined2 local_28;\n  undefined2 local_26;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) goto LAB_00110c57;\n  if ((*(byte *)(param_1 + 0x130) & 0x40) == 0) {\n    FUN_0011e980();\n  }\n  local_28 = *(ushort *)(param_1 + 0x267);\n  local_38[0] = *(uint *)(param_1 + 0x210);\n  bVar1 = *(byte *)(param_1 + 0x26a);\n  local_26 = *(ushort *)(param_1 + 0x26a) << 8 | *(ushort *)(param_1 + 0x26a) >> 8;\n  if (bVar1 < 8) {\n    local_30 = (ulong)bVar1 * (ulong)local_38[0] + 7 >> 3;\n  }\n  else {\n    local_30 = (ulong)(bVar1 >> 3) * (ulong)local_38[0];\n  }\n  if ((*(char *)(param_1 + 0x264) != '\\0') && ((*(byte *)(param_1 + 0x134) & 2) != 0)) {\n    uVar6 = *(uint *)(param_1 + 0x214);\n    if (*(byte *)(param_1 + 0x265) < 6) {\n      switch(*(undefined *)(param_1 + 0x265)) {\n      case 0:\n        if ((uVar6 & 7) != 0) {\nLAB_00110de8:\n          if (param_3 == 0) goto LAB_00110dfd;\nLAB_00110ded:\n          FUN_0011d8d0(param_1,param_3,1);\n          goto LAB_00110dfd;\n        }\n        break;\n      case 1:\n        if (((uVar6 & 7) != 0) || (*(uint *)(param_1 + 0x1f8) < 5)) goto LAB_00110de8;\n        break;\n      case 2:\n        if ((uVar6 & 7) != 4) {\n          if ((param_3 == 0) || ((uVar6 & 4) == 0)) goto LAB_00110dfd;\n          goto LAB_00110ded;\n        }\n        break;\n      case 3:\n        if (((uVar6 & 3) != 0) || (*(uint *)(param_1 + 0x1f8) < 3)) goto LAB_00110de8;\n        break;\n      case 4:\n        if ((uVar6 & 3) != 2) {\n          if ((param_3 != 0) && ((uVar6 & 2) != 0)) goto LAB_00110ded;\n          goto LAB_00110dfd;\n        }\n        break;\n      case 5:\n        if (((uVar6 & 1) != 0) || (*(uint *)(param_1 + 0x1f8) < 2)) goto LAB_00110de8;\n      }\n    }\n    else if ((uVar6 & 1) == 0) {\nLAB_00110dfd:\n      FUN_0011e840(param_1);\n      goto LAB_00110c57;\n    }\n  }\n  if ((*(byte *)(param_1 + 300) & 4) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Invalid attempt to read row data\");\n  }\n  **(undefined **)(param_1 + 0x228) = 0xff;\n  FUN_0011e540(param_1,*(undefined8 *)(param_1 + 0x228),local_30 + 1);\n  __src = *(byte **)(param_1 + 0x228);\n  if (*__src != 0) {\n    if (4 < *__src) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"bad adaptive filter value\");\n    }\n    FUN_0011e490(param_1,local_38,__src + 1);\n    __src = *(byte **)(param_1 + 0x228);\n  }\n  memcpy(*(void **)(param_1 + 0x220),__src,local_30 + 1);\n  if (((*(ulong *)(param_1 + 0x3e0) & 0xff00000004) == 0x4000000004) && ((local_28 & 2) != 0)) {\n    puVar2 = (ushort *)(*(long *)(param_1 + 0x228) + 1);\n    if (local_28._1_1_ == '\\b') {\n      if ((char)local_28 == '\\x02') {\n        lVar7 = 3;\n      }\n      else {\n        lVar7 = 4;\n        if ((char)local_28 != '\\x06') goto LAB_00110bbb;\n      }\n      if (local_38[0] != 0) {\n        uVar6 = 0;\n        do {\n          uVar6 = uVar6 + 1;\n          *(char *)puVar2 = *(char *)puVar2 + *(char *)((long)puVar2 + 1);\n          *(char *)(puVar2 + 1) = *(char *)(puVar2 + 1) + *(char *)((long)puVar2 + 1);\n          puVar2 = (ushort *)((long)puVar2 + lVar7);\n        } while (local_38[0] != uVar6);\n      }\n    }\n    else if (local_28._1_1_ == '\\x10') {\n      if ((char)local_28 == '\\x02') {\n        lVar7 = 6;\n      }\n      else {\n        lVar7 = 8;\n        if ((char)local_28 != '\\x06') goto LAB_00110bbb;\n      }\n      if (local_38[0] != 0) {\n        uVar6 = 0;\n        do {\n          uVar6 = uVar6 + 1;\n          uVar5 = (uint)(ushort)(puVar2[1] << 8 | puVar2[1] >> 8);\n          iVar3 = (ushort)(*puVar2 << 8 | *puVar2 >> 8) + uVar5;\n          iVar4 = (ushort)(puVar2[2] << 8 | puVar2[2] >> 8) + uVar5;\n          *(char *)((long)puVar2 + 1) = (char)iVar3;\n          *(char *)puVar2 = (char)((uint)iVar3 >> 8);\n          *(char *)(puVar2 + 2) = (char)((uint)iVar4 >> 8);\n          *(char *)((long)puVar2 + 5) = (char)iVar4;\n          puVar2 = (ushort *)((long)puVar2 + lVar7);\n        } while (local_38[0] != uVar6);\n      }\n    }\n  }\nLAB_00110bbb:\n  if (*(int *)(param_1 + 0x134) != 0) {\n    FUN_00116510(param_1,local_38);\n  }\n  if (*(byte *)(param_1 + 0x26f) == 0) {\n    *(byte *)(param_1 + 0x26f) = local_26._1_1_;\n    if (*(byte *)(param_1 + 0x26e) < local_26._1_1_) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"sequential row overflow\");\n    }\n  }\n  else if (*(byte *)(param_1 + 0x26f) != local_26._1_1_) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal sequential row size calculation error\");\n  }\n  if ((*(char *)(param_1 + 0x264) == '\\0') || ((*(uint *)(param_1 + 0x134) & 2) == 0)) {\n    if (param_2 != 0) {\n      FUN_0011d8d0(param_1,param_2,0xffffffff);\n    }\n    if (param_3 != 0) {\n      FUN_0011d8d0(param_1,param_3,0xffffffff);\n    }\n  }\n  else {\n    if (*(byte *)(param_1 + 0x265) < 6) {\n      FUN_0011dec0(local_38,*(long *)(param_1 + 0x228) + 1);\n    }\n    if (param_3 != 0) {\n      FUN_0011d8d0(param_1,param_3,1);\n    }\n    if (param_2 != 0) {\n      FUN_0011d8d0(param_1,param_2,0);\n    }\n  }\n  FUN_0011e840(param_1);\n  if (*(code **)(param_1 + 0x300) != (code *)0x0) {\n    (**(code **)(param_1 + 0x300))\n              (param_1,*(undefined4 *)(param_1 + 0x214),*(undefined *)(param_1 + 0x265));\n  }\nLAB_00110c57:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "png_set_pHYs": "\nvoid png_set_pHYs(long param_1,long param_2,undefined4 param_3,undefined4 param_4,undefined param_5)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x80;\n    *(undefined4 *)(param_2 + 0xe0) = param_3;\n    *(undefined4 *)(param_2 + 0xe4) = param_4;\n    *(undefined *)(param_2 + 0xe8) = param_5;\n  }\n  return;\n}\n\n", "png_set_invert_alpha": "\nvoid png_set_invert_alpha(long param_1)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x80000;\n  }\n  return;\n}\n\n", "png_set_add_alpha": "\nvoid png_set_add_alpha(long param_1)\n\n{\n  if (param_1 != 0) {\n    png_set_filler();\n    if ((*(uint *)(param_1 + 0x134) & 0x8000) != 0) {\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x1000000;\n    }\n    return;\n  }\n  return;\n}\n\n", "png_set_alpha_mode_fixed": "\nvoid png_set_alpha_mode_fixed(long param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  \n  iVar3 = FUN_00113f30();\n  if (iVar3 == 0) {\n    return;\n  }\n  if ((param_3 == -1) || (param_3 == -100000)) {\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x1000;\n    param_3 = 220000;\nLAB_001143f7:\n    uVar5 = FUN_001091d0(param_3);\n    iVar3 = param_3;\n    if (param_2 != 2) goto LAB_00114404;\nLAB_00114482:\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) & 0xff7fffff;\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x2000;\n  }\n  else {\n    if ((param_3 != -2) && (param_3 != -50000)) {\n      if (0x989298 < param_3 - 1000U) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"output gamma out of expected range\");\n      }\n      goto LAB_001143f7;\n    }\n    iVar3 = 0x250ac;\n    param_3 = 0x250ac;\n    uVar5 = FUN_001091d0(0x250ac);\n    if (param_2 == 2) goto LAB_00114482;\nLAB_00114404:\n    if (2 < param_2) {\n      if (param_2 != 3) {\nLAB_001144b9:\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"invalid alpha mode\");\n      }\n      *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x800000;\n      iVar1 = *(int *)(param_1 + 0x4a0);\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\n      goto joined_r0x00114378;\n    }\n    if (param_2 == 0) {\n      *(ulong *)(param_1 + 0x130) = *(ulong *)(param_1 + 0x130) & 0xff7fffffffffdfff;\n      if (*(int *)(param_1 + 0x4a0) != 0) {\n        *(int *)(param_1 + 0x2a4) = param_3;\n        return;\n      }\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n      *(undefined4 *)(param_1 + 0x4a0) = uVar5;\n      *(int *)(param_1 + 0x2a4) = param_3;\n      return;\n    }\n    if (param_2 != 1) goto LAB_001144b9;\n    iVar3 = 100000;\n    *(ulong *)(param_1 + 0x130) = *(ulong *)(param_1 + 0x130) & 0xff7fffffffffdfff;\n  }\n  iVar1 = *(int *)(param_1 + 0x4a0);\n  param_3 = iVar3;\njoined_r0x00114378:\n  if (iVar1 == 0) {\n    *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n    *(undefined4 *)(param_1 + 0x4a0) = uVar5;\n    *(int *)(param_1 + 0x2a4) = param_3;\n  }\n  else {\n    *(int *)(param_1 + 0x2a4) = param_3;\n  }\n  uVar2 = *(uint *)(param_1 + 0x134);\n  *(undefined8 *)(param_1 + 0x27c) = 0;\n  *(undefined2 *)(param_1 + 0x284) = 0;\n  *(undefined4 *)(param_1 + 0x278) = *(undefined4 *)(param_1 + 0x4a0);\n  uVar4 = uVar2 & 0xfffffeff;\n  *(undefined *)(param_1 + 0x274) = 2;\n  *(uint *)(param_1 + 0x134) = uVar4;\n  if ((uVar2 & 0x80) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"conflicting calls to set alpha mode and background\");\n  }\n  *(uint *)(param_1 + 0x134) = uVar4 | 0x80;\n  return;\n}\n\n", "png_set_compression_level": "\nvoid png_set_compression_level(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x1bc) = param_2;\n  }\n  return;\n}\n\n", "png_set_sCAL_s": "\nvoid png_set_sCAL_s(long param_1,long param_2,int param_3,char *param_4,char *param_5)\n\n{\n  int iVar1;\n  size_t sVar2;\n  size_t sVar3;\n  void *pvVar4;\n  undefined local_3c;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    return;\n  }\n  if (1 < param_3 - 1U) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Invalid sCAL unit\");\n  }\n  if ((((param_4 != (char *)0x0) && (sVar2 = strlen(param_4), sVar2 != 0)) && (*param_4 != '-')) &&\n     (iVar1 = FUN_00108410(param_4,sVar2), iVar1 != 0)) {\n    if (((param_5 != (char *)0x0) && (sVar3 = strlen(param_5), sVar3 != 0)) &&\n       ((*param_5 != '-' && (iVar1 = FUN_00108410(param_5,sVar3), iVar1 != 0)))) {\n      local_3c = (undefined)param_3;\n      *(undefined *)(param_2 + 0x14c) = local_3c;\n      pvVar4 = (void *)png_malloc_warn(param_1,sVar2 + 1);\n      *(void **)(param_2 + 0x150) = pvVar4;\n      if (pvVar4 != (void *)0x0) {\n        memcpy(pvVar4,param_4,sVar2 + 1);\n        pvVar4 = (void *)png_malloc_warn(param_1,sVar3 + 1);\n        *(void **)(param_2 + 0x158) = pvVar4;\n        if (pvVar4 != (void *)0x0) {\n          memcpy(pvVar4,param_5,sVar3 + 1);\n          *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x4000;\n          *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x100;\n          return;\n        }\n        png_free(param_1,*(undefined8 *)(param_2 + 0x150));\n        *(undefined8 *)(param_2 + 0x150) = 0;\n      }\n      png_warning(param_1,\"Memory allocation failed while processing sCAL\");\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Invalid sCAL height\");\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Invalid sCAL width\");\n}\n\n", "deflateEnd": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid deflateEnd(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_error_fn": "\nvoid png_set_error_fn(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0xf0) = param_2;\n    *(undefined8 *)(param_1 + 0xe0) = param_3;\n    *(undefined8 *)(param_1 + 0xe8) = param_4;\n  }\n  return;\n}\n\n", "png_set_keep_unknown_chunks": "\nvoid png_set_keep_unknown_chunks(long param_1,uint param_2,undefined *param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  char *pcVar4;\n  int *piVar5;\n  int *piVar6;\n  int iVar7;\n  bool bVar8;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  pcVar4 = \"png_set_keep_unknown_chunks: invalid keep\";\n  if (3 < param_2) goto LAB_00120c7f;\n  if (0 < (int)param_4) {\n    pcVar4 = \"png_set_keep_unknown_chunks: no chunk list\";\n    if (param_3 == (undefined *)0x0) goto LAB_00120c7f;\n    piVar6 = *(int **)(param_1 + 0x3c8);\n    if (piVar6 != (int *)0x0) {\n      iVar7 = *(int *)(param_1 + 0x3c4);\n      goto LAB_00120b46;\n    }\n    if ((int)param_4 < 0x33333334) goto LAB_00120cdc;\nLAB_00120c78:\n    pcVar4 = \"png_set_keep_unknown_chunks: too many chunks\";\nLAB_00120c7f:\n    FUN_0010b490(param_1,pcVar4);\n    return;\n  }\n  *(uint *)(param_1 + 0x3c0) = param_2;\n  if (param_4 == 0) {\n    return;\n  }\n  piVar6 = *(int **)(param_1 + 0x3c8);\n  if (piVar6 == (int *)0x0) {\n    param_4 = 0x12;\n    param_3 = &DAT_0012c460;\nLAB_00120cdc:\n    if (param_2 == 0) {\n      piVar3 = (int *)0x0;\n      iVar1 = 0;\n      piVar5 = (int *)0x0;\n    }\n    else {\n      piVar5 = (int *)png_malloc(param_1,param_4 * 5);\nLAB_00120caf:\n      if (piVar5 != (int *)0x0) {\n        iVar7 = 0;\n        piVar6 = piVar5;\n        goto LAB_00120b67;\n      }\n      piVar3 = *(int **)(param_1 + 0x3c8);\n      iVar1 = 0;\n    }\nLAB_00120c0e:\n    *(int *)(param_1 + 0x3c4) = iVar1;\n    if (piVar5 == piVar3) {\n      return;\n    }\n  }\n  else {\n    iVar7 = *(int *)(param_1 + 0x3c4);\n    param_4 = 0x12;\n    param_3 = &DAT_0012c460;\nLAB_00120b46:\n    if (0x33333333 < param_4 + iVar7) goto LAB_00120c78;\n    if (param_2 == 0) {\n      piVar3 = piVar6;\n      if (iVar7 != 0) goto LAB_00120b67;\n    }\n    else {\n      piVar5 = (int *)png_malloc(param_1,(param_4 + iVar7) * 5);\n      if (iVar7 == 0) goto LAB_00120caf;\n      memcpy(piVar5,*(void **)(param_1 + 0x3c8),(ulong)(uint)(iVar7 * 5));\n      piVar6 = piVar5;\nLAB_00120b67:\n      uVar2 = 0;\n      do {\n        piVar5 = piVar6;\n        if (iVar7 != 0) {\n          piVar5 = (int *)((ulong)(iVar7 - 1) * 5 + 5 + (long)piVar6);\n          piVar3 = piVar6;\n          do {\n            if (*(int *)(param_3 + uVar2 * 5) == *piVar3) {\n              *(char *)(piVar3 + 1) = (char)param_2;\n              goto LAB_00120bad;\n            }\n            piVar3 = (int *)((long)piVar3 + 5);\n          } while (piVar3 != piVar5);\n        }\n        if (param_2 != 0) {\n          iVar1 = *(int *)(param_3 + uVar2 * 5);\n          iVar7 = iVar7 + 1;\n          *(char *)(piVar5 + 1) = (char)param_2;\n          *piVar5 = iVar1;\n        }\nLAB_00120bad:\n        uVar2 = uVar2 + 1;\n      } while (uVar2 < param_4);\n      if (iVar7 == 0) {\n        piVar3 = *(int **)(param_1 + 0x3c8);\n      }\n      else {\n        iVar1 = 0;\n        piVar5 = piVar6;\n        piVar3 = piVar6;\n        do {\n          if (*(char *)(piVar5 + 1) != '\\0') {\n            if (piVar3 != piVar5) {\n              *piVar3 = *piVar5;\n              *(undefined *)(piVar3 + 1) = *(undefined *)(piVar5 + 1);\n            }\n            piVar3 = (int *)((long)piVar3 + 5);\n            iVar1 = iVar1 + 1;\n          }\n          piVar5 = (int *)((long)piVar5 + 5);\n        } while ((int *)((ulong)(iVar7 - 1) * 5 + 5 + (long)piVar6) != piVar5);\n        piVar3 = *(int **)(param_1 + 0x3c8);\n        piVar5 = piVar6;\n        if (iVar1 != 0) goto LAB_00120c0e;\n      }\n      bVar8 = piVar3 != piVar6;\n      piVar3 = piVar6;\n      if (bVar8) {\n        piVar5 = (int *)0x0;\n        png_free(param_1,piVar6);\n        piVar3 = *(int **)(param_1 + 0x3c8);\n        iVar1 = 0;\n        goto LAB_00120c0e;\n      }\n    }\n    *(undefined4 *)(param_1 + 0x3c4) = 0;\n    piVar5 = (int *)0x0;\n  }\n  if (piVar3 != (int *)0x0) {\n    png_free(param_1);\n  }\n  *(int **)(param_1 + 0x3c8) = piVar5;\n  return;\n}\n\n", "png_chunk_warning": "\nvoid png_chunk_warning(long param_1,undefined8 param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack232 [216];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    png_warning(0,param_2,param_2);\n  }\n  else {\n    FUN_0010ac90(*(undefined4 *)(param_1 + 0x218),auStack232);\n    png_warning(param_1);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_expand": "\nvoid png_set_expand(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x2001000;\n  }\n  return;\n}\n\n", "png_create_write_struct_2": "\nlong png_create_write_struct_2(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00106ab0();\n  if (lVar1 != 0) {\n    *(undefined8 *)(lVar1 + 0x1b8) = 0xffffffff00002000;\n    *(undefined8 *)(lVar1 + 0x1c0) = 0xf00000008;\n    *(undefined8 *)(lVar1 + 0x1c8) = 0x100000008;\n    *(undefined8 *)(lVar1 + 0x1d0) = 0x8ffffffff;\n    *(uint *)(lVar1 + 0x130) = *(uint *)(lVar1 + 0x130) | 0x200000;\n    *(undefined8 *)(lVar1 + 0x1d8) = 0x80000000f;\n    *(undefined4 *)(lVar1 + 0x1e0) = 0;\n    png_set_write_fn(lVar1,0,0,0);\n  }\n  return lVar1;\n}\n\n", "png_set_strip_16": "\nvoid png_set_strip_16(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x400;\n  }\n  return;\n}\n\n", "png_create_read_struct": "\nvoid png_create_read_struct(void)\n\n{\n  png_create_read_struct_2();\n  return;\n}\n\n", "png_destroy_write_struct": "\nvoid png_destroy_write_struct(long *param_1)\n\n{\n  long lVar1;\n  \n  if (param_1 == (long *)0x0) {\n    return;\n  }\n  lVar1 = *param_1;\n  if (lVar1 != 0) {\n    png_destroy_info_struct(lVar1);\n    *param_1 = 0;\n    if ((*(byte *)(lVar1 + 0x130) & 2) != 0) {\n      deflateEnd(lVar1 + 0x140);\n    }\n    FUN_00125a30(lVar1,lVar1 + 0x1b0);\n    png_free(lVar1,*(undefined8 *)(lVar1 + 0x228));\n    *(undefined8 *)(lVar1 + 0x228) = 0;\n    png_free(lVar1,*(undefined8 *)(lVar1 + 0x220));\n    png_free(lVar1,*(undefined8 *)(lVar1 + 0x230));\n    png_free(lVar1,*(undefined8 *)(lVar1 + 0x238));\n    *(undefined8 *)(lVar1 + 0x220) = 0;\n    *(undefined8 *)(lVar1 + 0x230) = 0;\n    *(undefined8 *)(lVar1 + 0x238) = 0;\n    png_free(lVar1,*(undefined8 *)(lVar1 + 0x3c8));\n    *(undefined8 *)(lVar1 + 0x3c8) = 0;\n    FUN_0010ce50(lVar1);\n    return;\n  }\n  return;\n}\n\n", "png_get_pixels_per_meter": "\nuint png_get_pixels_per_meter(long param_1,long param_2)\n\n{\n  uint uVar1;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    return 0;\n  }\n  uVar1 = *(uint *)(param_2 + 8) & 0x80;\n  if ((uVar1 != 0) && (uVar1 = 0, *(char *)(param_2 + 0xe8) == '\\x01')) {\n    uVar1 = *(uint *)(param_2 + 0xe4);\n    if (*(uint *)(param_2 + 0xe0) != uVar1) {\n      uVar1 = 0;\n    }\n    return uVar1;\n  }\n  return uVar1;\n}\n\n", "png_free_data": "\nvoid png_free_data(long param_1,long param_2,uint param_3,int param_4)\n\n{\n  long lVar1;\n  uint uVar2;\n  long lVar3;\n  int iVar4;\n  uint uVar5;\n  ulong uVar6;\n  undefined8 *puVar7;\n  long lVar8;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 0) {\n    return;\n  }\n  lVar3 = *(long *)(param_2 + 0xa0);\n  uVar5 = *(uint *)(param_2 + 300);\n  uVar2 = param_3 & uVar5;\n  if ((lVar3 == 0) || ((uVar2 & 0x4000) == 0)) {\nLAB_00106e2e:\n    if ((uVar2 & 0x2000) == 0) goto LAB_00106e37;\nLAB_00107200:\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffffffef;\n    png_free(param_1,*(undefined8 *)(param_2 + 0xb8));\n    uVar5 = *(uint *)(param_2 + 300);\n    *(undefined8 *)(param_2 + 0xb8) = 0;\n    uVar2 = param_3 & uVar5;\n    *(undefined2 *)(param_2 + 0x22) = 0;\n    if ((uVar2 & 0x100) == 0) goto LAB_00106e40;\nLAB_001071a8:\n    png_free(param_1,*(undefined8 *)(param_2 + 0x150));\n    png_free(param_1,*(undefined8 *)(param_2 + 0x158));\n    uVar5 = *(uint *)(param_2 + 300);\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffffbfff;\n    *(undefined8 *)(param_2 + 0x150) = 0;\n    *(undefined8 *)(param_2 + 0x158) = 0;\n    uVar2 = param_3 & uVar5;\n    if ((uVar2 & 0x80) == 0) goto LAB_00106e48;\nLAB_00107100:\n    png_free(param_1,*(undefined8 *)(param_2 + 0x108));\n    png_free(param_1,*(undefined8 *)(param_2 + 0x118));\n    lVar3 = *(long *)(param_2 + 0x120);\n    *(undefined8 *)(param_2 + 0x108) = 0;\n    *(undefined8 *)(param_2 + 0x118) = 0;\n    if (lVar3 != 0) {\n      if (*(char *)(param_2 + 0x129) != '\\0') {\n        lVar8 = 0;\n        do {\n          lVar1 = lVar8 * 8;\n          lVar8 = lVar8 + 1;\n          png_free(param_1,*(undefined8 *)(lVar3 + lVar1));\n          lVar3 = *(long *)(param_2 + 0x120);\n        } while ((int)lVar8 < (int)(uint)*(byte *)(param_2 + 0x129));\n      }\n      png_free();\n      *(undefined8 *)(param_2 + 0x120) = 0;\n    }\n    uVar5 = *(uint *)(param_2 + 300);\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xfffffbff;\n    uVar2 = param_3 & uVar5;\n    if ((uVar2 & 0x10) == 0) goto LAB_00106e50;\nLAB_001070a0:\n    png_free(param_1,*(undefined8 *)(param_2 + 0x80));\n    png_free(param_1,*(undefined8 *)(param_2 + 0x88));\n    uVar5 = *(uint *)(param_2 + 300);\n    lVar3 = *(long *)(param_2 + 0x140);\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffffefff;\n    *(undefined8 *)(param_2 + 0x80) = 0;\n    uVar2 = param_3 & uVar5;\n    *(undefined8 *)(param_2 + 0x88) = 0;\n  }\n  else {\n    if (param_4 == -1) {\n      lVar8 = 0;\n      iVar4 = 0;\n      if (0 < *(int *)(param_2 + 0x94)) {\n        do {\n          puVar7 = (undefined8 *)(lVar3 + 8 + lVar8);\n          iVar4 = iVar4 + 1;\n          lVar8 = lVar8 + 0x38;\n          png_free(param_1,*puVar7);\n          lVar3 = *(long *)(param_2 + 0xa0);\n        } while (iVar4 < *(int *)(param_2 + 0x94));\n      }\n      png_free();\n      uVar5 = *(uint *)(param_2 + 300);\n      *(undefined8 *)(param_2 + 0xa0) = 0;\n      *(undefined8 *)(param_2 + 0x94) = 0;\n      uVar2 = param_3 & uVar5;\n      goto LAB_00106e2e;\n    }\n    png_free(param_1,*(undefined8 *)(lVar3 + 8 + (long)param_4 * 0x38));\n    uVar5 = *(uint *)(param_2 + 300);\n    *(undefined8 *)(*(long *)(param_2 + 0xa0) + 8 + (long)param_4 * 0x38) = 0;\n    uVar2 = param_3 & uVar5;\n    if ((uVar2 & 0x2000) != 0) goto LAB_00107200;\nLAB_00106e37:\n    if ((uVar2 & 0x100) != 0) goto LAB_001071a8;\nLAB_00106e40:\n    if ((uVar2 & 0x80) != 0) goto LAB_00107100;\nLAB_00106e48:\n    if ((uVar2 & 0x10) != 0) goto LAB_001070a0;\nLAB_00106e50:\n    lVar3 = *(long *)(param_2 + 0x140);\n  }\n  if ((lVar3 != 0) && ((uVar2 & 0x20) != 0)) {\n    if (param_4 != -1) {\n      lVar8 = (long)param_4 * 0x20;\n      png_free(param_1,*(undefined8 *)(lVar3 + lVar8));\n      png_free(param_1,*(undefined8 *)(*(long *)(param_2 + 0x140) + 0x10 + lVar8));\n      uVar5 = *(uint *)(param_2 + 300);\n      lVar3 = *(long *)(param_2 + 0x130);\n      puVar7 = (undefined8 *)(lVar8 + *(long *)(param_2 + 0x140));\n      *puVar7 = 0;\n      uVar2 = param_3 & uVar5;\n      puVar7[2] = 0;\n      goto joined_r0x0010735b;\n    }\n    lVar8 = 0;\n    if (0 < *(int *)(param_2 + 0x148)) {\n      do {\n        png_free(param_1,*(undefined8 *)(lVar3 + lVar8 * 0x20));\n        png_free(param_1,*(undefined8 *)(*(long *)(param_2 + 0x140) + 0x10 + lVar8 * 0x20));\n        iVar4 = (int)(lVar8 + 1);\n        lVar3 = *(long *)(param_2 + 0x140);\n        lVar8 = lVar8 + 1;\n      } while (*(int *)(param_2 + 0x148) != iVar4 && iVar4 <= *(int *)(param_2 + 0x148));\n    }\n    png_free(param_1);\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffffdfff;\n    uVar5 = *(uint *)(param_2 + 300);\n    *(undefined8 *)(param_2 + 0x140) = 0;\n    *(undefined4 *)(param_2 + 0x148) = 0;\n    uVar2 = param_3 & uVar5;\n  }\n  lVar3 = *(long *)(param_2 + 0x130);\njoined_r0x0010735b:\n  if ((lVar3 != 0) && ((uVar2 & 0x200) != 0)) {\n    if (param_4 == -1) {\n      lVar8 = 0;\n      if (0 < *(int *)(param_2 + 0x138)) {\n        do {\n          png_free(param_1,*(undefined8 *)(lVar3 + 8 + lVar8 * 0x20));\n          iVar4 = (int)(lVar8 + 1);\n          lVar3 = *(long *)(param_2 + 0x130);\n          lVar8 = lVar8 + 1;\n        } while (*(int *)(param_2 + 0x138) != iVar4 && iVar4 <= *(int *)(param_2 + 0x138));\n      }\n      png_free(param_1);\n      uVar5 = *(uint *)(param_2 + 300);\n      *(undefined8 *)(param_2 + 0x130) = 0;\n      *(undefined4 *)(param_2 + 0x138) = 0;\n      uVar2 = param_3 & uVar5;\n    }\n    else {\n      png_free(param_1,*(undefined8 *)(lVar3 + 8 + (long)param_4 * 0x20));\n      uVar5 = *(uint *)(param_2 + 300);\n      *(undefined8 *)(*(long *)(param_2 + 0x130) + 8 + (long)param_4 * 0x20) = 0;\n      uVar2 = param_3 & uVar5;\n    }\n  }\n  if ((uVar2 & 0x8000) != 0) {\n    if (*(long *)(param_2 + 0xf8) != 0) {\n      png_free(param_1);\n      *(undefined8 *)(param_2 + 0xf8) = 0;\n    }\n    if (*(long *)(param_2 + 0xf0) != 0) {\n      png_free(param_1);\n      *(undefined8 *)(param_2 + 0xf0) = 0;\n    }\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xfffeffff;\n    uVar5 = *(uint *)(param_2 + 300);\n    uVar2 = param_3 & uVar5;\n  }\n  if ((uVar2 & 8) != 0) {\n    png_free(param_1,*(undefined8 *)(param_2 + 0x100));\n    uVar5 = *(uint *)(param_2 + 300);\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffffffbf;\n    *(undefined8 *)(param_2 + 0x100) = 0;\n    uVar2 = param_3 & uVar5;\n  }\n  if ((uVar2 & 0x1000) != 0) {\n    png_free(param_1,*(undefined8 *)(param_2 + 0x18));\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xfffffff7;\n    *(undefined2 *)(param_2 + 0x20) = 0;\n    uVar5 = *(uint *)(param_2 + 300);\n    *(undefined8 *)(param_2 + 0x18) = 0;\n    uVar2 = param_3 & uVar5;\n  }\n  if ((uVar2 & 0x40) != 0) {\n    lVar3 = *(long *)(param_2 + 0x160);\n    if (lVar3 != 0) {\n      if (*(int *)(param_2 + 4) != 0) {\n        uVar6 = 0;\n        do {\n          uVar5 = (int)uVar6 + 1;\n          png_free(param_1,*(undefined8 *)(lVar3 + uVar6 * 8));\n          lVar3 = *(long *)(param_2 + 0x160);\n          uVar6 = (ulong)uVar5;\n        } while (uVar5 < *(uint *)(param_2 + 4));\n      }\n      png_free(param_1);\n      uVar5 = *(uint *)(param_2 + 300);\n      *(undefined8 *)(param_2 + 0x160) = 0;\n    }\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & 0xffff7fff;\n  }\n  if (param_4 != -1) {\n    param_3 = param_3 & 0xffffbddf;\n  }\n  *(uint *)(param_2 + 300) = ~param_3 & uVar5;\n  return;\n}\n\n", "png_get_uint_31": "\nvoid png_get_uint_31(undefined8 param_1,byte *param_2)\n\n{\n  if (-1 < (int)((uint)param_2[1] * 0x10000 + (uint)*param_2 * 0x1000000 + (uint)param_2[3] +\n                (uint)param_2[2] * 0x100)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"PNG unsigned integer out of range\");\n}\n\n", "png_set_strip_alpha": "\nvoid png_set_strip_alpha(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x40000;\n  }\n  return;\n}\n\n", "png_set_unknown_chunks": "\nvoid png_set_unknown_chunks(long param_1,long param_2,undefined4 *param_3,int param_4)\n\n{\n  undefined4 uVar1;\n  size_t __n;\n  undefined uVar2;\n  long lVar3;\n  void *__dest;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (((param_2 != 0) && (0 < param_4)) && (param_3 != (undefined4 *)0x0)) {\n    lVar3 = FUN_0010cc20(param_1,*(undefined8 *)(param_2 + 0x130),*(undefined4 *)(param_2 + 0x138),\n                         param_4,0x20);\n    if (lVar3 == 0) {\n      FUN_0010b520(param_1,\"too many unknown chunks\",1);\n      return;\n    }\n    png_free(param_1,*(undefined8 *)(param_2 + 0x130));\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x200;\n    *(long *)(param_2 + 0x130) = lVar3;\n    puVar5 = param_3 + ((ulong)(param_4 - 1) + 1) * 8;\n    puVar4 = (undefined4 *)((long)*(int *)(param_2 + 0x138) * 0x20 + lVar3);\n    do {\n      uVar1 = *param_3;\n      uVar2 = *(undefined *)(param_3 + 6);\n      *(undefined *)(puVar4 + 1) = 0;\n      *puVar4 = uVar1;\n      uVar2 = FUN_0011ee60(param_1,uVar2);\n      lVar3 = *(long *)(param_3 + 4);\n      *(undefined *)(puVar4 + 6) = uVar2;\n      if (lVar3 == 0) {\n        *(undefined8 *)(puVar4 + 2) = 0;\n        *(undefined8 *)(puVar4 + 4) = 0;\nLAB_00120970:\n        *(int *)(param_2 + 0x138) = *(int *)(param_2 + 0x138) + 1;\n        puVar4 = puVar4 + 8;\n      }\n      else {\n        __dest = (void *)FUN_0010cbb0(param_1);\n        *(void **)(puVar4 + 2) = __dest;\n        if (__dest != (void *)0x0) {\n          __n = *(size_t *)(param_3 + 4);\n          memcpy(__dest,*(void **)(param_3 + 2),__n);\n          *(size_t *)(puVar4 + 4) = __n;\n          goto LAB_00120970;\n        }\n        FUN_0010b520(param_1,\"unknown chunk: out of memory\",1);\n      }\n      param_3 = param_3 + 8;\n    } while (param_3 != puVar5);\n  }\n  return;\n}\n\n", "fopen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "inflateInit2_": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflateInit2_(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_calloc": "\nvoid * png_calloc(undefined8 param_1,size_t param_2)\n\n{\n  void *__s;\n  \n  __s = (void *)png_malloc();\n  if (__s != (void *)0x0) {\n    __s = memset(__s,0,param_2);\n  }\n  return __s;\n}\n\n", "png_free": "\nvoid png_free(long param_1,void *param_2)\n\n{\n  if ((param_1 == 0) || (param_2 == (void *)0x0)) {\n    return;\n  }\n  if (*(code **)(param_1 + 0x3f8) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x0010ce3a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x3f8))();\n    return;\n  }\n  if ((param_1 != 0) && (param_2 != (void *)0x0)) {\n    free(param_2);\n    return;\n  }\n  return;\n}\n\n", "png_save_uint_16": "\nvoid png_save_uint_16(ushort *param_1,ushort param_2)\n\n{\n  *param_1 = param_2 << 8 | param_2 >> 8;\n  return;\n}\n\n", "png_read_info": "\nvoid png_read_info(long param_1,long param_2)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_00119be0();\n    while( true ) {\n      uVar1 = FUN_0011d820(param_1);\n      iVar3 = *(int *)(param_1 + 0x218);\n      uVar2 = *(uint *)(param_1 + 300);\n      if (iVar3 == 0x49444154) break;\n      if ((uVar2 & 4) != 0) {\n        *(uint *)(param_1 + 300) = uVar2 | 0x2008;\n      }\n      if (iVar3 == 0x49484452) {\n        FUN_0011a560(param_1,param_2,uVar1);\n      }\n      else if (iVar3 == 0x49454e44) {\n        FUN_0011aa40(param_1,param_2,uVar1);\n      }\n      else {\n        iVar4 = FUN_001077c0(param_1,iVar3);\n        if (iVar4 == 0) {\n          if (iVar3 == 0x504c5445) {\n            FUN_0011a760(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x624b4744) {\n            FUN_0011bd80(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x6348524d) {\n            FUN_0011add0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x65584966) {\n            FUN_0011c040(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x67414d41) {\n            FUN_0011aab0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x68495354) {\n            FUN_0011c240(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x6f464673) {\n            FUN_0011c520(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x7043414c) {\n            FUN_0011c6b0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x7343414c) {\n            FUN_0011c9f0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x70485973) {\n            FUN_0011c3c0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x73424954) {\n            FUN_0011aba0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x73524742) {\n            FUN_0011aff0(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x69434350) {\n            FUN_0011b110(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x73504c54) {\n            FUN_0011b820(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x74455874) {\n            FUN_0011cd90(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x74494d45) {\n            FUN_0011cc80(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x74524e53) {\n            FUN_0011bb10(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x7a545874) {\n            FUN_0011cf40(param_1,param_2,uVar1);\n          }\n          else if (iVar3 == 0x69545874) {\n            FUN_0011d1c0(param_1,param_2,uVar1);\n          }\n          else {\n            FUN_0011d520(param_1,param_2,uVar1,0);\n          }\n        }\n        else {\n          FUN_0011d520(param_1,param_2,uVar1,iVar4);\n          if (iVar3 == 0x504c5445) {\n            *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 2;\n          }\n        }\n      }\n    }\n    if ((uVar2 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error(param_1,\"Missing IHDR before IDAT\");\n    }\n    if ((*(char *)(param_1 + 0x267) == '\\x03') && ((uVar2 & 2) == 0)) {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error(param_1,\"Missing PLTE before IDAT\");\n    }\n    if ((uVar2 & 8) != 0) {\n      png_chunk_benign_error(param_1,\"Too many IDATs found\");\n      uVar2 = *(uint *)(param_1 + 300);\n    }\n    *(uint *)(param_1 + 300) = uVar2 | 4;\n    iVar3 = FUN_001077c0(param_1,0x49444154);\n    if (iVar3 != 0) {\n      FUN_0011d520(param_1,param_2,uVar1,iVar3);\n      *(undefined4 *)(param_1 + 0x248) = 0;\n      return;\n    }\n    *(undefined4 *)(param_1 + 0x248) = uVar1;\n  }\n  return;\n}\n\n", "gmtime": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\ntm * gmtime(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_sig_cmp": "\nint png_sig_cmp(long param_1,ulong param_2,ulong param_3)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_18 = 0xa1a0a0d474e5089;\n  if (param_3 < 9) {\n    if (param_3 != 0) goto LAB_00106851;\n  }\n  else {\n    param_3 = 8;\nLAB_00106851:\n    if (param_2 < 8) {\n      if (8 < param_3 + param_2) {\n        param_3 = 8 - param_2;\n      }\n      iVar1 = memcmp((void *)(param_1 + param_2),(void *)((long)&local_18 + param_2),param_3);\n      goto LAB_0010687a;\n    }\n  }\n  iVar1 = -1;\nLAB_0010687a:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "inflateReset": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflateReset(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_malloc": "\nlong png_malloc(long param_1)\n\n{\n  long lVar1;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  lVar1 = FUN_0010cbb0();\n  if (lVar1 != 0) {\n    return lVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Out of memory\");\n}\n\n", "png_set_gray_to_rgb": "\nvoid png_set_gray_to_rgb(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 == 0) {\n    return;\n  }\n  png_set_expand_gray_1_2_4_to_8(param_1);\n  *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x4000;\n  return;\n}\n\n", "png_set_packswap": "\nvoid png_set_packswap(long param_1)\n\n{\n  if ((param_1 != 0) && (*(byte *)(param_1 + 0x268) < 8)) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x10000;\n  }\n  return;\n}\n\n", "png_set_expand_16": "\nvoid png_set_expand_16(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x2001200;\n  }\n  return;\n}\n\n", "fwrite": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "__fprintf_chk": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_convert_to_rfc1123_buffer": "\nundefined8 png_convert_to_rfc1123_buffer(long param_1,ushort *param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  undefined local_35 [5];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = 0;\n    uVar3 = 0;\n    if ((((*param_2 < 10000) && ((byte)(*(char *)(param_2 + 1) - 1U) < 0xc)) &&\n        ((byte)(*(char *)((long)param_2 + 3) - 1U) < 0x1f)) &&\n       (((uVar1 = uVar3, *(byte *)(param_2 + 2) < 0x18 && (*(byte *)((long)param_2 + 5) < 0x3c)) &&\n        (*(byte *)(param_2 + 3) < 0x3d)))) {\n      uVar1 = FUN_0010ae00(local_35,&local_30,1);\n      uVar2 = FUN_0010adb0(param_1,0x1d,0,uVar1);\n      if (uVar2 < 0x1c) {\n        *(undefined *)(param_1 + uVar2) = 0x20;\n        uVar2 = uVar2 + 1;\n      }\n      uVar2 = FUN_0010adb0(param_1,0x1d,uVar2,\n                           &DAT_00129b80 + (long)(int)(*(byte *)(param_2 + 1) - 1) * 4);\n      if (uVar2 < 0x1c) {\n        *(undefined *)(param_1 + uVar2) = 0x20;\n        uVar2 = uVar2 + 1;\n      }\n      uVar1 = FUN_0010ae00(local_35,&local_30,1,*param_2);\n      uVar2 = FUN_0010adb0(param_1,0x1d,uVar2,uVar1);\n      if (uVar2 < 0x1c) {\n        *(undefined *)(param_1 + uVar2) = 0x20;\n        uVar2 = uVar2 + 1;\n      }\n      uVar1 = FUN_0010ae00(local_35,&local_30,2,*(undefined *)(param_2 + 2));\n      uVar2 = FUN_0010adb0(param_1,0x1d,uVar2,uVar1);\n      if (uVar2 < 0x1c) {\n        *(undefined *)(param_1 + uVar2) = 0x3a;\n        uVar2 = uVar2 + 1;\n      }\n      uVar1 = FUN_0010ae00(local_35,&local_30,2,*(undefined *)((long)param_2 + 5));\n      uVar2 = FUN_0010adb0(param_1,0x1d,uVar2,uVar1);\n      if (uVar2 < 0x1c) {\n        *(undefined *)(param_1 + uVar2) = 0x3a;\n        uVar2 = uVar2 + 1;\n      }\n      uVar1 = FUN_0010ae00(local_35,&local_30,2,*(undefined *)(param_2 + 3));\n      uVar1 = FUN_0010adb0(param_1,0x1d,uVar2,uVar1);\n      FUN_0010adb0(param_1,0x1d,uVar1,\" +0000\");\n      uVar1 = 1;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_bgr": "\nvoid png_set_bgr(long param_1)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 1;\n  }\n  return;\n}\n\n", "png_longjmp": "\nvoid png_longjmp(long param_1)\n\n{\n  if (((param_1 != 0) && (*(code **)(param_1 + 200) != (code *)0x0)) &&\n     (*(long *)(param_1 + 0xd0) != 0)) {\n    (**(code **)(param_1 + 200))();\n    entry();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", "png_image_write_to_stdio": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong png_image_write_to_stdio\n                (long **param_1,long param_2,undefined4 param_3,long param_4,undefined4 param_5,\n                undefined8 param_6)\n\n{\n  int iVar1;\n  uint uVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  long **local_68;\n  long local_60;\n  undefined local_58 [16];\n  undefined local_48 [16];\n  undefined local_38 [16];\n  undefined local_28 [16];\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != (long **)0x0) {\n    if (*(int *)(param_1 + 1) != 1) {\n      uVar3 = FUN_0010ac60(param_1,\"png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION\");\n      goto LAB_00124439;\n    }\n    if ((param_2 == 0) || (param_4 == 0)) {\n      uVar3 = FUN_0010ac60(param_1,\"png_image_write_to_stdio: invalid argument\");\n      goto LAB_00124439;\n    }\n    iVar1 = FUN_00123650();\n    if (iVar1 != 0) {\n      local_48 = CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20,0),param_3);\n      *(long *)(**param_1 + 0x108) = param_2;\n      local_58 = CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20,0),param_5);\n      local_58 = CONCAT88(param_6,local_58._0_8_);\n      local_38 = (undefined  [16])0x0;\n      local_28 = (undefined  [16])0x0;\n      local_18 = 0;\n      local_68 = param_1;\n      local_60 = param_4;\n      uVar2 = FUN_0010b820(0,param_1,FUN_001239a0,&local_68);\n      uVar3 = (ulong)uVar2;\n      png_image_free(param_1);\n      goto LAB_00124439;\n    }\n  }\n  uVar3 = 0;\nLAB_00124439:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "strerror": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nchar * strerror(int __errnum)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "png_set_cHRM_XYZ_fixed": "\nvoid png_set_cHRM_XYZ_fixed\n               (long param_1,long param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\n               undefined4 param_6,undefined4 param_7,undefined4 param_8,undefined4 param_9,\n               undefined4 param_10,undefined4 param_11)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  undefined4 local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  undefined4 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 != 0) && (param_2 != 0)) {\n    local_38 = param_7;\n    local_34 = param_8;\n    local_30 = param_9;\n    local_2c = param_10;\n    local_28 = param_11;\n    local_48 = param_3;\n    local_44 = param_4;\n    local_40 = param_5;\n    local_3c = param_6;\n    iVar1 = FUN_001095d0(param_1,param_2 + 0x34,&local_48,2);\n    if (iVar1 != 0) {\n      *(ushort *)(param_2 + 0x7e) = *(ushort *)(param_2 + 0x7e) | 0x10;\n    }\n    FUN_00107910(param_1,param_2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_tRNS_to_alpha": "\nvoid png_set_tRNS_to_alpha(void)\n\n{\n  png_set_expand();\n  return;\n}\n\n", "png_set_scale_16": "\nvoid png_set_scale_16(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x4000000;\n  }\n  return;\n}\n\n", "png_set_invert_mono": "\nvoid png_set_invert_mono(long param_1)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x20;\n  }\n  return;\n}\n\n", "entry": "\nvoid entry(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", "FUN_00106220": "\n/* WARNING: Removing unreachable block (ram,0x00106233) */\n/* WARNING: Removing unreachable block (ram,0x0010623f) */\n\nvoid FUN_00106220(void)\n\n{\n  return;\n}\n\n", "FUN_00106250": "\n/* WARNING: Removing unreachable block (ram,0x00106274) */\n/* WARNING: Removing unreachable block (ram,0x00106280) */\n\nvoid FUN_00106250(void)\n\n{\n  return;\n}\n\n", "_FINI_0": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_00135490 != '\\0') {\n    return;\n  }\n  __cxa_finalize(PTR_LOOP_00135488);\n  FUN_00106220();\n  DAT_00135490 = 1;\n  return;\n}\n\n", "_INIT_0": "\nvoid _INIT_0(void)\n\n{\n  FUN_00106250();\n  return;\n}\n\n", "FUN_001062e0": "\nbool FUN_001062e0(int *param_1,int *param_2,int param_3)\n\n{\n  bool bVar1;\n  bool bVar2;\n  \n  bVar2 = false;\n  bVar1 = false;\n  if ((param_2[6] - param_3 <= param_1[6]) && (param_1[6] <= param_2[6] + param_3)) {\n    if ((param_2[7] - param_3 <= param_1[7]) && (bVar2 = bVar1, param_1[7] <= param_2[7] + param_3))\n    {\n      if ((*param_2 - param_3 <= *param_1) && (*param_1 <= *param_2 + param_3)) {\n        if ((param_2[1] - param_3 <= param_1[1]) && (param_1[1] <= param_2[1] + param_3)) {\n          if ((param_2[2] - param_3 <= param_1[2]) && (param_1[2] <= param_2[2] + param_3)) {\n            if ((param_2[3] - param_3 <= param_1[3]) && (param_1[3] <= param_2[3] + param_3)) {\n              if ((param_2[4] - param_3 <= param_1[4]) && (param_1[4] <= param_2[4] + param_3)) {\n                if (param_2[5] - param_3 <= param_1[5]) {\n                  bVar2 = param_1[5] <= param_2[5] + param_3;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return bVar2;\n}\n\n", "FUN_001063b0": "\ndouble FUN_001063b0(uint param_1)\n\n{\n  bool bVar1;\n  double dVar2;\n  double dVar3;\n  \n  if ((int)param_1 < 0) {\n    if ((int)param_1 < -0x133) {\n      return 0.0;\n    }\n    param_1 = -param_1;\n    bVar1 = true;\n  }\n  else {\n    if (param_1 == 0) {\n      return 1.0;\n    }\n    bVar1 = false;\n  }\n  dVar2 = 10.0;\n  dVar3 = 1.0;\n  do {\n    if ((param_1 & 1) != 0) {\n      dVar3 = dVar3 * dVar2;\n    }\n    dVar2 = dVar2 * dVar2;\n    param_1 = (int)param_1 >> 1;\n  } while (param_1 != 0);\n  if (!bVar1) {\n    return dVar3;\n  }\n  return 1.0 / dVar3;\n}\n\n", "FUN_00106430": "\nundefined8 FUN_00106430(long param_1,uint param_2,uint param_3)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 != 0) {\n    uVar1 = png_malloc_warn(param_1,(ulong)param_2 * (ulong)param_3);\n    return uVar1;\n  }\n  return 0;\n}\n\n", "FUN_00106470": "\nundefined4\nFUN_00106470(undefined8 param_1,long param_2,undefined8 *param_3,undefined8 *param_4,int param_5)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  int iVar9;\n  ushort uVar10;\n  \n  uVar10 = *(ushort *)(param_2 + 0x4a);\n  if ((short)uVar10 < 0) {\n    return 0;\n  }\n  if ((param_5 < 2) && ((uVar10 & 2) != 0)) {\n    iVar9 = FUN_001062e0(param_3,param_2 + 4,100);\n    if (iVar9 == 0) {\n      *(ushort *)(param_2 + 0x4a) = uVar10 | 0x8000;\n      png_benign_error(param_1,\"inconsistent chromaticities\");\n      return 0;\n    }\n    if (param_5 == 0) {\n      return 1;\n    }\n  }\n  uVar1 = *param_3;\n  uVar2 = param_3[1];\n  uVar3 = param_3[2];\n  uVar4 = param_3[3];\n  uVar5 = *param_4;\n  uVar6 = param_4[1];\n  *(undefined4 *)(param_2 + 0x44) = *(undefined4 *)(param_4 + 4);\n  uVar7 = param_4[2];\n  uVar8 = param_4[3];\n  *(undefined8 *)(param_2 + 4) = uVar1;\n  *(undefined8 *)(param_2 + 0xc) = uVar2;\n  *(ushort *)(param_2 + 0x4a) = uVar10 | 2;\n  *(undefined8 *)(param_2 + 0x14) = uVar3;\n  *(undefined8 *)(param_2 + 0x1c) = uVar4;\n  *(undefined8 *)(param_2 + 0x24) = uVar5;\n  *(undefined8 *)(param_2 + 0x2c) = uVar6;\n  *(undefined8 *)(param_2 + 0x34) = uVar7;\n  *(undefined8 *)(param_2 + 0x3c) = uVar8;\n  iVar9 = FUN_001062e0(uVar1,uVar3,uVar5,uVar7);\n  if (iVar9 == 0) {\n    *(ushort *)(param_2 + 0x4a) = uVar10 & 0xffbf | 2;\n    return 2;\n  }\n  *(ushort *)(param_2 + 0x4a) = uVar10 | 0x42;\n  return 2;\n}\n\n", "FUN_00106590": "\nbool FUN_00106590(ulong param_1)\n\n{\n  return (param_1 & 0xffffffffffffffdf) - 0x41 < 0x1a;\n}\n\n", "FUN_001065b0": "\nundefined8\nFUN_001065b0(undefined8 param_1,long param_2,undefined8 param_3,ulong param_4,undefined8 param_5)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  long lVar4;\n  byte bVar5;\n  byte bVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined auStack296 [24];\n  undefined local_110 [8];\n  byte local_108 [200];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0) {\n    *(ushort *)(param_2 + 0x4a) = *(ushort *)(param_2 + 0x4a) | 0x8000;\n  }\n  lVar2 = FUN_0010adb0(local_108,0xc4,0,\"profile \\'\");\n  uVar3 = FUN_0010adb0(local_108,lVar2 + 0x4f,lVar2,param_3);\n  lVar2 = FUN_0010adb0(local_108,0xc4,uVar3);\n  if (((param_4 >> 0x18) - 0x30 < 10) || (param_4 >> 0x18 == 0x20)) {\nLAB_001066f8:\n    uVar7 = param_4 >> 0x10 & 0xff;\n    if ((9 < uVar7 - 0x30) && (uVar7 != 0x20)) {\n      iVar1 = FUN_00106590();\n      if (iVar1 == 0) goto LAB_00106661;\n    }\n    bVar6 = (byte)(param_4 >> 8);\n    if ((9 < (ulong)bVar6 - 0x30) && ((ulong)bVar6 != 0x20)) {\n      iVar1 = FUN_00106590();\n      if (iVar1 == 0) goto LAB_00106661;\n    }\n    if ((9 < (param_4 & 0xff) - 0x30) && ((param_4 & 0xff) != 0x20)) {\n      iVar1 = FUN_00106590();\n      if (iVar1 == 0) goto LAB_00106661;\n    }\n    local_108[lVar2] = 0x27;\n    local_108[lVar2 + 5] = 0x27;\n    bVar5 = (byte)((param_4 & 0xffffffff) >> 0x18);\n    if (0x5e < (int)((param_4 & 0xffffffff) >> 0x18) - 0x20U) {\n      bVar5 = 0x3f;\n    }\n    local_108[lVar2 + 1] = bVar5;\n    bVar5 = (byte)((param_4 & 0xffffffff) >> 0x10);\n    if (0x5e < ((uint)((param_4 & 0xffffffff) >> 0x10) & 0xff) - 0x20) {\n      bVar5 = 0x3f;\n    }\n    local_108[lVar2 + 2] = bVar5;\n    if (0x5e < bVar6 - 0x20) {\n      bVar6 = 0x3f;\n    }\n    if (0x5e < ((uint)param_4 & 0xff) - 0x20) {\n      param_4 = 0x3f;\n    }\n    local_108[lVar2 + 3] = bVar6;\n    local_108[lVar2 + 4] = (byte)param_4;\n    lVar4 = lVar2 + 8;\n    local_108[lVar2 + 6] = 0x3a;\n    local_108[lVar2 + 7] = 0x20;\n  }\n  else {\n    iVar1 = FUN_00106590();\n    if (iVar1 != 0) goto LAB_001066f8;\nLAB_00106661:\n    uVar3 = FUN_0010ae00(auStack296,local_110,3,param_4);\n    uVar3 = FUN_0010adb0(local_108,0xc4,lVar2,uVar3);\n    lVar4 = FUN_0010adb0(local_108,0xc4,uVar3,&DAT_0012902a);\n  }\n  FUN_0010adb0(local_108,0xc4,lVar4,param_5);\n  FUN_0010b520(param_1,local_108,(param_2 != 0) + '\\x01');\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_sig_bytes": "\nvoid png_set_sig_bytes(long param_1,int param_2)\n\n{\n  if (param_1 != 0) {\n    if (param_2 < 0) {\n      param_2 = 0;\n    }\n    else if (8 < param_2) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Too many bytes for PNG signature\");\n    }\n    *(char *)(param_1 + 0x26d) = (char)param_2;\n  }\n  return;\n}\n\n", "FUN_001068b0": "\nvoid FUN_001068b0(long param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = crc32(0,0,0);\n  *(undefined4 *)(param_1 + 0x24c) = uVar1;\n  return;\n}\n\n", "FUN_001068d0": "\nvoid FUN_001068d0(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  if ((*(byte *)(param_1 + 0x21b) & 0x20) == 0) {\n    if ((*(uint *)(param_1 + 0x130) & 0x800) != 0) {\n      return;\n    }\n  }\n  else if ((*(uint *)(param_1 + 0x130) & 0x300) == 0x300) {\n    return;\n  }\n  if (param_3 != 0) {\n    uVar1 = (ulong)*(uint *)(param_1 + 0x24c);\n    do {\n      uVar2 = param_3 & 0xffffffff;\n      uVar3 = param_3 & 0xffffffff;\n      if ((int)param_3 == 0) {\n        uVar3 = 0xffffffff;\n        uVar2 = 0xffffffff;\n      }\n      uVar1 = crc32(uVar1,param_2,uVar2);\n      param_3 = param_3 - uVar3;\n      param_2 = param_2 + uVar3;\n    } while (param_3 != 0);\n    *(int *)(param_1 + 0x24c) = (int)uVar1;\n  }\n  return;\n}\n\n", "FUN_00106960": "\n/* WARNING: Removing unreachable block (ram,0x001069e6) */\n\nundefined8 FUN_00106960(long param_1,long param_2)\n\n{\n  char cVar1;\n  char cVar2;\n  bool bVar3;\n  long lVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  undefined auStack168 [136];\n  long local_20;\n  \n  uVar6 = *(uint *)(param_1 + 0x130);\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar4 = 0;\n  if (param_2 == 0) {\n    *(uint *)(param_1 + 0x130) = uVar6 | 0x20000;\n  }\n  else {\n    bVar3 = false;\n    do {\n      cVar1 = *(char *)(param_2 + lVar4);\n      cVar2 = (&DAT_0012902e)[lVar4];\n      if (cVar1 != cVar2) {\n        uVar6 = uVar6 | 0x20000;\n        *(uint *)(param_1 + 0x130) = uVar6;\n      }\n      if (cVar1 == '.') {\n        if (bVar3) break;\n        bVar3 = true;\n      }\n      else if (cVar1 == '\\0') break;\n      lVar4 = lVar4 + 1;\n    } while (cVar2 != '\\0');\n    uVar5 = 1;\n    if ((uVar6 & 0x20000) == 0) goto LAB_001069ff;\n  }\n  uVar5 = FUN_0010adb0(auStack168,0x80,0,\"Application built with libpng-\");\n  uVar5 = FUN_0010adb0(auStack168,0x80,uVar5,param_2);\n  uVar5 = FUN_0010adb0(auStack168,0x80,uVar5,\" but running with \");\n  FUN_0010adb0(auStack168,0x80,uVar5,&DAT_0012902e);\n  png_warning(param_1,auStack168);\n  uVar5 = 0;\nLAB_001069ff:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar5;\n}\n\n", "FUN_00106ab0": "\nulong * FUN_00106ab0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined8 param_5,undefined8 param_6,undefined8 param_7)\n\n{\n  int iVar1;\n  ulong *puVar2;\n  long lVar3;\n  ulong *puVar4;\n  ulong *puVar5;\n  long in_FS_OFFSET;\n  byte bVar6;\n  __jmp_buf_tag local_5f8;\n  code *local_460;\n  __jmp_buf_tag *local_458;\n  undefined8 local_450;\n  code *local_3a8;\n  code *local_3a0;\n  ulong *local_398;\n  undefined4 local_104;\n  undefined8 local_100;\n  undefined8 local_f8;\n  long local_30;\n  \n  bVar6 = 0;\n  puVar4 = local_5f8.__saved_mask.__val + 0x11;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  puVar2 = puVar4;\n  for (lVar3 = 0x9e; lVar3 != 0; lVar3 = lVar3 + -1) {\n    *puVar2 = 0;\n    puVar2 = puVar2 + 1;\n  }\n  local_100 = 0x3e8000f4240;\n  local_104 = 1000000;\n  local_f8 = 8000000;\n  png_set_mem_fn(puVar4,param_5,param_6,param_7);\n  png_set_error_fn(puVar4,param_2,param_3,param_4);\n  iVar1 = _setjmp(&local_5f8);\n  if (iVar1 == 0) {\n    local_458 = &local_5f8;\n    puVar4 = local_5f8.__saved_mask.__val + 0x11;\n    local_450 = 0;\n    local_460 = __longjmp_chk;\n    iVar1 = FUN_00106960(puVar4,param_1);\n    if (iVar1 != 0) {\n      puVar2 = (ulong *)png_malloc_warn(puVar4,0x4f0);\n      if (puVar2 != (ulong *)0x0) {\n        local_398 = puVar2;\n        local_458 = (__jmp_buf_tag *)0x0;\n        local_3a8 = FUN_00106430;\n        local_450 = 0;\n        local_3a0 = png_free;\n        local_460 = (code *)0x0;\n        puVar5 = puVar2;\n        for (lVar3 = 0x9e; lVar3 != 0; lVar3 = lVar3 + -1) {\n          *puVar5 = *puVar4;\n          puVar4 = puVar4 + (ulong)bVar6 * -2 + 1;\n          puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n        }\n      }\n      goto LAB_00106c12;\n    }\n  }\n  puVar2 = (ulong *)0x0;\nLAB_00106c12:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return puVar2;\n}\n\n", "png_info_init_3": "\nvoid png_info_init_3(undefined8 *param_1,ulong param_2)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  byte bVar3;\n  \n  bVar3 = 0;\n  puVar1 = (undefined8 *)*param_1;\n  if (puVar1 == (undefined8 *)0x0) {\n    return;\n  }\n  if (param_2 < 0x168) {\n    *param_1 = 0;\n    free(puVar1);\n    puVar1 = (undefined8 *)FUN_0010cbb0(0,0x168);\n    if (puVar1 == (undefined8 *)0x0) {\n      return;\n    }\n    *param_1 = puVar1;\n  }\n  *puVar1 = 0;\n  puVar1[0x2c] = 0;\n  uVar2 = (ulong)(((int)puVar1 - (int)(undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8)) +\n                  0x168U >> 3);\n  puVar1 = (undefined8 *)((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n  for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n    *puVar1 = 0;\n    puVar1 = puVar1 + (ulong)bVar3 * -2 + 1;\n  }\n  return;\n}\n\n", "png_data_freer": "\nvoid png_data_freer(long param_1,long param_2,int param_3,uint param_4)\n\n{\n  if ((param_1 == 0) || (param_2 == 0)) {\n    return;\n  }\n  if (param_3 == 1) {\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | param_4;\n    return;\n  }\n  if (param_3 == 2) {\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) & ~param_4;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Unknown freer parameter in png_data_freer\");\n}\n\n", "png_get_io_ptr": "\nundefined8 png_get_io_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 0x108);\n  }\n  return 0;\n}\n\n", "png_init_io": "\nvoid png_init_io(long param_1,undefined8 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x108) = param_2;\n  }\n  return;\n}\n\n", "png_convert_to_rfc1123": "\nlong png_convert_to_rfc1123(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = 0;\n  if (param_1 != 0) {\n    lVar2 = param_1 + 0x38c;\n    iVar1 = png_convert_to_rfc1123_buffer(lVar2);\n    if (iVar1 == 0) {\n      png_warning(param_1,\"Ignoring invalid time value\");\n      return 0;\n    }\n  }\n  return lVar2;\n}\n\n", "png_get_copyright": "\nchar * png_get_copyright(void)\n\n{\n  return \n  \"\\nlibpng version 1.6.38\\nCopyright (c) 2018-2022 Cosmin Truta\\nCopyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson\\nCopyright (c) 1996-1997 Andreas Dilger\\nCopyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\\n\"\n  ;\n}\n\n", "png_get_libpng_ver": "\nvoid png_get_libpng_ver(void)\n\n{\n  png_get_header_ver();\n  return;\n}\n\n", "png_get_header_version": "\nchar * png_get_header_version(void)\n\n{\n  return \" libpng version 1.6.38 - September 14, 2022\\n\\n\";\n}\n\n", "png_build_grayscale_palette": "\nvoid png_build_grayscale_palette(int param_1,undefined *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined uVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  uint uVar7;\n  \n  if ((param_2 != (undefined *)0x0) && (uVar7 = param_1 - 1, uVar7 < 8)) {\n    iVar1 = *(int *)(&DAT_00129b60 + (ulong)uVar7 * 4);\n    iVar2 = *(int *)(&DAT_00129b40 + (ulong)uVar7 * 4);\n    if (0 < iVar1) {\n      iVar4 = 0;\n      puVar5 = param_2;\n      do {\n        uVar3 = (undefined)iVar4;\n        *puVar5 = uVar3;\n        puVar6 = puVar5 + 3;\n        puVar5[1] = uVar3;\n        puVar5[2] = uVar3;\n        iVar4 = iVar4 + iVar2;\n        puVar5 = puVar6;\n      } while (puVar6 != param_2 + (ulong)(iVar1 - 1) * 3 + 3);\n    }\n  }\n  return;\n}\n\n", "FUN_001077c0": "\nvoid FUN_001077c0(undefined8 param_1,uint param_2)\n\n{\n  long in_FS_OFFSET;\n  uint local_15;\n  undefined local_11;\n  long local_10;\n  \n  local_15 = param_2 >> 0x18 | (param_2 & 0xff0000) >> 8 | (param_2 & 0xff00) << 8 | param_2 << 0x18\n  ;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_11 = 0;\n  png_handle_as_unknown(param_1,&local_15);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_reset_zstream": "\nundefined8 png_reset_zstream(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 != 0) {\n    uVar1 = inflateReset(param_1 + 0x140);\n    return uVar1;\n  }\n  return 0xfffffffe;\n}\n\n", "png_access_version_number": "\nundefined8 png_access_version_number(void)\n\n{\n  return 0x298e;\n}\n\n", "FUN_00107840": "\nvoid FUN_00107840(long param_1,undefined4 param_2)\n\n{\n  if (*(long *)(param_1 + 0x170) != 0) {\n    return;\n  }\n  switch(param_2) {\n  default:\n    *(char **)(param_1 + 0x170) = \"unexpected zlib return code\";\n    return;\n  case 1:\n    *(char **)(param_1 + 0x170) = \"unexpected end of LZ stream\";\n    return;\n  case 2:\n    *(char **)(param_1 + 0x170) = \"missing LZ dictionary\";\n    return;\n  case 0xfffffff9:\n    *(char **)(param_1 + 0x170) = \"unexpected zlib return\";\n    return;\n  case 0xfffffffa:\n    *(char **)(param_1 + 0x170) = \"unsupported zlib version\";\n    return;\n  case 0xfffffffb:\n    *(char **)(param_1 + 0x170) = \"truncated\";\n    return;\n  case 0xfffffffc:\n    *(char **)(param_1 + 0x170) = \"insufficient memory\";\n    return;\n  case 0xfffffffd:\n    *(char **)(param_1 + 0x170) = \"damaged LZ stream\";\n    return;\n  case 0xfffffffe:\n    *(char **)(param_1 + 0x170) = \"bad parameters to zlib\";\n    return;\n  case 0xffffffff:\n    *(char **)(param_1 + 0x170) = \"zlib IO error\";\n    return;\n  }\n}\n\n", "FUN_00107910": "\nvoid FUN_00107910(undefined8 param_1,long param_2)\n\n{\n  ushort uVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar1 = *(ushort *)(param_2 + 0x7e);\n  uVar3 = *(uint *)(param_2 + 8);\n  if (-1 < (short)uVar1) {\n    uVar2 = uVar3 & 0xfffff7ff;\n    if ((uVar1 & 0x80) != 0) {\n      uVar2 = uVar3 | 0x800;\n    }\n    uVar3 = uVar2 & 0xfffffffb;\n    if ((uVar1 & 2) != 0) {\n      uVar3 = uVar2 | 4;\n    }\n    uVar2 = uVar3 | 1;\n    if ((uVar1 & 1) == 0) {\n      uVar2 = uVar3 & 0xfffffffe;\n    }\n    *(uint *)(param_2 + 8) = uVar2;\n    return;\n  }\n  *(uint *)(param_2 + 8) = uVar3 & 0xffffe7fa;\n  png_free_data(param_1,param_2,0x10,0xffffffff);\n  return;\n}\n\n", "FUN_00107970": "\nvoid FUN_00107970(long param_1,long param_2)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  \n  if (param_2 != 0) {\n    uVar2 = *(undefined8 *)(param_1 + 0x4a0);\n    uVar3 = *(undefined8 *)(param_1 + 0x4a8);\n    uVar4 = *(undefined8 *)(param_1 + 0x4b0);\n    uVar5 = *(undefined8 *)(param_1 + 0x4b8);\n    uVar6 = *(undefined8 *)(param_1 + 0x4c0);\n    uVar7 = *(undefined8 *)(param_1 + 0x4c8);\n    *(undefined8 *)(param_2 + 0x74) = *(undefined8 *)(param_1 + 0x4e0);\n    uVar1 = *(undefined4 *)(param_1 + 0x4e8);\n    uVar8 = *(undefined8 *)(param_1 + 0x4d0);\n    uVar9 = *(undefined8 *)(param_1 + 0x4d8);\n    *(undefined8 *)(param_2 + 0x34) = uVar2;\n    *(undefined8 *)(param_2 + 0x3c) = uVar3;\n    *(undefined4 *)(param_2 + 0x7c) = uVar1;\n    *(undefined8 *)(param_2 + 0x44) = uVar4;\n    *(undefined8 *)(param_2 + 0x4c) = uVar5;\n    *(undefined8 *)(param_2 + 0x54) = uVar6;\n    *(undefined8 *)(param_2 + 0x5c) = uVar7;\n    *(undefined8 *)(param_2 + 100) = uVar8;\n    *(undefined8 *)(param_2 + 0x6c) = uVar9;\n    FUN_00107910(uVar2,uVar4,uVar6,uVar8);\n    return;\n  }\n  return;\n}\n\n", "FUN_001079d0": "\nundefined8 FUN_001079d0(long param_1,undefined8 param_2,undefined8 param_3,uint param_4)\n\n{\n  undefined8 uVar1;\n  \n  if ((0x83 < param_4) || (uVar1 = FUN_001065b0(), (int)uVar1 != 0)) {\n    uVar1 = 1;\n    if ((*(ulong *)(param_1 + 0x430) != 0) &&\n       (uVar1 = 1, *(ulong *)(param_1 + 0x430) < (ulong)param_4)) {\n      uVar1 = FUN_001065b0(param_1,param_2,param_3,(ulong)param_4,\"exceeds application limits\");\n      return uVar1;\n    }\n  }\n  return uVar1;\n}\n\n", "FUN_00107a60": "\nundefined8\nFUN_00107a60(undefined8 param_1,undefined8 param_2,undefined8 param_3,uint param_4,byte *param_5,\n            uint param_6)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  \n  uVar1 = (uint)param_5[2] * 0x100 +\n          (uint)param_5[3] + (uint)param_5[1] * 0x10000 + (uint)*param_5 * 0x1000000;\n  if (uVar1 != param_4) {\n    uVar2 = FUN_001065b0(param_1,param_2,param_3,uVar1,\"length does not match profile\");\n    return uVar2;\n  }\n  if ((3 < param_5[8]) && ((uVar1 & 3) != 0)) {\n    pcVar3 = \"invalid length\";\n    goto LAB_00107c51;\n  }\n  uVar1 = (uint)param_5[0x82] * 0x100 +\n          (uint)param_5[0x83] + (uint)param_5[0x81] * 0x10000 + (uint)param_5[0x80] * 0x1000000;\n  if ((0x1555554a < uVar1) || (param_4 < uVar1 * 0xc + 0x84)) {\n    pcVar3 = \"tag count too large\";\n    goto LAB_00107c51;\n  }\n  pcVar3 = \"invalid rendering intent\";\n  uVar1 = (uint)param_5[0x42] * 0x100 +\n          (uint)param_5[0x43] + (uint)param_5[0x41] * 0x10000 + (uint)param_5[0x40] * 0x1000000;\n  if (0xfffe < uVar1) goto LAB_00107c51;\n  if (3 < uVar1) {\n    FUN_001065b0();\n  }\n  pcVar3 = \"invalid signature\";\n  uVar1 = (uint)param_5[0x26] * 0x100 +\n          (uint)param_5[0x27] + (uint)param_5[0x25] * 0x10000 + (uint)param_5[0x24] * 0x1000000;\n  if (uVar1 != 0x61637370) goto LAB_00107c51;\n  if ((*(long *)(param_5 + 0x44) != 0x100d6f60000) || (*(int *)(param_5 + 0x4c) != 0x2dd30000)) {\n    FUN_001065b0();\n  }\n  uVar1 = (uint)param_5[0x12] * 0x100 +\n          (uint)param_5[0x13] + (uint)param_5[0x11] * 0x10000 + (uint)param_5[0x10] * 0x1000000;\n  if (uVar1 == 0x47524159) {\n    pcVar3 = \"Gray color space not permitted on RGB PNG\";\n    uVar1 = 0x47524159;\n    if ((param_6 & 2) != 0) goto LAB_00107c51;\n  }\n  else {\n    if (uVar1 != 0x52474220) {\n      pcVar3 = \"invalid ICC profile color space\";\n      goto LAB_00107c51;\n    }\n    pcVar3 = \"RGB color space not permitted on grayscale PNG\";\n    uVar1 = 0x52474220;\n    if ((param_6 & 2) == 0) goto LAB_00107c51;\n  }\n  uVar1 = (uint)param_5[0xe] * 0x100 +\n          (uint)param_5[0xf] + (uint)param_5[0xd] * 0x10000 + (uint)param_5[0xc] * 0x1000000;\n  if (uVar1 != 0x6d6e7472) {\n    if (uVar1 < 0x6d6e7473) {\n      if (uVar1 == 0x61627374) {\n        pcVar3 = \"invalid embedded Abstract ICC profile\";\n        uVar1 = 0x61627374;\n        goto LAB_00107c51;\n      }\n      if (uVar1 == 0x6c696e6b) {\n        pcVar3 = \"unexpected DeviceLink ICC profile class\";\n        uVar1 = 0x6c696e6b;\n        goto LAB_00107c51;\n      }\nLAB_00107cd4:\n      FUN_001065b0();\n    }\n    else if (uVar1 == 0x6e6d636c) {\n      FUN_001065b0();\n    }\n    else if ((uVar1 < 0x6e6d636c) ||\n            (((uVar1 != 0x73636e72 && (uVar1 != 0x73706163)) && (uVar1 != 0x70727472))))\n    goto LAB_00107cd4;\n  }\n  uVar1 = (uint)param_5[0x16] * 0x100 +\n          (uint)param_5[0x17] + (uint)param_5[0x15] * 0x10000 + (uint)param_5[0x14] * 0x1000000;\n  if ((uVar1 == 0x4c616220) || (uVar1 == 0x58595a20)) {\n    return 1;\n  }\n  pcVar3 = \"unexpected ICC PCS encoding\";\nLAB_00107c51:\n  uVar2 = FUN_001065b0(param_1,param_2,param_3,uVar1,pcVar3);\n  return uVar2;\n}\n\n", "FUN_00107e00": "\nundefined8\nFUN_00107e00(undefined8 param_1,undefined8 param_2,undefined8 param_3,uint param_4,long param_5)\n\n{\n  byte *pbVar1;\n  int iVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  byte *pbVar5;\n  \n  iVar2 = (uint)*(byte *)(param_5 + 0x81) * 0x10000 + (uint)*(byte *)(param_5 + 0x80) * 0x1000000 +\n          (uint)*(byte *)(param_5 + 0x83) + (uint)*(byte *)(param_5 + 0x82) * 0x100;\n  if (iVar2 != 0) {\n    pbVar5 = (byte *)(param_5 + 0x84);\n    pbVar1 = (byte *)(param_5 + 0x90 + (ulong)(iVar2 - 1) * 0xc);\n    do {\n      while( true ) {\n        iVar2 = (uint)pbVar5[2] * 0x100 +\n                (uint)pbVar5[3] + (uint)pbVar5[1] * 0x10000 + (uint)*pbVar5 * 0x1000000;\n        uVar3 = (uint)pbVar5[6] * 0x100 +\n                (uint)pbVar5[7] + (uint)pbVar5[5] * 0x10000 + (uint)pbVar5[4] * 0x1000000;\n        if ((param_4 < uVar3) ||\n           (param_4 - uVar3 <\n            (uint)pbVar5[9] * 0x10000 + (uint)pbVar5[8] * 0x1000000 + (uint)pbVar5[0xb] +\n            (uint)pbVar5[10] * 0x100)) {\n          uVar4 = FUN_001065b0(param_1,param_2,param_3,iVar2,\"ICC profile tag outside profile\");\n          return uVar4;\n        }\n        if ((uVar3 & 3) == 0) break;\n        FUN_001065b0(param_1,0,param_3,iVar2,\"ICC profile tag start not a multiple of 4\");\n        pbVar5 = pbVar5 + 0xc;\n        if (pbVar5 == pbVar1) {\n          return 1;\n        }\n      }\n      pbVar5 = pbVar5 + 0xc;\n    } while (pbVar5 != pbVar1);\n  }\n  return 1;\n}\n\n", "FUN_00107f60": "\nvoid FUN_00107f60(long param_1,uint param_2,uint param_3,ulong param_4,uint param_5,int param_6,\n                 int param_7,int param_8)\n\n{\n  uint uVar1;\n  uint uVar2;\n  bool bVar3;\n  \n  uVar1 = (uint)param_4;\n  bVar3 = (int)param_2 < 0;\n  if (param_2 == 0) {\n    bVar3 = true;\n    png_warning();\nLAB_00107fa5:\n    if (param_3 != 0) goto LAB_00107fae;\nLAB_0010813e:\n    bVar3 = true;\n    png_warning(param_1);\n    if (uVar1 < 0x11) goto LAB_00107fcb;\nLAB_0010815d:\n    bVar3 = true;\n    png_warning(param_1);\n  }\n  else {\n    if (bVar3) {\n      png_warning();\n      uVar2 = *(uint *)(param_1 + 0x424);\n    }\n    else {\n      uVar2 = *(uint *)(param_1 + 0x424);\n    }\n    if (param_2 <= uVar2) goto LAB_00107fa5;\n    bVar3 = true;\n    png_warning(param_1);\n    if (param_3 == 0) goto LAB_0010813e;\nLAB_00107fae:\n    if ((int)param_3 < 0) {\n      bVar3 = true;\n      png_warning(param_1);\n      uVar2 = *(uint *)(param_1 + 0x428);\n    }\n    else {\n      uVar2 = *(uint *)(param_1 + 0x428);\n    }\n    if (uVar2 < param_3) {\n      bVar3 = true;\n      png_warning(param_1);\n    }\n    if (0x10 < uVar1) goto LAB_0010815d;\nLAB_00107fcb:\n    if ((0x10116U >> (param_4 & 0x3f) & 1) == 0) goto LAB_0010815d;\n  }\n  uVar2 = param_5 & 0xfffffffb;\n  if ((uVar2 == 1) || (6 < param_5)) {\n    bVar3 = true;\n    png_warning(param_1);\n  }\n  if (((param_5 == 3) && (8 < (int)uVar1)) || (((param_5 == 4 || (uVar2 == 2)) && ((int)uVar1 < 8)))\n     ) {\n    bVar3 = true;\n    png_warning(param_1);\n  }\n  if (1 < param_6) {\n    bVar3 = true;\n    png_warning(param_1);\n  }\n  if (param_7 != 0) {\n    bVar3 = true;\n    png_warning(param_1,\"Unknown compression method in IHDR\");\n  }\n  if ((*(byte *)(param_1 + 0x12d) & 0x10) == 0) {\nLAB_001080cf:\n    if ((param_8 == 0) ||\n       (((((*(byte *)(param_1 + 0x3e0) & 4) != 0 && (param_8 == 0x40)) &&\n         ((*(byte *)(param_1 + 0x12d) & 0x10) == 0)) && (uVar2 == 2)))) {\nLAB_00108100:\n      if (!bVar3) {\n        return;\n      }\n      goto LAB_00108087;\n    }\n  }\n  else {\n    if (*(int *)(param_1 + 0x3e0) != 0) {\n      png_warning(param_1,\"MNG features are not allowed in a PNG datastream\");\n      goto LAB_001080cf;\n    }\n    if (param_8 == 0) goto LAB_00108100;\n  }\n  png_warning(param_1,\"Unknown filter method in IHDR\");\n  if ((*(byte *)(param_1 + 0x12d) & 0x10) != 0) {\n    png_warning(param_1,\"Invalid filter method in IHDR\");\n  }\nLAB_00108087:\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Invalid IHDR data\");\n}\n\n", "FUN_00108240": "\nbool FUN_00108240(long param_1,ulong param_2,uint *param_3,ulong *param_4)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  ulong uVar5;\n  \n  uVar5 = *param_4;\n  uVar4 = *param_3;\n  if ((param_2 <= uVar5) || (bVar1 = *(char *)(param_1 + uVar5) - 0x2b, 0x3a < bVar1)) {\n    *param_3 = uVar4;\n    *param_4 = uVar5;\n    return (uVar4 & 8) != 0;\n  }\n  do {\n    switch((long)&switchD_0010827d::switchdataD_001299c8 +\n           (long)(int)(&switchD_0010827d::switchdataD_001299c8)[bVar1]) {\n    case 0x1082b0:\nswitchD_0010827d_caseD_1082b0:\n      uVar2 = uVar4 & 8;\nLAB_001082b6:\n      *param_3 = uVar4;\n      *param_4 = uVar5;\n      return uVar2 != 0;\n    case 0x1082d0:\n      uVar2 = 8;\n      uVar3 = 0x108;\n      break;\n    case 0x1082f8:\n      uVar2 = 0x20;\n      uVar3 = 0x20;\n      break;\n    case 0x108308:\n      uVar2 = 8;\n      uVar3 = 8;\n      break;\n    case 0x108318:\n      uVar2 = 0x10;\n      uVar3 = 0x10;\n      break;\n    case 0x1083f0:\n      uVar2 = 4;\n      uVar3 = 4;\n      break;\n    case 0x108400:\n      uVar2 = 4;\n      uVar3 = 0x84;\n    }\n    switch(uVar4 & 3 | uVar2) {\n    case 4:\n      if ((uVar4 & 0x3c) != 0) goto switchD_0010827d_caseD_1082b0;\n      uVar4 = uVar4 | uVar3;\n      break;\n    default:\n      goto switchD_0010827d_caseD_1082b0;\n    case 6:\n      if ((uVar4 & 0x3c) != 0) goto switchD_0010827d_caseD_1082b0;\n      uVar4 = uVar4 | 4;\n      break;\n    case 8:\n      if ((uVar4 & 0x10) != 0) {\n        uVar4 = uVar4 & 0x1c0 | 0x11;\n      }\n      uVar4 = uVar4 | uVar3 | 0x40;\n      break;\n    case 9:\n      uVar4 = uVar4 | uVar3 | 0x40;\n      break;\n    case 10:\n      uVar4 = uVar4 | 0x48;\n      break;\n    case 0x10:\n      uVar2 = uVar4 & 8;\n      if ((uVar4 & 0x10) != 0) goto LAB_001082b6;\n      if (uVar2 == 0) {\n        uVar4 = uVar4 & 0x1c0 | uVar3 | 1;\n      }\n      else {\n        uVar4 = uVar4 | uVar3;\n      }\n      break;\n    case 0x20:\n    case 0x21:\n      uVar2 = uVar4 & 8;\n      if (uVar2 == 0) goto LAB_001082b6;\n      uVar4 = uVar4 & 0x1c0 | 2;\n    }\n    uVar5 = uVar5 + 1;\n    if ((param_2 == uVar5) || (bVar1 = *(char *)(param_1 + uVar5) - 0x2b, 0x3a < bVar1))\n    goto switchD_0010827d_caseD_1082b0;\n  } while( true );\n}\n\n", "FUN_00108410": "\nulong FUN_00108410(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  long in_FS_OFFSET;\n  uint local_2c;\n  long local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_2c = 0;\n  local_28 = 0;\n  uVar1 = FUN_00108240(param_1,param_2,&local_2c,&local_28);\n  if (((int)uVar1 != 0) &&\n     ((local_28 == param_2 || (uVar1 = 0, *(char *)(param_1 + local_28) == '\\0')))) {\n    uVar1 = (ulong)local_2c;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00108490": "\nvoid FUN_00108490(double param_1,undefined8 param_2,undefined4 *param_3,ulong param_4,uint param_5)\n\n{\n  char *pcVar1;\n  bool bVar2;\n  ulong uVar3;\n  undefined4 *puVar4;\n  char *pcVar5;\n  undefined4 *puVar6;\n  char cVar7;\n  uint uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  undefined2 *puVar11;\n  int iVar12;\n  ulong uVar13;\n  undefined4 *puVar14;\n  undefined4 *puVar15;\n  uint uVar16;\n  undefined2 *puVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  uint uVar21;\n  uint uVar22;\n  long in_FS_OFFSET;\n  double extraout_XMM0_Qa;\n  double extraout_XMM0_Qa_00;\n  double dVar23;\n  undefined auVar24 [16];\n  double dVar25;\n  uint local_5c;\n  double local_58;\n  char local_4b [11];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_5 == 0) {\n    uVar10 = 0x14;\n    uVar22 = 0xf;\n  }\n  else {\n    uVar22 = 0x10;\n    if (param_5 < 0x11) {\n      uVar22 = param_5;\n    }\n    uVar10 = (ulong)(uVar22 + 5);\n  }\n  if (uVar10 <= param_4) {\n    if (param_1 < 0.0) {\n      param_1 = (double)((ulong)param_1 ^ 0x8000000000000000);\n      *(undefined *)param_3 = 0x2d;\n      param_4 = param_4 - 1;\n      param_3 = (undefined4 *)((long)param_3 + 1);\n    }\n    if (param_1 < 2.225073858507201e-308) {\n      *(undefined2 *)param_3 = 0x30;\n    }\n    else if (param_1 <= 1.797693134862316e+308) {\n      frexp(param_1,(int *)&local_5c);\n      uVar20 = (int)(local_5c * 0x4d) >> 8;\n      local_5c = uVar20;\n      FUN_001063b0();\n      auVar24 = ZEXT816((ulong)param_1);\n      uVar10 = (ulong)uVar20;\n      cVar7 = '\\0';\n      dVar25 = extraout_XMM0_Qa;\n      while( true ) {\n        uVar21 = (uint)uVar10;\n        dVar23 = SUB168(auVar24,0);\n        if ((2.225073858507201e-308 <= dVar25) && (dVar23 <= dVar25)) break;\n        uVar10 = (ulong)(uVar21 + 1);\n        FUN_001063b0();\n        auVar24 = auVar24 & (undefined  [16])0xffffffffffffffff;\n        dVar23 = SUB168(auVar24,0);\n        if (1.797693134862316e+308 < extraout_XMM0_Qa_00) break;\n        cVar7 = '\\x01';\n        uVar10 = uVar10 & 0xffffffff;\n        dVar25 = extraout_XMM0_Qa_00;\n      }\n      if (cVar7 != '\\0') {\n        uVar20 = uVar21;\n        local_5c = uVar21;\n      }\n      for (dVar23 = dVar23 / dVar25; 1.0 <= dVar23; dVar23 = dVar23 / 10.0) {\n        uVar20 = uVar20 + 1;\n        local_5c = uVar20;\n      }\n      uVar21 = 0;\n      if (0xfffffffd < uVar20) {\n        local_5c = 0;\n        uVar21 = -uVar20;\n        uVar20 = 0;\n      }\n      uVar19 = 0;\n      uVar16 = uVar21;\n      do {\n        uVar8 = uVar22 + uVar16;\n        if (uVar21 + 1 + uVar19 < uVar8) {\n          dVar23 = modf(dVar23 * 10.0,&local_58);\nLAB_001087ca:\n          if (local_58 != 0.0) {\n            uVar18 = uVar21 + 1 + uVar19;\n            cVar7 = (char)(int)local_58 + '0';\n            puVar6 = param_3;\n            param_3 = (undefined4 *)((long)param_3 + 1);\nLAB_00108705:\n            if (uVar21 != 0) {\n              bVar2 = false;\n              uVar19 = uVar20;\n              while( true ) {\n                puVar15 = (undefined4 *)((long)puVar6 + 2);\n                if (uVar19 == 0xffffffff) {\n                  *(undefined *)puVar6 = 0x30;\n                  puVar6 = param_3;\n                  param_3 = puVar15;\n                }\n                else {\n                  puVar4 = param_3;\n                  puVar14 = puVar15;\n                  if (uVar19 == 0) {\n                    puVar14 = (undefined4 *)((long)puVar6 + 3);\n                    *(undefined *)puVar6 = 0x2e;\n                    param_4 = param_4 - 1;\n                    puVar4 = puVar15;\n                    puVar6 = param_3;\n                  }\n                  uVar19 = uVar19 - 1;\n                  bVar2 = true;\n                  *(undefined *)puVar6 = 0x30;\n                  puVar6 = puVar4;\n                  param_3 = puVar14;\n                }\n                if (uVar21 == 1) break;\n                uVar21 = uVar21 - 1;\n                param_3 = (undefined4 *)((long)puVar6 + 1);\n              }\n              if (bVar2) {\n                uVar20 = uVar19;\n                local_5c = uVar19;\n              }\n            }\n            goto LAB_00108770;\n          }\n          uVar18 = uVar19 + uVar21 + 1;\n          uVar21 = uVar21 + 1;\n          if (uVar19 == 0) {\n            uVar16 = uVar16 + 1;\n            uVar8 = uVar22 + uVar16;\n            uVar21 = uVar18;\n          }\n        }\n        else {\n          local_58 = dVar23 * 10.0 + 0.5;\n          if (local_58 < 4503599627370496.0) {\n            local_58 = (double)((ulong)local_58 |\n                               (ulong)((double)(long)local_58 -\n                                      (double)(-(ulong)(local_58 < (double)(long)local_58) &\n                                              0x3ff0000000000000)));\n          }\n          if (local_58 <= 9.0) {\nLAB_001087b8:\n            dVar23 = 0.0;\n            goto LAB_001087ca;\n          }\n          if (uVar21 != 0) {\n            local_58 = 1.0;\n            uVar18 = uVar21 + uVar19;\n            puVar6 = param_3;\n            param_3 = (undefined4 *)((long)param_3 + 1);\n            if (uVar19 == 0) {\n              uVar16 = uVar16 - 1;\n              cVar7 = '1';\n              dVar23 = 0.0;\n              uVar21 = uVar21 - 1;\n            }\n            else {\n              cVar7 = '1';\n              dVar23 = 0.0;\n              uVar21 = uVar21 - 1;\n            }\n            goto LAB_00108705;\n          }\n          bVar2 = false;\n          uVar18 = 1;\n          puVar6 = param_3;\n          if (uVar19 != 0) {\n            do {\n              uVar18 = uVar19;\n              iVar12 = (int)*(char *)((long)puVar6 + -1);\n              param_3 = (undefined4 *)((long)puVar6 + -1);\n              if (uVar20 == 0xffffffff) {\n                if (iVar12 == 0x2e) {\n                  iVar12 = (int)*(char *)((long)puVar6 + -2);\n                  param_4 = param_4 + 1;\n                  param_3 = (undefined4 *)((long)puVar6 + -2);\n                  bVar2 = true;\n                  uVar20 = 1;\n                }\n              }\n              else {\n                uVar20 = uVar20 + 1;\n                bVar2 = true;\n              }\n              local_58 = (double)(iVar12 + -0x2f);\n              uVar19 = uVar18 - 1;\n            } while ((uVar19 != 0) && (puVar6 = param_3, 0x38 < iVar12));\n            if (bVar2) {\n              local_5c = uVar20;\n            }\n            uVar20 = local_5c;\n            if (iVar12 < 0x39) goto LAB_001087b8;\n          }\n          if (uVar20 == 0xffffffff) {\n            puVar6 = (undefined4 *)((long)param_3 + -1);\n            if (*(char *)((long)param_3 + -1) == '.') {\n              param_4 = param_4 + 1;\n              local_5c = 1;\n              uVar20 = 1;\n            }\n          }\n          else {\n            uVar20 = uVar20 + 1;\n            puVar6 = param_3;\n            param_3 = (undefined4 *)((long)param_3 + 1);\n            local_5c = uVar20;\n          }\n          local_58 = 1.0;\n          cVar7 = '1';\n          dVar23 = 0.0;\nLAB_00108770:\n          if (uVar20 != 0xffffffff) {\n            puVar15 = param_3;\n            if (uVar20 == 0) {\n              *(undefined *)puVar6 = 0x2e;\n              param_4 = param_4 - 1;\n              puVar15 = (undefined4 *)((long)param_3 + 1);\n              puVar6 = param_3;\n            }\n            uVar20 = uVar20 - 1;\n            param_3 = puVar15;\n            local_5c = uVar20;\n          }\n          uVar19 = uVar18 - uVar16;\n          *(char *)puVar6 = cVar7;\n          uVar16 = 0;\n          uVar21 = 0;\n          uVar8 = uVar22;\n          uVar18 = uVar19;\n        }\n      } while ((uVar18 < uVar8) && (2.225073858507201e-308 < dVar23));\n      if (uVar20 + 1 < 4) {\n        if (0 < (int)uVar20) {\n          puVar6 = param_3;\n          do {\n            puVar15 = (undefined4 *)((long)puVar6 + 1);\n            *(undefined *)puVar6 = 0x30;\n            puVar6 = puVar15;\n          } while (puVar15 != (undefined4 *)((long)param_3 + (ulong)(uVar20 - 1) + 1));\n          param_3 = (undefined4 *)((long)param_3 + (ulong)(uVar20 - 1) + 1);\n        }\n        *(undefined *)param_3 = 0;\n      }\n      else {\n        *(undefined *)param_3 = 0x45;\n        if ((int)uVar20 < 0) {\n          *(undefined *)((long)param_3 + 1) = 0x2d;\n          puVar17 = (undefined2 *)((long)param_3 + 2);\n          uVar10 = (param_4 - uVar19) - 2;\n          uVar20 = -uVar20;\n        }\n        else {\n          puVar17 = (undefined2 *)((long)param_3 + 1);\n          uVar10 = (param_4 - uVar19) - 1;\n        }\n        uVar13 = (ulong)uVar20;\n        uVar3 = 1;\n        do {\n          uVar9 = uVar3;\n          uVar22 = (uint)uVar13;\n          local_4b[uVar9] = (char)uVar13 + (char)(uVar13 / 10) * -10 + '0';\n          uVar13 = uVar13 / 10;\n          uVar3 = uVar9 + 1;\n        } while (9 < uVar22);\n        if (uVar10 <= uVar9) goto LAB_00108a85;\n        pcVar5 = local_4b + 1 + uVar9;\n        puVar11 = puVar17;\n        do {\n          pcVar1 = pcVar5 + -1;\n          pcVar5 = pcVar5 + -1;\n          *(char *)puVar11 = *pcVar1;\n          puVar11 = (undefined2 *)((long)puVar11 + 1);\n        } while (local_4b + 1 != pcVar5);\n        *(undefined *)((long)puVar17 + (ulong)((int)uVar9 - 1) + 1) = 0;\n      }\n    }\n    else {\n      *param_3 = 0x666e69;\n    }\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\nLAB_00108a85:\n                    /* WARNING: Subroutine does not return */\n  png_error(param_2,\"ASCII conversion buffer too small\");\n}\n\n", "FUN_00108aa0": "\nvoid FUN_00108aa0(undefined8 param_1,byte *param_2,ulong param_3,ulong param_4)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  ulong uVar10;\n  uint uVar11;\n  int iVar12;\n  uint uVar13;\n  ulong uVar14;\n  long in_FS_OFFSET;\n  byte local_1b [11];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 < 0xd) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"ASCII conversion buffer too small\");\n  }\n  iVar12 = (int)param_4;\n  if (iVar12 < 0) {\n    *param_2 = 0x2d;\n    param_4 = (ulong)(uint)-iVar12;\n    param_2 = param_2 + 1;\n  }\n  else if (iVar12 == 0) {\n    *param_2 = 0x30;\n    pbVar7 = param_2 + 1;\n    goto LAB_00108b6b;\n  }\n  uVar3 = 1;\n  uVar10 = 0x10;\n  do {\n    uVar6 = param_4 & 0xffffffff;\n    param_4 = uVar6 / 10;\n    iVar12 = (uint)uVar6 + (int)(uVar6 / 10) * -10;\n    uVar14 = uVar3 & 0xffffffff;\n    uVar11 = iVar12 + 0x30;\n    local_1b[uVar3] = (byte)uVar11;\n    if (((int)uVar10 == 0x10) && (iVar12 != 0)) {\n      uVar10 = uVar3 & 0xffffffff;\n    }\n    uVar3 = uVar3 + 1;\n  } while (9 < (uint)uVar6);\n  uVar13 = (uint)uVar14;\n  uVar9 = (uint)uVar10;\n  if (uVar13 < 6) {\n    pbVar7 = param_2;\n    if (5 < uVar9) goto LAB_00108b6b;\n    *param_2 = 0x2e;\n    pbVar4 = param_2 + 1;\n    if (uVar13 != 5) {\n      do {\n        pbVar7 = pbVar4 + 1;\n        *pbVar4 = 0x30;\n        pbVar4 = pbVar7;\n      } while (pbVar7 != param_2 + (ulong)(4 - uVar13) + 2);\n      pbVar4 = param_2 + (ulong)(4 - uVar13) + 2;\n      pbVar7 = pbVar4;\n      if (uVar13 < uVar9) goto LAB_00108b6b;\n    }\n  }\n  else {\n    uVar2 = uVar13 - 1;\n    pbVar7 = param_2;\n    while( true ) {\n      uVar2 = uVar2 - 1;\n      *pbVar7 = (byte)uVar11;\n      if (uVar2 == 4) break;\n      uVar11 = (uint)local_1b[(ulong)uVar2 + 1];\n      pbVar7 = pbVar7 + 1;\n    }\n    pbVar7 = param_2 + (ulong)(uVar13 - 6) + 1;\n    if (5 < uVar9) goto LAB_00108b6b;\n    param_2[(ulong)(uVar13 - 6) + 1] = 0x2e;\n    pbVar4 = param_2 + (ulong)(uVar13 - 6) + 2;\n    uVar14 = 5;\n  }\n  pbVar8 = local_1b + uVar14 + 1;\n  pbVar7 = pbVar4 + (ulong)((int)uVar14 - uVar9) + 1;\n  do {\n    pbVar1 = pbVar8 + -1;\n    pbVar5 = pbVar4 + 1;\n    pbVar8 = pbVar8 + -1;\n    *pbVar4 = *pbVar1;\n    pbVar4 = pbVar5;\n  } while (pbVar5 != pbVar7);\nLAB_00108b6b:\n  *pbVar7 = 0;\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_00108c50": "\nulong FUN_00108c50(double param_1)\n\n{\n  ulong in_RAX;\n  double dVar1;\n  \n  dVar1 = param_1 * 100000.0 + 0.5;\n  if (dVar1 < 4503599627370496.0) {\n    in_RAX = (ulong)dVar1;\n    dVar1 = (double)((ulong)dVar1 & 0x8000000000000000 |\n                    (ulong)((double)in_RAX -\n                           (double)(-(ulong)(dVar1 < (double)in_RAX) & 0x3ff0000000000000)));\n  }\n  if ((dVar1 <= 2147483647.0) && (-2147483648.0 <= dVar1)) {\n    return in_RAX & 0xffffffff00000000 | (ulong)(uint)(int)dVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010b5c0();\n}\n\n", "FUN_00108ce0": "\nint FUN_00108ce0(int *param_1,int param_2,int param_3,int param_4)\n\n{\n  double dVar1;\n  \n  if (param_4 != 0) {\n    if ((param_2 == 0) || (param_3 == 0)) {\n      *param_1 = 0;\n      return 1;\n    }\n    dVar1 = ((double)param_3 * (double)param_2) / (double)param_4 + 0.5;\n    if (dVar1 < 4503599627370496.0) {\n      dVar1 = (double)((ulong)dVar1 & 0x8000000000000000 |\n                      (ulong)((double)(long)dVar1 -\n                             (double)(-(ulong)(dVar1 < (double)(long)dVar1) & 0x3ff0000000000000)));\n    }\n    if ((dVar1 <= 2147483647.0) && (-2147483648.0 <= dVar1)) {\n      *param_1 = (int)dVar1;\n      return 1;\n    }\n    param_4 = 0;\n  }\n  return param_4;\n}\n\n", "FUN_00108dd0": "\nbool FUN_00108dd0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  \n  iVar11 = *param_2;\n  iVar1 = param_2[1];\n  iVar2 = param_2[2];\n  iVar8 = FUN_00108ce0(param_1,iVar11,100000);\n  if ((iVar8 != 0) && (iVar8 = FUN_00108ce0(param_1 + 4,param_2[1],100000), iVar8 != 0)) {\n    iVar8 = param_2[3];\n    iVar3 = *param_2;\n    iVar4 = param_2[4];\n    iVar5 = param_2[1];\n    iVar6 = param_2[5];\n    iVar9 = FUN_00108ce0(param_1 + 8,iVar8,100000);\n    if ((iVar9 != 0) && (iVar9 = FUN_00108ce0(param_1 + 0xc,param_2[4],100000), iVar9 != 0)) {\n      iVar9 = param_2[4];\n      iVar7 = param_2[3];\n      iVar12 = param_2[7] + param_2[6] + param_2[8];\n      iVar10 = FUN_00108ce0(param_1 + 0x10,param_2[6],100000);\n      if ((iVar10 != 0) &&\n         (iVar10 = FUN_00108ce0(param_1 + 0x14,param_2[7],100000,iVar12), iVar10 != 0)) {\n        iVar10 = param_2[7];\n        iVar12 = iVar4 + iVar8 + iVar6 + iVar1 + iVar11 + iVar2 + iVar12;\n        iVar11 = FUN_00108ce0(param_1 + 0x18,iVar7 + iVar3 + param_2[6],100000,iVar12);\n        if (iVar11 != 0) {\n          iVar11 = FUN_00108ce0(param_1 + 0x1c,iVar10 + iVar5 + iVar9,100000,iVar12);\n          return iVar11 == 0;\n        }\n      }\n    }\n  }\n  return true;\n}\n\n", "FUN_00108f30": "\nulong FUN_00108f30(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  ulong uVar2;\n  long in_FS_OFFSET;\n  undefined auStack72 [40];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = FUN_00108dd0(auStack72,param_1);\n  if ((int)uVar2 == 0) {\n    iVar1 = FUN_001062e0(param_2,auStack72,5);\n    uVar2 = (ulong)(iVar1 == 0);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00108fa0": "\nvoid FUN_00108fa0(long param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  uint local_2c;\n  uint local_28;\n  uint local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(char *)(param_1 + 0x3d1) != '\\0') || ((*(byte *)(param_1 + 0x4ea) & 2) == 0))\n  goto LAB_001090ed;\n  local_2c = *(uint *)(param_1 + 0x4c8);\n  local_28 = *(uint *)(param_1 + 0x4d4);\n  local_24 = *(uint *)(param_1 + 0x4e0);\n  if ((((int)local_2c < 0) ||\n      (((((int)(local_24 + local_28 + local_2c) < 1 ||\n         (iVar1 = FUN_00108ce0(&local_2c,local_2c,0x8000), iVar1 == 0)) || (0x8000 < local_2c)) ||\n       (((int)local_28 < 0 || (iVar1 = FUN_00108ce0(&local_28,local_28,0x8000), iVar1 == 0)))))) ||\n     ((0x8000 < local_28 ||\n      ((((int)local_24 < 0 || (iVar1 = FUN_00108ce0(&local_24,local_24,0x8000), iVar1 == 0)) ||\n       (0x8000 < local_24)))))) {\nLAB_0010913b:\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal error handling cHRM->XYZ\");\n  }\n  iVar1 = local_2c + local_28;\n  iVar2 = local_24 + iVar1;\n  if (0x8001 < iVar2) goto LAB_0010913b;\n  if (iVar2 == 0x8001) {\n    iVar2 = -1;\nLAB_001090c8:\n    if ((int)local_28 < (int)local_2c) {\nLAB_001090cc:\n      if ((int)local_2c < (int)local_24) {\nLAB_001090d0:\n        local_24 = local_24 + iVar2;\n      }\n      else {\n        local_2c = local_2c + iVar2;\n        iVar1 = local_28 + local_2c;\n      }\n    }\n    else {\n      if ((int)local_28 < (int)local_24) {\n        if (local_2c == local_28) goto LAB_001090cc;\n        goto LAB_001090d0;\n      }\n      local_28 = local_28 + iVar2;\n      iVar1 = local_2c + local_28;\n    }\n    if (local_24 + iVar1 != 0x8000) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"internal error handling cHRM coefficients\");\n    }\n  }\n  else if (iVar2 != 0x8000) {\n    iVar2 = 1;\n    goto LAB_001090c8;\n  }\n  *(short *)(param_1 + 0x3d2) = (short)local_2c;\n  *(short *)(param_1 + 0x3d4) = (short)local_28;\nLAB_001090ed:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_00109160": "\nint FUN_00109160(undefined8 param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00108ce0(&local_24);\n  if (iVar1 == 0) {\n    png_warning(param_1,\"fixed point overflow ignored\");\n    local_24 = iVar1;\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_24;\n}\n\n", "FUN_001091d0": "\nulong FUN_001091d0(int param_1)\n\n{\n  ulong in_RAX;\n  double dVar1;\n  \n  dVar1 = 10000000000.0 / (double)param_1 + 0.5;\n  if ((double)((ulong)dVar1 & 0x7fffffffffffffff) < 4503599627370496.0) {\n    in_RAX = (ulong)dVar1;\n    dVar1 = (double)((ulong)dVar1 & 0x8000000000000000 |\n                    (ulong)((double)in_RAX -\n                           (double)(-(ulong)(dVar1 < (double)in_RAX) & 0x3ff0000000000000)));\n  }\n  if ((dVar1 <= 2147483647.0) && (-2147483648.0 <= dVar1)) {\n    return in_RAX & 0xffffffff00000000 | (ulong)(uint)(int)dVar1;\n  }\n  return 0;\n}\n\n", "FUN_00109270": "\nundefined FUN_00109270(long param_1,uint *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  long in_FS_OFFSET;\n  undefined uVar8;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*param_2 < 0x186a1) {\n    uVar1 = param_2[1];\n    if ((((((-1 < (int)uVar1) && ((int)uVar1 <= (int)(100000 - *param_2))) &&\n          (uVar2 = param_2[2], uVar2 < 0x186a1)) &&\n         ((-1 < (int)param_2[3] && ((int)param_2[3] <= (int)(100000 - uVar2))))) &&\n        ((uVar3 = param_2[4], uVar3 < 0x186a1 &&\n         ((uVar4 = param_2[5], -1 < (int)uVar4 && ((int)uVar4 <= (int)(100000 - uVar3))))))) &&\n       (param_2[6] < 0x186a1)) {\n      if ((4 < (int)param_2[7]) && ((int)param_2[7] <= (int)(100000 - param_2[6]))) {\n        iVar5 = FUN_00108ce0(&local_48,uVar2 - uVar3,uVar1 - uVar4,7);\n        if (iVar5 != 0) {\n          iVar6 = FUN_00108ce0(&local_44,param_2[3] - param_2[5],*param_2 - param_2[4],7);\n          iVar7 = local_44;\n          iVar5 = local_48;\n          if (iVar6 != 0) {\n            iVar6 = FUN_00108ce0(&local_48,param_2[2] - param_2[4],param_2[7] - param_2[5],7);\n            if (iVar6 != 0) {\n              iVar6 = FUN_00108ce0(&local_44,param_2[3] - param_2[5],param_2[6] - param_2[4],7);\n              if (iVar6 != 0) {\n                iVar6 = FUN_00108ce0(&local_50,param_2[7],iVar5 - iVar7,local_48 - local_44);\n                if ((iVar6 == 0) || (local_50 <= (int)param_2[7])) goto LAB_001095a0;\n                iVar6 = FUN_00108ce0(&local_48,param_2[1] - param_2[5],param_2[6] - param_2[4],7);\n                if (iVar6 != 0) {\n                  iVar6 = FUN_00108ce0(&local_44,*param_2 - param_2[4],param_2[7] - param_2[5],7);\n                  if (iVar6 != 0) {\n                    iVar5 = FUN_00108ce0(&local_4c,param_2[7],iVar5 - iVar7,local_48 - local_44);\n                    if ((iVar5 != 0) && ((int)param_2[7] < local_4c)) {\n                      iVar5 = FUN_001091d0();\n                      iVar7 = FUN_001091d0(local_50);\n                      iVar6 = FUN_001091d0(local_4c);\n                      iVar6 = (iVar5 - iVar7) - iVar6;\n                      if (0 < iVar6) {\n                        iVar5 = FUN_00108ce0(param_1,*param_2,100000,local_50);\n                        if (iVar5 != 0) {\n                          iVar5 = FUN_00108ce0(param_1 + 4,param_2[1],100000,local_50);\n                          if (iVar5 != 0) {\n                            iVar5 = FUN_00108ce0(param_1 + 8,(100000 - *param_2) - param_2[1],100000\n                                                 ,local_50);\n                            if (iVar5 != 0) {\n                              iVar5 = FUN_00108ce0(param_1 + 0xc,param_2[2],100000,local_4c);\n                              if (iVar5 != 0) {\n                                iVar5 = FUN_00108ce0(param_1 + 0x10,param_2[3],100000,local_4c);\n                                if (iVar5 != 0) {\n                                  iVar5 = FUN_00108ce0(param_1 + 0x14,\n                                                       (100000 - param_2[2]) - param_2[3],100000,\n                                                       local_4c);\n                                  if (iVar5 != 0) {\n                                    iVar5 = FUN_00108ce0(param_1 + 0x18,param_2[4],iVar6,100000);\n                                    if (iVar5 != 0) {\n                                      iVar5 = FUN_00108ce0(param_1 + 0x1c,param_2[5],iVar6,100000);\n                                      if (iVar5 != 0) {\n                                        iVar5 = FUN_00108ce0(param_1 + 0x20,\n                                                             (100000 - param_2[4]) - param_2[5],\n                                                             iVar6,100000);\n                                        uVar8 = iVar5 == 0;\n                                        goto LAB_001095a5;\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                    goto LAB_001095a0;\n                  }\n                }\n              }\n            }\n          }\n        }\n        uVar8 = 2;\n        goto LAB_001095a5;\n      }\n    }\n  }\nLAB_001095a0:\n  uVar8 = 1;\nLAB_001095a5:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001095d0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_001095d0(undefined8 param_1,long param_2,ulong *param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  int iVar3;\n  long in_FS_OFFSET;\n  undefined auStack184 [32];\n  undefined8 local_98;\n  undefined8 uStack144;\n  undefined8 local_88;\n  undefined8 uStack128;\n  int local_78 [4];\n  ulong local_68;\n  ulong uStack96;\n  ulong local_58;\n  ulong uStack80;\n  int local_48;\n  long local_40;\n  \n  local_98 = *param_3;\n  uStack144 = param_3[1];\n  local_88 = param_3[2];\n  uStack128 = param_3[3];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_78[0] = *(int *)(param_3 + 4);\n  local_98._4_4_ = (int)(local_98 >> 0x20);\n  if ((-1 < (long)local_98) && (-1 < (int)local_88)) {\n    uStack128._4_4_ = (int)(uStack128 >> 0x20);\n    if ((-1 < (long)uStack128) &&\n       ((-1 < (int)local_98 && (uStack144._4_4_ = (int)(uStack144 >> 0x20), -1 < (long)uStack144))))\n    {\n      if ((-1 < (int)uStack128) &&\n         ((((-1 < (int)uStack144 && (-1 < (long)local_88)) && (-1 < local_78[0])) &&\n          ((uStack144._4_4_ <= 0x7fffffff - local_98._4_4_ &&\n           ((int)uStack128 <= 0x7fffffff - (local_98._4_4_ + (int)local_88))))))) {\n        iVar3 = uStack128._4_4_ + local_98._4_4_ + (int)local_88;\n        if (iVar3 == 100000) {\nLAB_001097d0:\n          iVar3 = FUN_00108dd0(auStack184,&local_98);\n          if (iVar3 == 0) {\n            local_68 = local_98;\n            uStack96 = uStack144;\n            local_48 = local_78[0];\n            local_58 = local_88;\n            uStack80 = uStack128;\n            iVar3 = FUN_00109270(&local_68,auStack184);\n            if (iVar3 == 0) {\n              iVar3 = FUN_00108f30(&local_68,auStack184);\n              if (iVar3 == 0) {\n                uVar2 = FUN_00106470(param_1,param_2,auStack184,&local_98,param_4);\n                goto LAB_00109857;\n              }\n            }\n          }\n          if (iVar3 != 1) {\n            *(ushort *)(param_2 + 0x4a) = *(ushort *)(param_2 + 0x4a) | 0x8000;\n                    /* WARNING: Subroutine does not return */\n            png_error(param_1,\"internal error checking chromaticities\");\n          }\n        }\n        else {\n          iVar1 = FUN_00108ce0(local_98,local_88,&local_98,local_98 & 0xffffffff,100000,iVar3);\n          if (iVar1 != 0) {\n            iVar1 = FUN_00108ce0((long)&local_98 + 4,local_98._4_4_,100000,iVar3);\n            if (iVar1 != 0) {\n              iVar1 = FUN_00108ce0(&uStack144,uStack144 & 0xffffffff,100000,iVar3);\n              if (iVar1 != 0) {\n                iVar1 = FUN_00108ce0((long)&uStack144 + 4,uStack144._4_4_,100000,iVar3);\n                if (iVar1 != 0) {\n                  iVar1 = FUN_00108ce0(&local_88,local_88 & 0xffffffff,100000,iVar3);\n                  if (iVar1 != 0) {\n                    iVar1 = FUN_00108ce0((long)&local_88 + 4,local_88._4_4_,100000,iVar3);\n                    if (iVar1 != 0) {\n                      iVar1 = FUN_00108ce0(&uStack128,uStack128 & 0xffffffff,100000,iVar3);\n                      if (iVar1 != 0) {\n                        iVar1 = FUN_00108ce0((long)&uStack128 + 4,uStack128._4_4_,100000,iVar3);\n                        if (iVar1 != 0) {\n                          iVar3 = FUN_00108ce0(local_78,local_78[0],100000,iVar3);\n                          if (iVar3 != 0) goto LAB_001097d0;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  *(ushort *)(param_2 + 0x4a) = *(ushort *)(param_2 + 0x4a) | 0x8000;\n  png_benign_error(param_1,\"invalid end points\");\n  uVar2 = 0;\nLAB_00109857:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001098a0": "\nundefined8 FUN_001098a0(undefined8 param_1,long param_2,undefined8 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined auStack88 [40];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00109270(auStack88,param_3);\n  if (iVar1 == 0) {\n    iVar1 = FUN_00108f30(auStack88,param_3);\n    if (iVar1 == 0) {\n      uVar2 = FUN_00106470(param_1,param_2,param_3,auStack88,param_4);\n      goto LAB_001098f9;\n    }\n  }\n  if (iVar1 != 1) {\n    *(ushort *)(param_2 + 0x4a) = *(ushort *)(param_2 + 0x4a) | 0x8000;\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal error checking chromaticities\");\n  }\n  *(ushort *)(param_2 + 0x4a) = *(ushort *)(param_2 + 0x4a) | 0x8000;\n  png_benign_error(param_1,\"invalid chromaticities\");\n  uVar2 = 0;\nLAB_001098f9:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00109960": "\nbool FUN_00109960(int param_1)\n\n{\n  return 10000 < param_1 - 95000U;\n}\n\n", "FUN_00109980": "\nbool FUN_00109980(undefined8 param_1,undefined8 param_2,byte *param_3,undefined8 param_4,int param_5\n                 )\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  bool bVar2;\n  undefined4 local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((*param_3 & 1) != 0) &&\n     ((iVar1 = FUN_00108ce0(&local_24,param_2,100000), iVar1 == 0 ||\n      (iVar1 = FUN_00109960(local_24), iVar1 != 0)))) {\n    bVar2 = param_5 == 2;\n    if (((*param_3 & 0x20) != 0) || (bVar2)) {\n      FUN_0010b520(param_1,\"gamma value does not match sRGB\",2);\n      goto LAB_001099a2;\n    }\n    FUN_0010b520(param_1,\"gamma value does not match libpng estimate\",0);\n  }\n  bVar2 = true;\nLAB_001099a2:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return bVar2;\n}\n\n", "FUN_00109a40": "\nvoid FUN_00109a40(long param_1,int *param_2,int param_3)\n\n{\n  ushort uVar1;\n  int iVar2;\n  char *pcVar3;\n  \n  uVar1 = *(ushort *)((long)param_2 + 0x4a);\n  if (param_3 - 0x10U < 0x2540be31) {\n    if (((*(byte *)(param_1 + 0x12d) & 0x80) == 0) || ((uVar1 & 8) == 0)) {\n      if (-1 < (short)uVar1) {\n        iVar2 = FUN_00109980(param_1,*param_2,(long)param_2 + 0x4a,param_3,1);\n        if (iVar2 != 0) {\n          *param_2 = param_3;\n          *(ushort *)((long)param_2 + 0x4a) = *(ushort *)((long)param_2 + 0x4a) | 9;\n          return;\n        }\n      }\n      return;\n    }\n    pcVar3 = \"duplicate\";\n  }\n  else {\n    pcVar3 = \"gamma value out of range\";\n  }\n  *(ushort *)((long)param_2 + 0x4a) = uVar1 | 0x8000;\n  FUN_0010b520(param_1,pcVar3,1);\n  return;\n}\n\n", "FUN_00109ad0": "\nundefined8 FUN_00109ad0(undefined8 param_1,undefined8 *param_2,uint param_3)\n\n{\n  ushort uVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar1 = *(ushort *)((long)param_2 + 0x4a);\n  if ((short)uVar1 < 0) {\n    return 0;\n  }\n  pcVar4 = \"invalid sRGB rendering intent\";\n  if (param_3 < 4) {\n    if ((uVar1 & 4) != 0) {\n      if (*(ushort *)(param_2 + 9) != param_3) {\n        pcVar4 = \"inconsistent rendering intents\";\n        goto LAB_00109c0e;\n      }\n    }\n    if ((uVar1 & 0x20) == 0) {\n      if ((uVar1 & 2) != 0) {\n        iVar2 = FUN_001062e0(&DAT_0012a4c0,(long)param_2 + 4,100);\n        if (iVar2 == 0) {\n          FUN_0010b520(param_1,\"cHRM chunk does not match sRGB\",2);\n        }\n      }\n      FUN_00109980(param_1,*(undefined4 *)param_2,(long)param_2 + 0x4a,0xb18f,2);\n      *(ushort *)((long)param_2 + 0x4a) = *(ushort *)((long)param_2 + 0x4a) | 0xe7;\n      *param_2 = 0xfa000000b18f;\n      param_2[1] = 0x7530000080e8;\n      param_2[2] = 0x3a980000ea60;\n      param_2[3] = 0x7a2600001770;\n      param_2[4] = 0xa11700008084;\n      param_2[5] = 0x78d00005310;\n      param_2[6] = 0x1175d00008bae;\n      *(short *)(param_2 + 9) = (short)param_3;\n      param_2[7] = 0x468000002e8f;\n      param_2[8] = 0x1734d00001c33;\n      uVar3 = 1;\n    }\n    else {\n      png_benign_error(param_1,\"duplicate sRGB information ignored\");\n      uVar3 = 0;\n    }\n    return uVar3;\n  }\nLAB_00109c0e:\n  uVar3 = FUN_001065b0(param_1,param_2,&DAT_0012938b,(long)(int)param_3,pcVar4);\n  return uVar3;\n}\n\n", "FUN_00109c50": "\nvoid FUN_00109c50(long param_1,undefined8 param_2,byte *param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  int *piVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  \n  if (((*(uint *)(param_1 + 0x388) ^ 0x30) & 0x30) == 0) {\n    return;\n  }\n  uVar6 = 0x10000;\n  iVar8 = 0;\n  uVar7 = 0;\n  iVar1 = 0x29f83dde;\n  piVar5 = &DAT_0012a3c8;\n  do {\n    if (((((uint)param_3[0x56] * 0x100 +\n           (uint)param_3[0x57] + (uint)param_3[0x55] * 0x10000 + (uint)param_3[0x54] * 0x1000000 ==\n           iVar1) &&\n         ((uint)param_3[0x5a] * 0x100 +\n          (uint)param_3[0x5b] + (uint)param_3[0x59] * 0x10000 + (uint)param_3[0x58] * 0x1000000 ==\n          piVar5[2])) &&\n        ((uint)param_3[0x5e] * 0x100 +\n         (uint)param_3[0x5f] + (uint)param_3[0x5d] * 0x10000 + (uint)param_3[0x5c] * 0x1000000 ==\n         piVar5[3])) &&\n       ((uint)param_3[0x62] * 0x100 +\n        (uint)param_3[99] + (uint)param_3[0x61] * 0x10000 + (uint)param_3[0x60] * 0x1000000 ==\n        piVar5[4])) {\n      if (iVar8 == 0) {\n        iVar8 = (uint)param_3[2] * 0x100 +\n                (uint)param_3[3] + (uint)param_3[1] * 0x10000 + (uint)*param_3 * 0x1000000;\n        uVar6 = (uint)param_3[0x42] * 0x100 +\n                (uint)param_3[0x43] +\n                (uint)param_3[0x41] * 0x10000 + (uint)param_3[0x40] * 0x1000000;\n      }\n      if ((*piVar5 == iVar8) && (*(ushort *)((long)piVar5 + 0x16) == uVar6)) {\n        if (param_4 == 0) {\n          uVar3 = adler32(0,0,0);\n          param_4 = adler32(uVar3,param_3,iVar8);\n        }\n        uVar2 = (ulong)uVar7;\n        if ((uint)(&DAT_0012a3c0)[uVar2 * 8] == param_4) {\n          uVar3 = crc32(0,0,0);\n          uVar4 = crc32(uVar3,param_3,iVar8);\n          if (uVar4 == (uint)(&DAT_0012a3c4)[uVar2 * 8]) {\n            if ((&DAT_0012a3dd)[uVar2 * 0x20] == '\\0') {\n              if ((&DAT_0012a3dc)[uVar2 * 0x20] == '\\0') {\n                FUN_0010b520(param_1,\"out-of-date sRGB profile with no signature\",0);\n              }\n            }\n            else {\n              FUN_0010b520(param_1,\"known incorrect sRGB profile\",2);\n            }\n            FUN_00109ad0(param_1,param_2,\n                         (uint)param_3[0x42] * 0x100 +\n                         (uint)param_3[0x43] +\n                         (uint)param_3[0x41] * 0x10000 + (uint)param_3[0x40] * 0x1000000);\n            return;\n          }\n        }\n        FUN_0010b520(param_1,\"Not recognizing known sRGB profile that has been edited\",0);\n        return;\n      }\n    }\n    uVar7 = uVar7 + 1;\n    if (uVar7 == 7) {\n      return;\n    }\n    iVar1 = piVar5[9];\n    piVar5 = piVar5 + 8;\n  } while( true );\n}\n\n", "FUN_00109ec0": "\nundefined8\nFUN_00109ec0(undefined8 param_1,long param_2,undefined8 param_3,uint param_4,undefined8 param_5,\n            ulong param_6)\n\n{\n  int iVar1;\n  \n  if (*(short *)(param_2 + 0x4a) < 0) {\n    return 0;\n  }\n  if (param_4 < 0x84) {\n    iVar1 = FUN_001065b0();\n    param_6 = param_6 & 0xffffffff;\n    if (iVar1 == 0) {\n      return 0;\n    }\n  }\n  iVar1 = FUN_00107a60(param_1,param_2,param_3,param_4,param_5,param_6);\n  if ((iVar1 != 0) && (iVar1 = FUN_00107e00(param_1,param_2,param_3,param_4,param_5), iVar1 != 0)) {\n    FUN_00109c50(param_1,param_2,param_5,0);\n    return 1;\n  }\n  return 0;\n}\n\n", "FUN_00109f80": "\nvoid FUN_00109f80(undefined8 param_1,long *param_2,int param_3,int param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  byte bVar6;\n  uint uVar7;\n  uint uVar8;\n  long lVar9;\n  double dVar10;\n  ulong local_60;\n  \n  cVar1 = (char)param_3;\n  bVar6 = 8 - cVar1;\n  uVar7 = 1 << (bVar6 & 0x1f);\n  uVar8 = (1 << (0x10U - cVar1 & 0x1f)) - 1;\n  lVar4 = png_calloc(param_1,(ulong)uVar7 << 3);\n  *param_2 = lVar4;\n  if (uVar7 != 0) {\n    local_60 = 0;\n    while( true ) {\n      lVar5 = png_malloc(param_1,0x200);\n      *(long *)(lVar4 + local_60 * 8) = lVar5;\n      iVar2 = FUN_00109960();\n      if (iVar2 == 0) {\n        lVar9 = 0;\n        do {\n          uVar3 = ((int)lVar9 << (bVar6 & 0x1f)) + (int)local_60;\n          if (param_3 != 0) {\n            uVar3 = ((1 << (0xfU - cVar1 & 0x1f)) + uVar3 * 0xffff) / uVar8;\n          }\n          *(short *)(lVar5 + lVar9 * 2) = (short)uVar3;\n          lVar9 = lVar9 + 1;\n        } while (lVar9 != 0x100);\n      }\n      else {\n        lVar9 = 0;\n        do {\n          dVar10 = pow((double)(ulong)(uint)(((int)lVar9 << (bVar6 & 0x1f)) + (int)local_60) *\n                       (1.0 / (double)uVar8),(double)param_4 * 1e-05);\n          dVar10 = dVar10 * 65535.0 + 0.5;\n          if ((double)((ulong)dVar10 & 0x7fffffffffffffff) < 4503599627370496.0) {\n            dVar10 = (double)((ulong)dVar10 |\n                             (ulong)((double)(long)dVar10 -\n                                    (double)(-(ulong)(dVar10 < (double)(long)dVar10) &\n                                            0x3ff0000000000000)));\n          }\n          *(short *)(lVar5 + lVar9 * 2) = (short)(int)dVar10;\n          lVar9 = lVar9 + 1;\n        } while (lVar9 != 0x100);\n      }\n      if (local_60 == uVar7 - 1) break;\n      local_60 = local_60 + 1;\n    }\n  }\n  return;\n}\n\n", "FUN_0010a190": "\nulong FUN_0010a190(int param_1,int param_2)\n\n{\n  ulong in_RAX;\n  double dVar1;\n  \n  if ((param_1 != 0) && (param_2 != 0)) {\n    dVar1 = (1000000000000000.0 / (double)param_1) / (double)param_2 + 0.5;\n    if ((double)((ulong)dVar1 & 0x7fffffffffffffff) < 4503599627370496.0) {\n      in_RAX = (ulong)dVar1;\n      dVar1 = (double)((ulong)dVar1 & 0x8000000000000000 |\n                      (ulong)((double)in_RAX -\n                             (double)(-(ulong)(dVar1 < (double)in_RAX) & 0x3ff0000000000000)));\n    }\n    if ((dVar1 <= 2147483647.0) && (-2147483648.0 <= dVar1)) {\n      return in_RAX & 0xffffffff00000000 | (ulong)(uint)(int)dVar1;\n    }\n  }\n  return 0;\n}\n\n", "FUN_0010a250": "\nulong FUN_0010a250(uint param_1,int param_2)\n\n{\n  undefined4 extraout_var;\n  double dVar1;\n  double dVar2;\n  \n  if (0xfd < param_1 - 1) {\n    return (ulong)param_1;\n  }\n  dVar1 = pow((double)param_1 / 255.0,(double)param_2 * 1e-05);\n  dVar1 = dVar1 * 255.0 + 0.5;\n  if (4503599627370496.0 <= dVar1) {\n    return CONCAT44(extraout_var,(int)dVar1);\n  }\n  dVar2 = (double)(long)dVar1;\n  return (long)dVar1 & 0xffffffff00000000U |\n         (ulong)(uint)(int)(double)((ulong)dVar1 & 0x8000000000000000 |\n                                   (ulong)(dVar2 - (double)(-(ulong)(dVar1 < dVar2) &\n                                                           0x3ff0000000000000)));\n}\n\n", "FUN_0010a310": "\nvoid FUN_0010a310(undefined8 param_1,long *param_2,undefined4 param_3)\n\n{\n  undefined uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  ulong uVar5;\n  \n  lVar3 = png_malloc(param_1,0x100);\n  *param_2 = lVar3;\n  iVar2 = FUN_00109960(param_3);\n  if (iVar2 != 0) {\n    uVar5 = 0;\n    do {\n      uVar1 = FUN_0010a250(uVar5 & 0xffffffff,param_3);\n      *(undefined *)(lVar3 + uVar5) = uVar1;\n      uVar5 = uVar5 + 1;\n    } while (uVar5 != 0x100);\n    return;\n  }\n  lVar4 = 0;\n  do {\n    *(char *)(lVar3 + lVar4) = (char)lVar4;\n    lVar4 = lVar4 + 1;\n  } while (lVar4 != 0x100);\n  return;\n}\n\n", "FUN_0010a380": "\nulong FUN_0010a380(uint param_1,int param_2)\n\n{\n  undefined4 extraout_var;\n  double dVar1;\n  double dVar2;\n  \n  if (0xfffd < param_1 - 1) {\n    return (ulong)param_1;\n  }\n  dVar1 = pow((double)param_1 / 65535.0,(double)param_2 * 1e-05);\n  dVar1 = dVar1 * 65535.0 + 0.5;\n  if (4503599627370496.0 <= dVar1) {\n    return CONCAT44(extraout_var,(int)dVar1);\n  }\n  dVar2 = (double)(long)dVar1;\n  return (long)dVar1 & 0xffffffff00000000U |\n         (ulong)(uint)(int)(double)((ulong)dVar1 & 0x8000000000000000 |\n                                   (ulong)(dVar2 - (double)(-(ulong)(dVar1 < dVar2) &\n                                                           0x3ff0000000000000)));\n}\n\n", "FUN_0010a440": "\nulong FUN_0010a440(long param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  if (*(char *)(param_1 + 0x268) != '\\b') {\n    uVar2 = FUN_0010a380();\n    return uVar2;\n  }\n  bVar1 = FUN_0010a250(param_2,param_3);\n  return (ulong)bVar1;\n}\n\n", "FUN_0010a480": "\nvoid FUN_0010a480(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  long lVar3;\n  \n  png_free(param_1,*(undefined8 *)(param_1 + 0x2a8));\n  lVar3 = *(long *)(param_1 + 0x2b0);\n  *(undefined8 *)(param_1 + 0x2a8) = 0;\n  if (lVar3 != 0) {\n    iVar1 = 1 << (8U - (char)*(undefined4 *)(param_1 + 0x2a0) & 0x1f);\n    if (0 < iVar1) {\n      lVar2 = 0;\n      while( true ) {\n        png_free(param_1,*(undefined8 *)(lVar3 + lVar2));\n        lVar3 = *(long *)(param_1 + 0x2b0);\n        if ((ulong)(iVar1 - 1) << 3 == lVar2) break;\n        lVar2 = lVar2 + 8;\n      }\n    }\n    png_free(param_1);\n    *(undefined8 *)(param_1 + 0x2b0) = 0;\n  }\n  png_free(param_1,*(undefined8 *)(param_1 + 0x2b8));\n  *(undefined8 *)(param_1 + 0x2b8) = 0;\n  png_free(param_1,*(undefined8 *)(param_1 + 0x2c0));\n  lVar3 = *(long *)(param_1 + 0x2c8);\n  *(undefined8 *)(param_1 + 0x2c0) = 0;\n  if (lVar3 != 0) {\n    iVar1 = 1 << (8U - (char)*(undefined4 *)(param_1 + 0x2a0) & 0x1f);\n    if (0 < iVar1) {\n      lVar2 = 0;\n      while( true ) {\n        png_free(param_1,*(undefined8 *)(lVar3 + lVar2));\n        lVar3 = *(long *)(param_1 + 0x2c8);\n        if ((ulong)(iVar1 - 1) << 3 == lVar2) break;\n        lVar2 = lVar2 + 8;\n      }\n    }\n    png_free(param_1);\n    *(undefined8 *)(param_1 + 0x2c8) = 0;\n  }\n  lVar3 = *(long *)(param_1 + 0x2d0);\n  if (lVar3 != 0) {\n    iVar1 = 1 << (8U - (char)*(undefined4 *)(param_1 + 0x2a0) & 0x1f);\n    if (0 < iVar1) {\n      lVar2 = 0;\n      while( true ) {\n        png_free(param_1,*(undefined8 *)(lVar3 + lVar2));\n        lVar3 = *(long *)(param_1 + 0x2d0);\n        if ((ulong)(iVar1 - 1) << 3 == lVar2) break;\n        lVar2 = lVar2 + 8;\n      }\n    }\n    png_free(param_1);\n    *(undefined8 *)(param_1 + 0x2d0) = 0;\n  }\n  return;\n}\n\n", "FUN_0010a600": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_0010a600(long param_1,int param_2)\n\n{\n  ushort uVar1;\n  undefined4 uVar2;\n  undefined8 uVar3;\n  byte bVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  long lVar9;\n  uint uVar10;\n  long lVar11;\n  bool bVar12;\n  byte local_54;\n  uint local_50;\n  byte local_49;\n  int local_48;\n  uint local_40;\n  uint local_3c;\n  \n  if ((*(long *)(param_1 + 0x2a8) != 0) || (*(long *)(param_1 + 0x2b0) != 0)) {\n    png_warning(param_1);\n    FUN_0010a480();\n  }\n  iVar7 = *(int *)(param_1 + 0x2a4);\n  if (param_2 < 9) {\n    uVar2 = 100000;\n    if (0 < iVar7) {\n      uVar2 = FUN_0010a190(*(undefined4 *)(param_1 + 0x4a0),iVar7,100000);\n    }\n    FUN_0010a310(param_1,param_1 + 0x2a8,uVar2);\n    if ((*(uint *)(param_1 + 0x134) & 0x600080) == 0) {\n      return;\n    }\n    uVar2 = FUN_001091d0(*(undefined4 *)(param_1 + 0x4a0));\n    FUN_0010a310(param_1,param_1 + 0x2c0,uVar2);\n    if (*(int *)(param_1 + 0x2a4) < 1) {\n      uVar2 = *(undefined4 *)(param_1 + 0x4a0);\n    }\n    else {\n      uVar2 = FUN_001091d0();\n    }\n    FUN_0010a310(param_1,param_1 + 0x2b8,uVar2);\n    return;\n  }\n  if ((*(byte *)(param_1 + 0x267) & 2) == 0) {\n    bVar4 = *(byte *)(param_1 + 0x2db);\n  }\n  else {\n    bVar4 = *(byte *)(param_1 + 0x2d9);\n    if (*(byte *)(param_1 + 0x2d9) < *(byte *)(param_1 + 0x2d8)) {\n      bVar4 = *(byte *)(param_1 + 0x2d8);\n    }\n    if (bVar4 < *(byte *)(param_1 + 0x2da)) {\n      bVar4 = *(byte *)(param_1 + 0x2da);\n    }\n  }\n  uVar5 = bVar4 - 1;\n  uVar10 = *(uint *)(param_1 + 0x134) & 0x4000400;\n  if ((byte)uVar5 < 0xf) {\n    uVar5 = 0x10 - bVar4;\n    bVar4 = (byte)uVar5;\n    if (uVar10 == 0) {\n      local_49 = 8;\n      if (bVar4 < 9) {\n        local_49 = bVar4;\n      }\n      uVar10 = (uint)local_49;\n      *(uint *)(param_1 + 0x2a0) = uVar10;\n      goto LAB_0010a95a;\n    }\n    if (bVar4 < 5) goto LAB_0010a6c1;\n    local_3c = 8;\n    if (bVar4 < 9) {\n      local_3c = uVar5;\n    }\n    local_49 = (byte)local_3c;\n    local_3c = local_3c & 0xff;\n    local_54 = 8 - (char)local_3c;\n    *(uint *)(param_1 + 0x2a0) = local_3c;\n    uVar5 = 1 << (local_54 & 0x1f);\n    lVar9 = (ulong)uVar5 << 3;\n    local_48 = (1 << (0x10U - (char)local_3c & 0x1f)) + -1;\n    local_50 = 0xff >> (local_49 & 0x1f);\n    local_40 = uVar5 << 8;\n  }\n  else {\n    if (uVar10 == 0) {\n      *(undefined4 *)(param_1 + 0x2a0) = 0;\n      local_49 = 0;\nLAB_0010a95a:\n      uVar2 = 100000;\n      if (0 < iVar7) {\n        uVar2 = FUN_0010a190(*(undefined4 *)(param_1 + 0x4a0),iVar7,uVar5,100000);\n      }\n      FUN_00109f80(param_1,param_1 + 0x2b0,uVar10,uVar2);\n      goto LAB_0010a983;\n    }\nLAB_0010a6c1:\n    local_40 = 0x800;\n    lVar9 = 0x40;\n    uVar5 = 8;\n    *(undefined4 *)(param_1 + 0x2a0) = 5;\n    local_50 = 7;\n    local_48 = 0x7ff;\n    local_54 = 3;\n    local_3c = 5;\n    local_49 = 5;\n  }\n  lVar11 = 0;\n  lVar9 = png_calloc(param_1,lVar9);\n  *(long *)(param_1 + 0x2b0) = lVar9;\n  do {\n    uVar3 = png_malloc();\n    *(undefined8 *)(lVar9 + lVar11 * 8) = uVar3;\n    lVar11 = lVar11 + 1;\n  } while ((uint)lVar11 < uVar5);\n  iVar7 = 0x80;\n  uVar5 = 0;\n  do {\n    uVar1 = FUN_0010a380();\n    uVar10 = (uint)uVar1 * local_48 + 0x8000;\n    uVar8 = uVar10 / 0xffff + 1;\n    uVar6 = uVar5;\n    if (uVar5 < uVar8) {\n      do {\n        *(short *)(*(long *)(lVar9 + (ulong)(local_50 & uVar6) * 8) +\n                  (ulong)(uVar6 >> (local_54 & 0x1f)) * 2) = (short)iVar7 + -0x80;\n        bVar12 = uVar10 / 0xffff != uVar6;\n        uVar6 = uVar6 + 1;\n        uVar5 = uVar8;\n      } while (bVar12);\n    }\n    iVar7 = iVar7 + 0x101;\n  } while (iVar7 != 0x1007f);\n  if (uVar5 < local_40) {\n    do {\n      uVar10 = 0xff >> ((byte)local_3c & 0x1f) & uVar5;\n      uVar6 = uVar5 >> (local_54 & 0x1f);\n      uVar5 = uVar5 + 1;\n      *(undefined2 *)(*(long *)(lVar9 + (ulong)uVar10 * 8) + (ulong)uVar6 * 2) = 0xffff;\n    } while (uVar5 != local_40);\n  }\nLAB_0010a983:\n  if ((*(uint *)(param_1 + 0x134) & 0x600080) == 0) {\n    return;\n  }\n  uVar2 = FUN_001091d0(*(undefined4 *)(param_1 + 0x4a0));\n  FUN_00109f80(param_1,param_1 + 0x2d0,local_49,uVar2);\n  if (*(int *)(param_1 + 0x2a4) < 1) {\n    uVar2 = *(undefined4 *)(param_1 + 0x4a0);\n  }\n  else {\n    uVar2 = FUN_001091d0();\n  }\n  FUN_00109f80(param_1,param_1 + 0x2c8,local_49,uVar2);\n  return;\n}\n\n", "png_set_option": "\nuint png_set_option(long param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  byte bVar3;\n  uint uVar4;\n  \n  bVar3 = (byte)param_2;\n  if ((param_1 == 0) || (0xb < param_2)) {\n    param_2 = 1;\n  }\n  else {\n    param_2 = param_2 & 1;\n    if (param_2 == 0) {\n      uVar1 = *(uint *)(param_1 + 0x388);\n      uVar4 = 3 << (bVar3 & 0x1f);\n      uVar2 = 2 << (bVar3 & 0x1f);\n      if (param_3 != 0) {\n        uVar2 = uVar4;\n      }\n      *(uint *)(param_1 + 0x388) = ~uVar4 & uVar1 | uVar2;\n      return (int)(uVar4 & uVar1) >> (bVar3 & 0x1f);\n    }\n  }\n  return param_2;\n}\n\n", "FUN_0010ac60": "\nundefined8 FUN_0010ac60(long param_1,undefined8 param_2)\n\n{\n  FUN_0010adb0(param_1 + 0x24,0x40,0,param_2);\n  *(uint *)(param_1 + 0x20) = *(uint *)(param_1 + 0x20) | 2;\n  png_image_free(param_1);\n  return 0;\n}\n\n", "FUN_0010ac90": "\nvoid FUN_0010ac90(uint param_1,long param_2,long param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  char cVar3;\n  uint uVar4;\n  long lVar5;\n  int iVar6;\n  int iVar7;\n  char *pcVar8;\n  uint uVar9;\n  \n  iVar7 = 0;\n  iVar6 = 0x18;\n  do {\n    uVar9 = param_1 >> ((byte)iVar6 & 0x1f);\n    iVar6 = iVar6 + -8;\n    uVar4 = uVar9 & 0xff;\n    pcVar8 = (char *)((iVar7 + 1) + param_2);\n    if ((uVar4 - 0x41 < 0x3a) && (5 < uVar4 - 0x5b)) {\n      *(undefined *)(iVar7 + param_2) = (char)uVar9;\n      iVar7 = iVar7 + 1;\n    }\n    else {\n      *(undefined *)(iVar7 + param_2) = 0x5b;\n      cVar3 = \"0123456789ABCDEFlibpng warning: %s\"[uVar9 & 0xf];\n      *pcVar8 = \"0123456789ABCDEFlibpng warning: %s\"[(int)uVar4 >> 4];\n      iVar1 = iVar7 + 2;\n      iVar2 = iVar7 + 3;\n      iVar7 = iVar7 + 4;\n      *(char *)(param_2 + iVar1) = cVar3;\n      *(undefined *)(param_2 + iVar2) = 0x5d;\n      pcVar8 = (char *)(iVar7 + param_2);\n    }\n  } while (iVar6 != -8);\n  if (param_3 == 0) {\n    *pcVar8 = '\\0';\n    return;\n  }\n  *pcVar8 = ':';\n  *(undefined *)(param_2 + (iVar7 + 1)) = 0x20;\n  pcVar8 = (char *)((iVar7 + 2) + param_2);\n  lVar5 = (long)(iVar7 + 3);\n  do {\n    cVar3 = *(char *)((param_3 - iVar7) + -3 + lVar5);\n    if (cVar3 == '\\0') goto LAB_0010ad38;\n    iVar6 = (int)lVar5;\n    lVar5 = lVar5 + 1;\n    *pcVar8 = cVar3;\n    pcVar8 = pcVar8 + 1;\n  } while ((long)iVar7 + 0xc6 != lVar5);\n  pcVar8 = (char *)(iVar6 + param_2);\nLAB_0010ad38:\n  *pcVar8 = '\\0';\n  return;\n}\n\n", "FUN_0010adb0": "\nvoid FUN_0010adb0(long param_1,ulong param_2,ulong param_3,char *param_4)\n\n{\n  ulong uVar1;\n  char cVar2;\n  \n  if ((param_1 != 0) && (param_3 < param_2)) {\n    uVar1 = param_3;\n    if ((param_4 != (char *)0x0) && ((cVar2 = *param_4, cVar2 != '\\0' && (param_3 < param_2 - 1))))\n    {\n      do {\n        uVar1 = uVar1 + 1;\n        *(char *)(param_1 + -1 + uVar1) = cVar2;\n        cVar2 = param_4[uVar1 - param_3];\n        if (cVar2 == '\\0') break;\n      } while (uVar1 < param_2 - 1);\n    }\n    *(undefined *)(param_1 + uVar1) = 0;\n  }\n  return;\n}\n\n", "FUN_0010ae00": "\nchar * FUN_0010ae00(char *param_1,long param_2,int param_3,ulong param_4)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  char *pcVar4;\n  \n  pcVar4 = (char *)(param_2 - 1);\n  *(undefined *)(param_2 + -1) = 0;\n  if (pcVar4 <= param_1) {\n    return pcVar4;\n  }\n  bVar1 = false;\n  iVar3 = 0;\n  iVar2 = 1;\nLAB_0010ae48:\n  do {\n    iVar3 = iVar3 + 1;\n    switch(param_3) {\n    default:\n      param_4 = 0;\n      goto LAB_0010aed0;\n    case 2:\n      iVar2 = param_3;\n    case 1:\n      pcVar4 = pcVar4 + -1;\n      *pcVar4 = \"0123456789ABCDEF\"[param_4 % 10];\n      param_4 = param_4 / 10;\n      break;\n    case 4:\n      iVar2 = 2;\n    case 3:\n      pcVar4 = pcVar4 + -1;\n      *pcVar4 = \"0123456789ABCDEF\"[(uint)param_4 & 0xf];\n      param_4 = param_4 >> 4;\n      break;\n    case 5:\n      if ((bVar1) || (param_4 % 10 != 0)) {\n        pcVar4 = pcVar4 + -1;\n        bVar1 = true;\n        *pcVar4 = \"0123456789ABCDEF\"[param_4 % 10];\n      }\n      param_4 = param_4 / 10;\n      iVar2 = param_3;\n    }\n    if ((param_3 == 5) && (iVar3 == 5)) {\n      if (pcVar4 <= param_1) {\n        return pcVar4;\n      }\n      if (!bVar1) {\n        if (param_4 == 0) {\n          pcVar4[-1] = '0';\n          return pcVar4 + -1;\n        }\n        iVar3 = 5;\n        goto LAB_0010ae48;\n      }\n      pcVar4[-1] = '.';\n      pcVar4 = pcVar4 + -1;\n    }\nLAB_0010aed0:\n    if (pcVar4 <= param_1) {\n      return pcVar4;\n    }\n    if ((param_4 == 0) && (iVar2 <= iVar3)) {\n      return pcVar4;\n    }\n  } while( true );\n}\n\n", "FUN_0010b010": "\nvoid FUN_0010b010(long param_1,int param_2,undefined8 param_3)\n\n{\n  if (7 < param_2 - 1U) {\n    return;\n  }\n  FUN_0010adb0(param_1 + -0x20 + (long)param_2 * 0x20,0x20,0,param_3);\n  return;\n}\n\n", "FUN_0010b040": "\nvoid FUN_0010b040(undefined8 param_1,undefined4 param_2)\n\n{\n  undefined8 uVar1;\n  long in_FS_OFFSET;\n  undefined auStack56 [24];\n  long local_20 [2];\n  \n  local_20[0] = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = FUN_0010ae00(auStack56,local_20);\n  FUN_0010b010(param_1,param_2,uVar1);\n  if (local_20[0] == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0010b0a0": "\nvoid FUN_0010b0a0(undefined8 param_1,undefined4 param_2,undefined8 param_3,int param_4)\n\n{\n  undefined *puVar1;\n  long in_FS_OFFSET;\n  undefined auStack56 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_4 < 0) {\n    puVar1 = (undefined *)FUN_0010ae00(auStack56,&local_20,param_3,-(long)param_4);\n    if (auStack56 < puVar1) {\n      puVar1[-1] = 0x2d;\n      puVar1 = puVar1 + -1;\n    }\n  }\n  else {\n    puVar1 = (undefined *)FUN_0010ae00(auStack56,&local_20,param_3,(long)param_4);\n  }\n  FUN_0010b010(param_1,param_2,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0010b130": "\nvoid FUN_0010b130(undefined8 param_1,char *param_2,char *param_3)\n\n{\n  char cVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  char cVar6;\n  long lVar7;\n  long in_FS_OFFSET;\n  char local_d8 [200];\n  long local_10;\n  \n  uVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    cVar1 = *param_3;\n    if (cVar1 == '\\0') break;\n    pcVar2 = param_3 + 1;\n    if ((cVar1 == '@') && (param_2 != (char *)0x0)) {\n      cVar1 = param_3[1];\n      if (cVar1 == '\\0') {\n        cVar1 = '@';\n        goto LAB_0010b160;\n      }\n      if (cVar1 == '1') {\n        lVar7 = 0x20;\n        pcVar2 = param_2;\n      }\n      else {\n        cVar6 = '2';\n        lVar7 = 1;\n        while( true ) {\n          if ((cVar6 == '\\0') || (cVar1 == cVar6)) break;\n          cVar6 = (&UNK_0012a599)[lVar7];\n          lVar7 = lVar7 + 1;\n        }\n        if (7 < (int)lVar7) {\n          pcVar2 = param_3 + 2;\n          goto LAB_0010b160;\n        }\n        lVar3 = (long)(int)lVar7 * 0x20;\n        lVar7 = lVar3 + 0x20;\n        pcVar2 = param_2 + lVar3;\n      }\n      uVar5 = uVar4;\n      do {\n        cVar1 = *pcVar2;\n        uVar4 = uVar5;\n        if ((param_2 + lVar7 <= pcVar2) || (cVar1 == '\\0')) break;\n        uVar4 = uVar5 + 1;\n        pcVar2 = pcVar2 + 1;\n        local_d8[uVar5] = cVar1;\n        uVar5 = uVar4;\n      } while (uVar4 != 0xbf);\n      param_3 = param_3 + 2;\n    }\n    else {\nLAB_0010b160:\n      param_3 = pcVar2;\n      local_d8[uVar4] = cVar1;\n      uVar4 = uVar4 + 1;\n    }\n  } while (uVar4 < 0xbf);\n  local_d8[uVar4] = '\\0';\n  png_warning(param_1,local_d8);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0010b2e0": "\nvoid FUN_0010b2e0(long param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  ulong uStack16;\n  \n  uStack16 = *(ulong *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    lVar1 = *(long *)(param_1 + 0xd0);\n    if (((lVar1 != 0) && (*(long *)(param_1 + 0xd8) != 0)) && (param_1 != lVar1)) {\n      iVar2 = _setjmp((__jmp_buf_tag *)&stack0xffffffffffffff28);\n      if (iVar2 == 0) {\n        *(undefined **)(param_1 + 0xd0) = &stack0xffffffffffffff28;\n        *(undefined8 *)(param_1 + 0xd8) = 0;\n        *(code **)(param_1 + 200) = __longjmp_chk;\n        png_free(param_1,lVar1);\n      }\n    }\n    *(undefined8 *)(param_1 + 0xd8) = 0;\n    *(undefined8 *)(param_1 + 0xd0) = 0;\n    *(undefined8 *)(param_1 + 200) = 0;\n  }\n  if (uStack16 == *(ulong *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0010b470": "\nvoid FUN_0010b470(long param_1)\n\n{\n  if ((*(byte *)(param_1 + 0x132) & 0x20) != 0) {\n    png_warning();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error();\n}\n\n", "FUN_0010b490": "\nvoid FUN_0010b490(long param_1)\n\n{\n  if ((*(byte *)(param_1 + 0x132) & 0x40) != 0) {\n    png_warning();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error();\n}\n\n", "FUN_0010b520": "\nvoid FUN_0010b520(long param_1,undefined8 param_2,int param_3)\n\n{\n  if ((*(byte *)(param_1 + 0x12d) & 0x80) == 0) {\n    if (0 < param_3) {\n      FUN_0010b490();\n      return;\n    }\n    FUN_0010b470();\n    return;\n  }\n  if (1 < param_3) {\n    png_chunk_benign_error();\n    return;\n  }\n  png_chunk_warning();\n  return;\n}\n\n", "FUN_0010b5c0": "\nvoid FUN_0010b5c0(undefined8 param_1,long param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long in_FS_OFFSET;\n  undefined8 local_f8;\n  undefined8 uStack240;\n  undefined8 local_e8;\n  char local_e0 [208];\n  undefined8 local_10;\n  \n  uVar2 = 0;\n  local_10 = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  local_e8 = 0x206e6920776f6c66;\n  local_f8 = 0x6f70206465786966;\n  uStack240 = 0x7265766f20746e69;\n  if (param_2 != 0) {\n    uVar1 = 0;\n    do {\n      uVar2 = uVar1 & 0xffffffff;\n      if (*(char *)(param_2 + uVar1) == '\\0') goto LAB_0010b62a;\n      local_e0[uVar1] = *(char *)(param_2 + uVar1);\n      uVar1 = uVar1 + 1;\n    } while (uVar1 != 0xc3);\n    uVar2 = 0xc3;\n  }\nLAB_0010b62a:\n  local_e0[uVar2] = '\\0';\n                    /* WARNING: Subroutine does not return */\n  png_error(0x6f70206465786966,param_1,&local_f8);\n}\n\n", "png_set_longjmp_fn": "\nlong png_set_longjmp_fn(long param_1,undefined8 param_2,ulong param_3)\n\n{\n  long lVar1;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  lVar1 = *(long *)(param_1 + 0xd0);\n  if (lVar1 == 0) {\n    *(undefined8 *)(param_1 + 0xd8) = 0;\n    if (param_3 < 0xc9) {\n      *(long *)(param_1 + 0xd0) = param_1;\n      lVar1 = param_1;\n    }\n    else {\n      lVar1 = png_malloc_warn(param_1,param_3);\n      *(long *)(param_1 + 0xd0) = lVar1;\n      if (lVar1 == 0) {\n        return 0;\n      }\n      *(ulong *)(param_1 + 0xd8) = param_3;\n    }\n  }\n  else if (*(ulong *)(param_1 + 0xd8) == 0) {\n    if (lVar1 != param_1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Libpng jmp_buf still allocated\");\n    }\n    if (param_3 != 200) goto LAB_0010b69f;\n  }\n  else if (*(ulong *)(param_1 + 0xd8) != param_3) {\nLAB_0010b69f:\n    png_warning(param_1,\"Application jmp_buf size changed\");\n    return 0;\n  }\n  *(undefined8 *)(param_1 + 200) = param_2;\n  return lVar1;\n}\n\n", "png_get_error_ptr": "\nundefined8 png_get_error_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 0xf0);\n  }\n  return 0;\n}\n\n", "FUN_0010b760": "\nvoid FUN_0010b760(long param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  undefined8 uVar4;\n  \n  plVar2 = *(long **)(param_1 + 0xf0);\n  if (plVar2 == (long *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar1 = (long)plVar2 + 0x24;\n  FUN_0010adb0(lVar1,0x40,0,param_2);\n  *(uint *)(plVar2 + 4) = *(uint *)(plVar2 + 4) | 2;\n  if ((*plVar2 != 0) && (lVar3 = *(long *)(*plVar2 + 0x10), lVar3 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    __longjmp_chk(lVar3,1);\n  }\n  uVar4 = FUN_0010adb0(lVar1,0x40,0,\"bad longjmp: \");\n  FUN_0010adb0(lVar1,0x40,uVar4,param_2);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", "FUN_0010b7e0": "\nvoid FUN_0010b7e0(long param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = *(long *)(param_1 + 0xf0);\n  if (*(int *)(lVar1 + 0x20) != 0) {\n    return;\n  }\n  FUN_0010adb0(lVar1 + 0x24,0x40,0,param_2);\n  *(uint *)(lVar1 + 0x20) = *(uint *)(lVar1 + 0x20) | 1;\n  return;\n}\n\n", "FUN_0010b820": "\nuint FUN_0010b820(long *param_1,code *param_2,undefined8 param_3)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  uint local_ec;\n  ulong uStack16;\n  \n  uStack16 = *(ulong *)(in_FS_OFFSET + 0x28);\n  uVar1 = *(undefined8 *)(*param_1 + 0x10);\n  iVar2 = _setjmp((__jmp_buf_tag *)&stack0xffffffffffffff28);\n  local_ec = (uint)(iVar2 == 0);\n  if (local_ec != 0) {\n    *(undefined **)(*param_1 + 0x10) = &stack0xffffffffffffff28;\n    local_ec = (*param_2)(param_3);\n  }\n  *(undefined8 *)(*param_1 + 0x10) = uVar1;\n  if (local_ec == 0) {\n    png_image_free(param_1);\n  }\n  if (uStack16 == *(ulong *)(in_FS_OFFSET + 0x28)) {\n    return local_ec;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0010b900": "\nundefined4 FUN_0010b900(int param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined4 local_14;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 < 0) || (iVar1 = FUN_00108ce0(&local_14,param_1,0x7f,5000), iVar1 == 0)) {\n    local_14 = 0;\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_14;\n}\n\n", "png_get_valid": "\nuint png_get_valid(long param_1,long param_2,uint param_3)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(uint *)(param_2 + 8) & param_3;\n  }\n  return 0;\n}\n\n", "png_get_rows": "\nundefined8 png_get_rows(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined8 *)(param_2 + 0x160);\n  }\n  return 0;\n}\n\n", "png_get_image_width": "\nundefined4 png_get_image_width(long param_1,undefined4 *param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != (undefined4 *)0x0)) {\n    return *param_2;\n  }\n  return 0;\n}\n\n", "png_get_image_height": "\nundefined4 png_get_image_height(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined4 *)(param_2 + 4);\n  }\n  return 0;\n}\n\n", "png_get_bit_depth": "\nundefined png_get_bit_depth(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x24);\n  }\n  return 0;\n}\n\n", "png_get_color_type": "\nundefined png_get_color_type(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x25);\n  }\n  return 0;\n}\n\n", "png_get_filter_type": "\nundefined png_get_filter_type(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x27);\n  }\n  return 0;\n}\n\n", "png_get_interlace_type": "\nundefined png_get_interlace_type(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x28);\n  }\n  return 0;\n}\n\n", "png_get_compression_type": "\nundefined png_get_compression_type(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined *)(param_2 + 0x26);\n  }\n  return 0;\n}\n\n", "png_get_pixel_aspect_ratio": "\nulong png_get_pixel_aspect_ratio(long param_1,long param_2)\n\n{\n  ulong in_RAX;\n  \n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 8) & 0x80) != 0)) &&\n     (*(int *)(param_2 + 0xe0) != 0)) {\n    return (ulong)*(uint *)(param_2 + 0xe4);\n  }\n  return in_RAX;\n}\n\n", "png_get_pixel_aspect_ratio_fixed": "\nint png_get_pixel_aspect_ratio_fixed(long param_1,long param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  int local_14;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = 0;\n  if ((param_1 == 0) || (param_2 == 0)) {\n    iVar2 = 0;\n  }\n  else if (((((*(byte *)(param_2 + 8) & 0x80) != 0) && (*(int *)(param_2 + 0xe0) != 0)) &&\n           (iVar1 = *(int *)(param_2 + 0xe4), iVar1 != 0)) &&\n          (((iVar2 = 0, -1 < *(int *)(param_2 + 0xe0) && (-1 < iVar1)) &&\n           (iVar2 = FUN_00108ce0(&local_14,iVar1,100000), iVar2 != 0)))) {\n    iVar2 = local_14;\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar2;\n}\n\n", "png_get_x_offset_pixels": "\nundefined4 png_get_x_offset_pixels(long param_1,long param_2)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 1) != 0)) &&\n     (*(char *)(param_2 + 0xdc) == '\\0')) {\n    return *(undefined4 *)(param_2 + 0xd4);\n  }\n  return 0;\n}\n\n", "png_get_y_offset_pixels": "\nundefined4 png_get_y_offset_pixels(long param_1,long param_2)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 1) != 0)) &&\n     (*(char *)(param_2 + 0xdc) == '\\0')) {\n    return *(undefined4 *)(param_2 + 0xd8);\n  }\n  return 0;\n}\n\n", "png_get_pixels_per_inch": "\nvoid png_get_pixels_per_inch(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = png_get_pixels_per_meter();\n  FUN_0010b900(uVar1);\n  return;\n}\n\n", "png_get_x_pixels_per_inch": "\nvoid png_get_x_pixels_per_inch(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = png_get_x_pixels_per_meter();\n  FUN_0010b900(uVar1);\n  return;\n}\n\n", "png_get_y_pixels_per_inch": "\nvoid png_get_y_pixels_per_inch(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = png_get_y_pixels_per_meter();\n  FUN_0010b900(uVar1);\n  return;\n}\n\n", "png_get_x_offset_inches_fixed": "\nvoid png_get_x_offset_inches_fixed(undefined8 param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = png_get_x_offset_microns();\n  FUN_00109160(param_1,uVar1,500,0x7f);\n  return;\n}\n\n", "png_get_y_offset_inches_fixed": "\nvoid png_get_y_offset_inches_fixed(undefined8 param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = png_get_y_offset_microns();\n  FUN_00109160(param_1,uVar1,500,0x7f);\n  return;\n}\n\n", "png_get_x_offset_inches": "\nvoid png_get_x_offset_inches(void)\n\n{\n  png_get_x_offset_microns();\n  return;\n}\n\n", "png_get_y_offset_inches": "\nvoid png_get_y_offset_inches(void)\n\n{\n  png_get_y_offset_microns();\n  return;\n}\n\n", "png_get_pHYs_dpi": "\nuint png_get_pHYs_dpi(long param_1,long param_2,uint *param_3,uint *param_4,uint *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = *(uint *)(param_2 + 8) & 0x80;\n    if (uVar2 != 0) {\n      uVar2 = 0;\n      if (param_3 != (uint *)0x0) {\n        *param_3 = *(uint *)(param_2 + 0xe0);\n        uVar2 = 0x80;\n      }\n      if (param_4 != (uint *)0x0) {\n        *param_4 = *(uint *)(param_2 + 0xe4);\n        uVar2 = 0x80;\n      }\n      if (param_5 != (uint *)0x0) {\n        bVar1 = *(byte *)(param_2 + 0xe8);\n        *param_5 = (uint)bVar1;\n        if (bVar1 == 1) {\n          if (param_3 != (uint *)0x0) {\n            *param_3 = (uint)(long)((double)(ulong)*param_3 * 0.0254 + 0.5);\n          }\n          if (param_4 != (uint *)0x0) {\n            *param_4 = (uint)(long)((double)(ulong)*param_4 * 0.0254 + 0.5);\n          }\n        }\n        return 0x80;\n      }\n    }\n  }\n  return uVar2;\n}\n\n", "png_get_signature": "\nlong png_get_signature(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return param_2 + 0x2c;\n  }\n  return 0;\n}\n\n", "png_get_bKGD": "\nundefined8 png_get_bKGD(long param_1,long param_2,long *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 8) & 0x20) != 0)) &&\n     (param_3 != (long *)0x0)) {\n    *param_3 = param_2 + 0xca;\n    return 0x20;\n  }\n  return 0;\n}\n\n", "png_get_cHRM": "\nundefined8\npng_get_cHRM(long param_1,long param_2,double *param_3,double *param_4,double *param_5,\n            double *param_6,double *param_7,double *param_8,double *param_9,double *param_10)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 2) != 0)) {\n    if (param_3 != (double *)0x0) {\n      *param_3 = (double)*(int *)(param_2 + 0x50) * 1e-05;\n    }\n    if (param_4 != (double *)0x0) {\n      *param_4 = (double)*(int *)(param_2 + 0x54) * 1e-05;\n    }\n    if (param_5 != (double *)0x0) {\n      *param_5 = (double)*(int *)(param_2 + 0x38) * 1e-05;\n    }\n    if (param_6 != (double *)0x0) {\n      *param_6 = (double)*(int *)(param_2 + 0x3c) * 1e-05;\n    }\n    if (param_7 != (double *)0x0) {\n      *param_7 = (double)*(int *)(param_2 + 0x40) * 1e-05;\n    }\n    if (param_8 != (double *)0x0) {\n      *param_8 = (double)*(int *)(param_2 + 0x44) * 1e-05;\n    }\n    if (param_9 != (double *)0x0) {\n      *param_9 = (double)*(int *)(param_2 + 0x48) * 1e-05;\n    }\n    uVar1 = 4;\n    if (param_10 != (double *)0x0) {\n      *param_10 = (double)*(int *)(param_2 + 0x4c) * 1e-05;\n      return uVar1;\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_cHRM_XYZ": "\nundefined8\npng_get_cHRM_XYZ(long param_1,long param_2,double *param_3,double *param_4,double *param_5,\n                double *param_6,double *param_7,double *param_8,double *param_9,double *param_10,\n                double *param_11)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 2) != 0)) {\n    if (param_3 != (double *)0x0) {\n      *param_3 = (double)*(int *)(param_2 + 0x58) * 1e-05;\n    }\n    if (param_4 != (double *)0x0) {\n      *param_4 = (double)*(int *)(param_2 + 0x5c) * 1e-05;\n    }\n    if (param_5 != (double *)0x0) {\n      *param_5 = (double)*(int *)(param_2 + 0x60) * 1e-05;\n    }\n    if (param_6 != (double *)0x0) {\n      *param_6 = (double)*(int *)(param_2 + 100) * 1e-05;\n    }\n    if (param_7 != (double *)0x0) {\n      *param_7 = (double)*(int *)(param_2 + 0x68) * 1e-05;\n    }\n    if (param_8 != (double *)0x0) {\n      *param_8 = (double)*(int *)(param_2 + 0x6c) * 1e-05;\n    }\n    if (param_9 != (double *)0x0) {\n      *param_9 = (double)*(int *)(param_2 + 0x70) * 1e-05;\n    }\n    if (param_10 != (double *)0x0) {\n      *param_10 = (double)*(int *)(param_2 + 0x74) * 1e-05;\n    }\n    uVar1 = 4;\n    if (param_11 != (double *)0x0) {\n      *param_11 = (double)*(int *)(param_2 + 0x78) * 1e-05;\n      return uVar1;\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_cHRM_XYZ_fixed": "\nundefined8\npng_get_cHRM_XYZ_fixed\n          (long param_1,long param_2,undefined4 *param_3,undefined4 *param_4,undefined4 *param_5,\n          undefined4 *param_6,undefined4 *param_7,undefined4 *param_8,undefined4 *param_9,\n          undefined4 *param_10,undefined4 *param_11)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 2) != 0)) {\n    if (param_3 != (undefined4 *)0x0) {\n      *param_3 = *(undefined4 *)(param_2 + 0x58);\n    }\n    if (param_4 != (undefined4 *)0x0) {\n      *param_4 = *(undefined4 *)(param_2 + 0x5c);\n    }\n    if (param_5 != (undefined4 *)0x0) {\n      *param_5 = *(undefined4 *)(param_2 + 0x60);\n    }\n    if (param_6 != (undefined4 *)0x0) {\n      *param_6 = *(undefined4 *)(param_2 + 100);\n    }\n    if (param_7 != (undefined4 *)0x0) {\n      *param_7 = *(undefined4 *)(param_2 + 0x68);\n    }\n    if (param_8 != (undefined4 *)0x0) {\n      *param_8 = *(undefined4 *)(param_2 + 0x6c);\n    }\n    if (param_9 != (undefined4 *)0x0) {\n      *param_9 = *(undefined4 *)(param_2 + 0x70);\n    }\n    if (param_10 != (undefined4 *)0x0) {\n      *param_10 = *(undefined4 *)(param_2 + 0x74);\n    }\n    uVar1 = 4;\n    if (param_11 != (undefined4 *)0x0) {\n      *param_11 = *(undefined4 *)(param_2 + 0x78);\n      return uVar1;\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_cHRM_fixed": "\nundefined8\npng_get_cHRM_fixed(long param_1,long param_2,undefined4 *param_3,undefined4 *param_4,\n                  undefined4 *param_5,undefined4 *param_6,undefined4 *param_7,undefined4 *param_8,\n                  undefined4 *param_9,undefined4 *param_10)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 2) != 0)) {\n    if (param_3 != (undefined4 *)0x0) {\n      *param_3 = *(undefined4 *)(param_2 + 0x50);\n    }\n    if (param_4 != (undefined4 *)0x0) {\n      *param_4 = *(undefined4 *)(param_2 + 0x54);\n    }\n    if (param_5 != (undefined4 *)0x0) {\n      *param_5 = *(undefined4 *)(param_2 + 0x38);\n    }\n    if (param_6 != (undefined4 *)0x0) {\n      *param_6 = *(undefined4 *)(param_2 + 0x3c);\n    }\n    if (param_7 != (undefined4 *)0x0) {\n      *param_7 = *(undefined4 *)(param_2 + 0x40);\n    }\n    if (param_8 != (undefined4 *)0x0) {\n      *param_8 = *(undefined4 *)(param_2 + 0x44);\n    }\n    if (param_9 != (undefined4 *)0x0) {\n      *param_9 = *(undefined4 *)(param_2 + 0x48);\n    }\n    uVar1 = 4;\n    if (param_10 != (undefined4 *)0x0) {\n      *param_10 = *(undefined4 *)(param_2 + 0x4c);\n      return uVar1;\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_gAMA_fixed": "\nundefined8 png_get_gAMA_fixed(long param_1,long param_2,undefined4 *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 1) != 0)) &&\n     (param_3 != (undefined4 *)0x0)) {\n    *param_3 = *(undefined4 *)(param_2 + 0x34);\n    return 1;\n  }\n  return 0;\n}\n\n", "png_get_gAMA": "\nundefined8 png_get_gAMA(long param_1,long param_2,double *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 0x7e) & 1) != 0)) &&\n     (param_3 != (double *)0x0)) {\n    *param_3 = (double)*(int *)(param_2 + 0x34) * 1e-05;\n    return 1;\n  }\n  return 0;\n}\n\n", "png_get_sRGB": "\nundefined8 png_get_sRGB(long param_1,long param_2,uint *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 8) != 0)) &&\n     (param_3 != (uint *)0x0)) {\n    *param_3 = (uint)*(ushort *)(param_2 + 0x7c);\n    return 0x800;\n  }\n  return 0;\n}\n\n", "png_get_iCCP": "\nundefined4\npng_get_iCCP(long param_1,long param_2,undefined8 *param_3,undefined4 *param_4,byte **param_5,\n            int *param_6)\n\n{\n  byte *pbVar1;\n  \n  if ((param_1 != 0) && (param_2 != 0)) {\n    if ((*(uint *)(param_2 + 8) & 0x1000) == 0) {\n      return 0;\n    }\n    if ((param_3 != (undefined8 *)0x0 && param_5 != (byte **)0x0) && (param_6 != (int *)0x0)) {\n      pbVar1 = *(byte **)(param_2 + 0x88);\n      *param_3 = *(undefined8 *)(param_2 + 0x80);\n      *param_5 = pbVar1;\n      *param_6 = (uint)pbVar1[2] * 0x100 +\n                 (uint)pbVar1[3] + (uint)pbVar1[1] * 0x10000 + (uint)*pbVar1 * 0x1000000;\n      if (param_4 == (undefined4 *)0x0) {\n        return 0x1000;\n      }\n      *param_4 = 0;\n      return 0x1000;\n    }\n  }\n  return 0;\n}\n\n", "png_get_sPLT": "\nundefined4 png_get_sPLT(long param_1,long param_2,undefined8 *param_3)\n\n{\n  if ((param_3 != (undefined8 *)0x0 && param_2 != 0) && (param_1 != 0)) {\n    *param_3 = *(undefined8 *)(param_2 + 0x140);\n    return *(undefined4 *)(param_2 + 0x148);\n  }\n  return 0;\n}\n\n", "png_get_eXIf": "\nundefined8 png_get_eXIf(undefined8 param_1)\n\n{\n  png_warning(param_1,\"png_get_eXIf does not work; use png_get_eXIf_1\");\n  return 0;\n}\n\n", "png_get_eXIf_1": "\nundefined8 png_get_eXIf_1(long param_1,long param_2,undefined4 *param_3,undefined8 *param_4)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 10) & 1) != 0)) &&\n     (param_4 != (undefined8 *)0x0)) {\n    *param_3 = *(undefined4 *)(param_2 + 0xec);\n    *param_4 = *(undefined8 *)(param_2 + 0xf0);\n    return 0x10000;\n  }\n  return 0;\n}\n\n", "png_get_hIST": "\nundefined8 png_get_hIST(long param_1,long param_2,undefined8 *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 8) & 0x40) != 0)) &&\n     (param_3 != (undefined8 *)0x0)) {\n    *param_3 = *(undefined8 *)(param_2 + 0x100);\n    return 0x40;\n  }\n  return 0;\n}\n\n", "png_get_IHDR": "\nundefined  [16]\npng_get_IHDR(long param_1,undefined4 *param_2,undefined4 *param_3,undefined4 *param_4,uint *param_5,\n            uint *param_6,uint *param_7,uint *param_8,uint *param_9)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  \n  if ((param_1 != 0) && (param_2 != (undefined4 *)0x0)) {\n    uVar2 = *param_2;\n    if (param_3 != (undefined4 *)0x0) {\n      *param_3 = uVar2;\n    }\n    if (param_4 != (undefined4 *)0x0) {\n      *param_4 = param_2[1];\n    }\n    if (param_5 != (uint *)0x0) {\n      *param_5 = (uint)*(byte *)(param_2 + 9);\n    }\n    if (param_6 != (uint *)0x0) {\n      *param_6 = (uint)*(byte *)((long)param_2 + 0x25);\n    }\n    if (param_8 != (uint *)0x0) {\n      *param_8 = (uint)*(byte *)((long)param_2 + 0x26);\n    }\n    bVar1 = *(byte *)((long)param_2 + 0x27);\n    if (param_9 != (uint *)0x0) {\n      *param_9 = (uint)bVar1;\n    }\n    if (param_7 != (uint *)0x0) {\n      *param_7 = (uint)*(byte *)(param_2 + 10);\n    }\n    FUN_00107f60(param_1,uVar2);\n    return CONCAT88((ulong)bVar1,1);\n  }\n  return ZEXT816(param_3) << 0x40;\n}\n\n", "png_get_oFFs": "\nundefined4\npng_get_oFFs(long param_1,long param_2,undefined4 *param_3,undefined4 *param_4,uint *param_5)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    if ((*(uint *)(param_2 + 8) & 0x100) == 0) {\n      return 0;\n    }\n    if ((param_3 != (undefined4 *)0x0 && param_4 != (undefined4 *)0x0) && (param_5 != (uint *)0x0))\n    {\n      *param_3 = *(undefined4 *)(param_2 + 0xd4);\n      *param_4 = *(undefined4 *)(param_2 + 0xd8);\n      *param_5 = (uint)*(byte *)(param_2 + 0xdc);\n      return 0x100;\n    }\n  }\n  return 0;\n}\n\n", "png_get_pCAL": "\nundefined4\npng_get_pCAL(long param_1,long param_2,undefined8 *param_3,undefined4 *param_4,undefined4 *param_5,\n            uint *param_6,uint *param_7,undefined8 *param_8,undefined8 *param_9)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    if ((*(uint *)(param_2 + 8) & 0x400) == 0) {\n      return 0;\n    }\n    if ((((param_3 != (undefined8 *)0x0) && (param_4 != (undefined4 *)0x0)) &&\n        (param_5 != (undefined4 *)0x0)) &&\n       (((param_6 != (uint *)0x0 && (param_7 != (uint *)0x0 && param_8 != (undefined8 *)0x0)) &&\n        (param_9 != (undefined8 *)0x0)))) {\n      *param_3 = *(undefined8 *)(param_2 + 0x108);\n      *param_4 = *(undefined4 *)(param_2 + 0x110);\n      *param_5 = *(undefined4 *)(param_2 + 0x114);\n      *param_6 = (uint)*(byte *)(param_2 + 0x128);\n      *param_7 = (uint)*(byte *)(param_2 + 0x129);\n      *param_8 = *(undefined8 *)(param_2 + 0x118);\n      *param_9 = *(undefined8 *)(param_2 + 0x120);\n      return 0x400;\n    }\n  }\n  return 0;\n}\n\n", "png_get_sCAL_fixed": "\nuint png_get_sCAL_fixed(long param_1,long param_2,uint *param_3,undefined4 *param_4,\n                       undefined4 *param_5)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  \n  if (param_1 != 0) {\n    uVar2 = 0;\n    if ((param_2 != 0) && (uVar2 = *(uint *)(param_2 + 8) & 0x4000, uVar2 != 0)) {\n      pcVar1 = *(char **)(param_2 + 0x150);\n      *param_3 = (uint)*(byte *)(param_2 + 0x14c);\n      strtod(pcVar1,(char **)0x0);\n      uVar3 = FUN_00108c50(param_1);\n      pcVar1 = *(char **)(param_2 + 0x158);\n      *param_4 = uVar3;\n      strtod(pcVar1,(char **)0x0);\n      uVar3 = FUN_00108c50(param_1,\"sCAL height\");\n      *param_5 = uVar3;\n      uVar2 = 0x4000;\n    }\n    return uVar2;\n  }\n  return 0;\n}\n\n", "png_get_sCAL": "\nuint png_get_sCAL(long param_1,long param_2,uint *param_3,double *param_4,double *param_5)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  double dVar3;\n  \n  if (param_1 != 0) {\n    uVar2 = 0;\n    if ((param_2 != 0) && (uVar2 = *(uint *)(param_2 + 8) & 0x4000, uVar2 != 0)) {\n      pcVar1 = *(char **)(param_2 + 0x150);\n      *param_3 = (uint)*(byte *)(param_2 + 0x14c);\n      dVar3 = strtod(pcVar1,(char **)0x0);\n      pcVar1 = *(char **)(param_2 + 0x158);\n      *param_4 = dVar3;\n      dVar3 = strtod(pcVar1,(char **)0x0);\n      uVar2 = 0x4000;\n      *param_5 = dVar3;\n    }\n    return uVar2;\n  }\n  return 0;\n}\n\n", "png_get_sCAL_s": "\nuint png_get_sCAL_s(long param_1,long param_2,uint *param_3,undefined8 *param_4,undefined8 *param_5)\n\n{\n  uint uVar1;\n  \n  if ((param_1 != 0) && (param_2 != 0)) {\n    uVar1 = *(uint *)(param_2 + 8) & 0x4000;\n    if (uVar1 == 0) {\n      return uVar1;\n    }\n    *param_3 = (uint)*(byte *)(param_2 + 0x14c);\n    *param_4 = *(undefined8 *)(param_2 + 0x150);\n    *param_5 = *(undefined8 *)(param_2 + 0x158);\n    return 0x4000;\n  }\n  return 0;\n}\n\n", "png_get_pHYs": "\nuint png_get_pHYs(long param_1,long param_2,undefined4 *param_3,undefined4 *param_4,uint *param_5)\n\n{\n  uint uVar1;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = *(uint *)(param_2 + 8) & 0x80;\n    if (uVar1 != 0) {\n      uVar1 = 0;\n      if (param_3 != (undefined4 *)0x0) {\n        *param_3 = *(undefined4 *)(param_2 + 0xe0);\n        uVar1 = 0x80;\n      }\n      if (param_4 != (undefined4 *)0x0) {\n        *param_4 = *(undefined4 *)(param_2 + 0xe4);\n        uVar1 = 0x80;\n      }\n      if (param_5 != (uint *)0x0) {\n        *param_5 = (uint)*(byte *)(param_2 + 0xe8);\n        return 0x80;\n      }\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_PLTE": "\nundefined8 png_get_PLTE(long param_1,long param_2,undefined8 *param_3,uint *param_4)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 8) & 8) != 0)) &&\n     (param_3 != (undefined8 *)0x0)) {\n    *param_3 = *(undefined8 *)(param_2 + 0x18);\n    *param_4 = (uint)*(ushort *)(param_2 + 0x20);\n    return 8;\n  }\n  return 0;\n}\n\n", "png_get_sBIT": "\nundefined8 png_get_sBIT(long param_1,long param_2,long *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 8) & 2) != 0)) &&\n     (param_3 != (long *)0x0)) {\n    *param_3 = param_2 + 0xb0;\n    return 2;\n  }\n  return 0;\n}\n\n", "png_get_text": "\nint png_get_text(long param_1,long param_2,undefined8 *param_3,int *param_4)\n\n{\n  int iVar1;\n  \n  if ((param_1 != 0) && (param_2 != 0)) {\n    iVar1 = *(int *)(param_2 + 0x94);\n    if (0 < iVar1) {\n      if (param_3 != (undefined8 *)0x0) {\n        *param_3 = *(undefined8 *)(param_2 + 0xa0);\n      }\n      if (param_4 == (int *)0x0) {\n        return iVar1;\n      }\n      *param_4 = iVar1;\n      return iVar1;\n    }\n  }\n  if (param_4 != (int *)0x0) {\n    *param_4 = 0;\n  }\n  return 0;\n}\n\n", "png_get_tIME": "\nundefined8 png_get_tIME(long param_1,long param_2,long *param_3)\n\n{\n  if ((((param_1 != 0) && (param_2 != 0)) && ((*(byte *)(param_2 + 9) & 2) != 0)) &&\n     (param_3 != (long *)0x0)) {\n    *param_3 = param_2 + 0xa8;\n    return 0x200;\n  }\n  return 0;\n}\n\n", "png_get_tRNS": "\nuint png_get_tRNS(long param_1,long param_2,undefined8 *param_3,uint *param_4,long *param_5)\n\n{\n  uint uVar1;\n  \n  if ((param_1 == 0) || (param_2 == 0)) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = *(uint *)(param_2 + 8) & 0x10;\n    if (uVar1 != 0) {\n      uVar1 = 0;\n      if (*(char *)(param_2 + 0x25) == '\\x03') {\n        if (param_3 != (undefined8 *)0x0) {\n          *param_3 = *(undefined8 *)(param_2 + 0xb8);\n          uVar1 = 0x10;\n        }\n        if (param_5 != (long *)0x0) {\n          *param_5 = param_2 + 0xc0;\n        }\n      }\n      else {\n        if (param_5 != (long *)0x0) {\n          *param_5 = param_2 + 0xc0;\n          uVar1 = 0x10;\n        }\n        if (param_3 != (undefined8 *)0x0) {\n          *param_3 = 0;\n        }\n      }\n      if (param_4 != (uint *)0x0) {\n        *param_4 = (uint)*(ushort *)(param_2 + 0x22);\n        return 0x10;\n      }\n    }\n  }\n  return uVar1;\n}\n\n", "png_get_unknown_chunks": "\nundefined4 png_get_unknown_chunks(long param_1,long param_2,undefined8 *param_3)\n\n{\n  if ((param_3 != (undefined8 *)0x0 && param_2 != 0) && (param_1 != 0)) {\n    *param_3 = *(undefined8 *)(param_2 + 0x130);\n    return *(undefined4 *)(param_2 + 0x138);\n  }\n  return 0;\n}\n\n", "png_get_rgb_to_gray_status": "\nundefined png_get_rgb_to_gray_status(long param_1)\n\n{\n  undefined uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    uVar1 = *(undefined *)(param_1 + 0x3d0);\n  }\n  return uVar1;\n}\n\n", "png_get_user_chunk_ptr": "\nundefined8 png_get_user_chunk_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 0x3b0);\n  }\n  return 0;\n}\n\n", "png_get_compression_buffer_size": "\nundefined4 png_get_compression_buffer_size(long param_1)\n\n{\n  if (param_1 == 0) {\n    return 0;\n  }\n  if ((*(byte *)(param_1 + 0x12d) & 0x80) != 0) {\n    return *(undefined4 *)(param_1 + 0x470);\n  }\n  return *(undefined4 *)(param_1 + 0x1b8);\n}\n\n", "png_get_user_width_max": "\nundefined4 png_get_user_width_max(long param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    uVar1 = *(undefined4 *)(param_1 + 0x424);\n  }\n  return uVar1;\n}\n\n", "png_get_user_height_max": "\nundefined4 png_get_user_height_max(long param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    uVar1 = *(undefined4 *)(param_1 + 0x428);\n  }\n  return uVar1;\n}\n\n", "png_get_chunk_cache_max": "\nundefined4 png_get_chunk_cache_max(long param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    uVar1 = *(undefined4 *)(param_1 + 0x42c);\n  }\n  return uVar1;\n}\n\n", "png_get_chunk_malloc_max": "\nundefined8 png_get_chunk_malloc_max(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    uVar1 = *(undefined8 *)(param_1 + 0x430);\n  }\n  return uVar1;\n}\n\n", "png_get_io_state": "\nundefined4 png_get_io_state(long param_1)\n\n{\n  return *(undefined4 *)(param_1 + 0x474);\n}\n\n", "png_get_io_chunk_type": "\nundefined4 png_get_io_chunk_type(long param_1)\n\n{\n  return *(undefined4 *)(param_1 + 0x218);\n}\n\n", "png_get_palette_max": "\nundefined4 png_get_palette_max(long param_1,long param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    return *(undefined4 *)(param_1 + 0x25c);\n  }\n  return 0xffffffff;\n}\n\n", "FUN_0010cbb0": "\nvoid * FUN_0010cbb0(long param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if (param_2 == 0) {\n    return (void *)0x0;\n  }\n  if ((param_1 != 0) && (*(code **)(param_1 + 0x3f0) != (code *)0x0)) {\n                    /* WARNING: Could not recover jumptable at 0x0010cbca. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    pvVar1 = (void *)(**(code **)(param_1 + 0x3f0))();\n    return pvVar1;\n  }\n  pvVar1 = malloc(param_2);\n  return pvVar1;\n}\n\n", "FUN_0010cbf0": "\nundefined8 FUN_0010cbf0(undefined8 param_1,int param_2,ulong param_3)\n\n{\n  undefined8 uVar1;\n  \n  if ((0 < param_2) && (param_3 != 0)) {\n    if (SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(param_3) >> 0x40,0) == 0) {\n      uVar1 = FUN_0010cbb0(param_1,SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(param_3),0));\n      return uVar1;\n    }\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"internal error: array alloc\");\n}\n\n", "FUN_0010cc20": "\nvoid * FUN_0010cc20(undefined8 param_1,void *param_2,int param_3,int param_4,ulong param_5)\n\n{\n  void *__dest;\n  \n  if (((0 < param_4 && param_5 != 0) && (-1 < param_3)) &&\n     ((param_2 != (void *)0x0 || (param_3 < 1)))) {\n    if (((param_4 <= 0x7fffffff - param_3) &&\n        (SUB168(ZEXT816((ulong)(long)(param_4 + param_3)) * ZEXT816(param_5) >> 0x40,0) == 0)) &&\n       (__dest = (void *)FUN_0010cbb0(), __dest != (void *)0x0)) {\n      if (param_3 != 0) {\n        memcpy(__dest,param_2,(long)param_3 * param_5);\n      }\n      memset((void *)((long)__dest + (long)param_3 * param_5),0,(long)param_4 * param_5);\n      return __dest;\n    }\n    return (void *)0x0;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"internal error: array realloc\");\n}\n\n", "png_malloc_default": "\nlong png_malloc_default(long param_1)\n\n{\n  long lVar1;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  lVar1 = FUN_0010cbb0(0);\n  if (lVar1 != 0) {\n    return lVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Out of Memory\");\n}\n\n", "png_free_default": "\nvoid png_free_default(long param_1,void *param_2)\n\n{\n  if ((param_1 != 0) && (param_2 != (void *)0x0)) {\n    free(param_2);\n    return;\n  }\n  return;\n}\n\n", "FUN_0010ce50": "\nvoid FUN_0010ce50(undefined8 *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  long in_FS_OFFSET;\n  undefined8 auStack1288 [159];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != (undefined8 *)0x0) {\n    puVar3 = param_1;\n    puVar4 = auStack1288;\n    for (lVar1 = 0x9e; lVar1 != 0; lVar1 = lVar1 + -1) {\n      *puVar4 = *puVar3;\n      puVar3 = puVar3 + 1;\n      puVar4 = puVar4 + 1;\n    }\n    *param_1 = 0;\n    param_1[0x9d] = 0;\n    puVar3 = (undefined8 *)((ulong)(param_1 + 1) & 0xfffffffffffffff8);\n    for (uVar2 = (ulong)(((int)param_1 -\n                         (int)(undefined8 *)((ulong)(param_1 + 1) & 0xfffffffffffffff8)) + 0x4f0U >>\n                        3); uVar2 != 0; uVar2 = uVar2 - 1) {\n      *puVar3 = 0;\n      puVar3 = puVar3 + 1;\n    }\n    png_free(auStack1288,param_1);\n    FUN_0010b2e0(auStack1288);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_get_mem_ptr": "\nundefined8 png_get_mem_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 1000);\n  }\n  return 0;\n}\n\n", "FUN_0010cf30": "\nvoid FUN_0010cf30(long param_1,void *param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  \n  if (param_1 != 0) {\n    uVar1 = *(ulong *)(param_1 + 0x350);\n    if (uVar1 != 0) {\n      if (param_3 < uVar1) {\n        uVar1 = param_3;\n      }\n      param_2 = memcpy(param_2,*(void **)(param_1 + 0x328),uVar1);\n      param_3 = param_3 - uVar1;\n      *(long *)(param_1 + 0x360) = *(long *)(param_1 + 0x360) - uVar1;\n      *(long *)(param_1 + 0x350) = *(long *)(param_1 + 0x350) - uVar1;\n      *(long *)(param_1 + 0x328) = *(long *)(param_1 + 0x328) + uVar1;\n      param_2 = (void *)((long)param_2 + uVar1);\n    }\n    if ((param_3 != 0) && (uVar1 = *(ulong *)(param_1 + 0x368), uVar1 != 0)) {\n      if (uVar1 <= param_3) {\n        param_3 = uVar1;\n      }\n      memcpy(param_2,*(void **)(param_1 + 0x338),param_3);\n      *(long *)(param_1 + 0x360) = *(long *)(param_1 + 0x360) - param_3;\n      *(long *)(param_1 + 0x368) = *(long *)(param_1 + 0x368) - param_3;\n      *(long *)(param_1 + 0x338) = *(long *)(param_1 + 0x338) + param_3;\n      return;\n    }\n  }\n  return;\n}\n\n", "png_process_data_skip": "\nundefined8 png_process_data_skip(undefined8 param_1)\n\n{\n  FUN_0010b470(param_1,\"png_process_data_skip is not implemented in any current version of libpng\");\n  return 0;\n}\n\n", "FUN_0010d000": "\nvoid FUN_0010d000(long param_1,long param_2)\n\n{\n  int iVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)*(byte *)(param_1 + 0x26d);\n  uVar2 = 8 - uVar3;\n  if (*(ulong *)(param_1 + 0x360) < uVar2 || *(ulong *)(param_1 + 0x360) == uVar2) {\n    uVar2 = *(ulong *)(param_1 + 0x360);\n  }\n  FUN_0010cf30(param_1,param_2 + 0x2c + uVar3,uVar2);\n  *(char *)(param_1 + 0x26d) = *(char *)(param_1 + 0x26d) + (char)uVar2;\n  iVar1 = png_sig_cmp(param_2 + 0x2c,uVar3,uVar2);\n  if (iVar1 != 0) {\n    if (uVar3 < 4) {\n      iVar1 = png_sig_cmp(param_2 + 0x2c,uVar3,uVar2 - 4);\n      if (iVar1 != 0) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Not a PNG file\");\n      }\n    }\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"PNG file corrupted by ASCII conversion\");\n  }\n  if (7 < *(byte *)(param_1 + 0x26d)) {\n    *(undefined4 *)(param_1 + 0x370) = 1;\n  }\n  return;\n}\n\n", "FUN_0010d0c0": "\nvoid FUN_0010d0c0(long param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  void *pvVar3;\n  ulong uVar4;\n  size_t sVar5;\n  void *__src;\n  \n  uVar4 = *(ulong *)(param_1 + 0x350);\n  __src = *(void **)(param_1 + 0x330);\n  if (uVar4 == 0) {\n    uVar2 = *(ulong *)(param_1 + 0x368);\n    if (uVar2 < *(ulong *)(param_1 + 0x358) || uVar2 == *(ulong *)(param_1 + 0x358))\n    goto LAB_0010d127;\nLAB_0010d160:\n    pvVar3 = (void *)png_malloc_warn(param_1,uVar2 + 0x100);\n    *(void **)(param_1 + 0x330) = pvVar3;\n    if (pvVar3 == (void *)0x0) {\n      png_free(param_1,__src);\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Insufficient memory for save_buffer\");\n    }\n    if (__src == (void *)0x0) {\n      if (*(size_t *)(param_1 + 0x350) != 0) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"save_buffer error\");\n      }\n    }\n    else {\n      memcpy(pvVar3,__src,*(size_t *)(param_1 + 0x350));\n    }\n    png_free(param_1,__src);\n    *(ulong *)(param_1 + 0x358) = uVar2 + 0x100;\n    sVar5 = *(size_t *)(param_1 + 0x368);\n  }\n  else {\n    pvVar3 = *(void **)(param_1 + 0x328);\n    if (pvVar3 != __src) {\n      uVar2 = 0;\n      do {\n        *(undefined *)((long)__src + uVar2) = *(undefined *)((long)pvVar3 + uVar2);\n        uVar2 = uVar2 + 1;\n      } while (uVar4 != uVar2);\n      uVar4 = *(ulong *)(param_1 + 0x350);\n    }\n    sVar5 = *(size_t *)(param_1 + 0x368);\n    uVar2 = sVar5 + uVar4;\n    if (*(ulong *)(param_1 + 0x358) <= uVar2 && uVar2 != *(ulong *)(param_1 + 0x358)) {\n      if (~(sVar5 + 0x100) < uVar4) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Potential overflow of save_buffer\");\n      }\n      __src = *(void **)(param_1 + 0x330);\n      goto LAB_0010d160;\n    }\n  }\n  __src = *(void **)(param_1 + 0x330);\n  uVar2 = sVar5;\nLAB_0010d127:\n  if (uVar2 != 0) {\n    memcpy((void *)(*(long *)(param_1 + 0x350) + (long)__src),*(void **)(param_1 + 0x338),uVar2);\n    lVar1 = *(long *)(param_1 + 0x368);\n    __src = *(void **)(param_1 + 0x330);\n    *(undefined8 *)(param_1 + 0x368) = 0;\n    *(long *)(param_1 + 0x350) = *(long *)(param_1 + 0x350) + lVar1;\n  }\n  *(void **)(param_1 + 0x328) = __src;\n  *(undefined8 *)(param_1 + 0x360) = 0;\n  return;\n}\n\n", "png_process_data_pause": "\nlong png_process_data_pause(long param_1,int param_2)\n\n{\n  ulong uVar1;\n  \n  if (param_1 != 0) {\n    if (param_2 != 0) {\n      FUN_0010d0c0();\n      return 0;\n    }\n    uVar1 = *(ulong *)(param_1 + 0x360);\n    *(undefined8 *)(param_1 + 0x360) = 0;\n    if (*(ulong *)(param_1 + 0x350) < uVar1) {\n      return uVar1 - *(ulong *)(param_1 + 0x350);\n    }\n  }\n  return 0;\n}\n\n", "FUN_0010d2c0": "\nvoid FUN_0010d2c0(long param_1,undefined8 param_2,long param_3)\n\n{\n  *(long *)(param_1 + 0x368) = param_3;\n  *(undefined8 *)(param_1 + 0x340) = param_2;\n  *(long *)(param_1 + 0x360) = param_3 + *(long *)(param_1 + 0x350);\n  *(undefined8 *)(param_1 + 0x338) = param_2;\n  return;\n}\n\n", "FUN_0010d2f0": "\nvoid FUN_0010d2f0(long param_1)\n\n{\n  uint uVar1;\n  byte bVar2;\n  byte bVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  \n  uVar1 = *(int *)(param_1 + 0x214) + 1;\n  *(uint *)(param_1 + 0x214) = uVar1;\n  if (uVar1 < *(uint *)(param_1 + 0x200)) {\n    return;\n  }\n  if (*(char *)(param_1 + 0x264) == '\\0') {\n    return;\n  }\n  *(undefined4 *)(param_1 + 0x214) = 0;\n  memset(*(void **)(param_1 + 0x220),0,*(long *)(param_1 + 0x208) + 1);\n  bVar2 = *(byte *)(param_1 + 0x265);\n  do {\n    bVar3 = bVar2 + 1;\n    if (bVar2 == 0) {\n      if (*(uint *)(param_1 + 0x1f8) < 5) {\nLAB_0010d435:\n        bVar3 = bVar2 + 2;\nLAB_0010d438:\n        if (7 < bVar3) {\n          *(byte *)(param_1 + 0x265) = bVar3 - 1;\n          return;\n        }\n        if (bVar3 == 7) {\n          *(undefined *)(param_1 + 0x265) = 7;\n          return;\n        }\n      }\n      else {\n        bVar3 = 1;\n      }\n    }\n    else if (bVar3 == 3) {\n      if (*(uint *)(param_1 + 0x1f8) < 3) goto LAB_0010d435;\n    }\n    else {\n      if (bVar3 != 5) goto LAB_0010d438;\n      if (*(uint *)(param_1 + 0x1f8) < 2) goto LAB_0010d435;\n    }\n    bVar2 = bVar3;\n    uVar6 = (uint)(byte)(&DAT_0012a9b1)[bVar2];\n    uVar1 = ((uVar6 - 1) + *(int *)(param_1 + 0x1f8)) - (uint)(byte)(&DAT_0012a9aa)[bVar2];\n    *(uint *)(param_1 + 0x210) = uVar1 / uVar6;\n    if ((*(byte *)(param_1 + 0x134) & 2) != 0) break;\n    uVar5 = (uint)(byte)(&DAT_0012a9a3)[bVar2];\n    uVar4 = ((uVar5 - 1) + *(int *)(param_1 + 0x1fc)) - (uint)(byte)(&DAT_0012a99c)[bVar2];\n    *(uint *)(param_1 + 0x200) = uVar4 / uVar5;\n  } while ((uVar4 < uVar5) || (uVar1 < uVar6));\n  *(byte *)(param_1 + 0x265) = bVar2;\n  return;\n}\n\n", "FUN_0010d4a0": "\nvoid FUN_0010d4a0(long param_1)\n\n{\n  if (*(code **)(param_1 + 0x310) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x0010d4b0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x310))();\n    return;\n  }\n  return;\n}\n\n", "FUN_0010d4c0": "\nvoid FUN_0010d4c0(long param_1)\n\n{\n  if (*(code **)(param_1 + 800) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x0010d4d0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 800))();\n    return;\n  }\n  return;\n}\n\n", "FUN_0010d4e0": "\nvoid FUN_0010d4e0(long param_1,undefined8 param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  ulong uVar7;\n  ulong uVar8;\n  undefined8 extraout_RDX;\n  long in_FS_OFFSET;\n  undefined auStack56 [4];\n  uint local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(param_1 + 0x12d) & 1) == 0) {\n    if (7 < *(ulong *)(param_1 + 0x360)) {\n      FUN_0010cf30(param_1,auStack56,4);\n      uVar3 = png_get_uint_31(param_1,auStack56);\n      *(undefined4 *)(param_1 + 0x348) = uVar3;\n      FUN_001068b0(param_1);\n      FUN_00119cb0(param_1,&local_34,4);\n      *(uint *)(param_1 + 0x218) =\n           local_34 >> 0x18 | (local_34 & 0xff0000) >> 8 | (local_34 & 0xff00) << 8 |\n           local_34 << 0x18;\n      FUN_0011d6f0(param_1);\n      FUN_0011d730(param_1,*(undefined4 *)(param_1 + 0x348));\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x100;\n      goto LAB_0010d582;\n    }\n  }\n  else {\nLAB_0010d582:\n    iVar5 = *(int *)(param_1 + 0x218);\n    if (iVar5 == 0x49444154) {\n      uVar4 = *(uint *)(param_1 + 300);\n      if ((uVar4 & 8) != 0) {\n        uVar4 = uVar4 | 0x2000;\n        *(uint *)(param_1 + 300) = uVar4;\n      }\n      if ((uVar4 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Missing IHDR before IDAT\");\n      }\n      if ((*(char *)(param_1 + 0x267) == '\\x03') && ((uVar4 & 2) == 0)) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Missing PLTE before IDAT\");\n      }\n      *(undefined4 *)(param_1 + 0x370) = 2;\n      if ((((uVar4 & 4) != 0) && ((uVar4 & 0x2000) == 0)) && (*(int *)(param_1 + 0x348) == 0))\n      goto LAB_0010d6d0;\n      *(uint *)(param_1 + 300) = uVar4 | 4;\n      if ((uVar4 & 8) != 0) {\n        png_benign_error(param_1,\"Too many IDATs found\");\n      }\n      iVar6 = FUN_001077c0(param_1,0x49444154);\n      if (iVar6 == 0) {\n        *(undefined4 *)(param_1 + 0x370) = 2;\n        *(undefined4 *)(param_1 + 0x248) = *(undefined4 *)(param_1 + 0x348);\n        FUN_0010d4a0(param_1,param_2,extraout_RDX,0);\n        bVar1 = *(byte *)(param_1 + 0x26a);\n        if (bVar1 < 8) {\n          iVar5 = (int)((ulong)bVar1 * (ulong)*(uint *)(param_1 + 0x210) + 7 >> 3);\n        }\n        else {\n          iVar5 = (uint)(bVar1 >> 3) * *(int *)(param_1 + 0x210);\n        }\n        *(int *)(param_1 + 0x160) = iVar5 + 1;\n        *(undefined8 *)(param_1 + 0x158) = *(undefined8 *)(param_1 + 0x228);\n        goto LAB_0010d6d0;\n      }\nLAB_0010d6b1:\n      uVar7 = (ulong)(*(int *)(param_1 + 0x348) + 4);\n      if (uVar7 < *(ulong *)(param_1 + 0x360) || uVar7 == *(ulong *)(param_1 + 0x360)) {\n        FUN_0011d520(param_1,param_2);\n        uVar4 = *(uint *)(param_1 + 300);\n        if (iVar5 == 0x504c5445) {\n          uVar4 = uVar4 | 2;\n        }\n        goto LAB_0010d5cd;\n      }\n    }\n    else if (iVar5 == 0x49484452) {\n      if (*(int *)(param_1 + 0x348) != 0xd) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Invalid IHDR length\");\n      }\n      if (0x10 < *(ulong *)(param_1 + 0x360)) {\n        FUN_0011a560(param_1,param_2,0xd);\n        uVar4 = *(uint *)(param_1 + 300);\n        goto LAB_0010d5cd;\n      }\n    }\n    else if (iVar5 == 0x49454e44) {\n      uVar7 = (ulong)(*(int *)(param_1 + 0x348) + 4);\n      if (uVar7 < *(ulong *)(param_1 + 0x360) || uVar7 == *(ulong *)(param_1 + 0x360)) {\n        FUN_0011aa40(param_1,param_2);\n        *(undefined4 *)(param_1 + 0x370) = 6;\n        FUN_0010d4c0(param_1,param_2);\n        uVar4 = *(uint *)(param_1 + 300);\n        goto LAB_0010d5cd;\n      }\n    }\n    else {\n      iVar6 = FUN_001077c0(param_1,iVar5);\n      if (iVar6 != 0) goto LAB_0010d6b1;\n      iVar6 = *(int *)(param_1 + 0x348);\n      if (iVar5 == 0x504c5445) {\n        if ((ulong)(iVar6 + 4) < *(ulong *)(param_1 + 0x360) ||\n            (ulong)(iVar6 + 4) == *(ulong *)(param_1 + 0x360)) {\n          FUN_0011a760(param_1,param_2);\n          uVar4 = *(uint *)(param_1 + 300);\n          goto LAB_0010d5cd;\n        }\n      }\n      else {\n        iVar2 = *(int *)(param_1 + 0x218);\n        uVar7 = *(ulong *)(param_1 + 0x360);\n        uVar8 = (ulong)(iVar6 + 4);\n        if (iVar2 == 0x67414d41) {\n          if (uVar8 <= uVar7) {\n            FUN_0011aab0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar2 == 0x73424954) {\n          if (uVar8 <= uVar7) {\n            FUN_0011aba0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar2 == 0x6348524d) {\n          if (uVar8 <= uVar7) {\n            FUN_0011add0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x73524742) {\n          if (uVar8 <= uVar7) {\n            FUN_0011aff0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar2 == 0x69434350) {\n          if (uVar8 <= uVar7) {\n            FUN_0011b110(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x73504c54) {\n          if (uVar8 <= uVar7) {\n            FUN_0011b820(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x74524e53) {\n          if (uVar8 <= uVar7) {\n            FUN_0011bb10(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x624b4744) {\n          if (uVar8 <= uVar7) {\n            FUN_0011bd80(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x68495354) {\n          if (uVar8 <= uVar7) {\n            FUN_0011c240(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x70485973) {\n          if (uVar8 <= uVar7) {\n            FUN_0011c3c0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x6f464673) {\n          if (uVar8 <= uVar7) {\n            FUN_0011c520(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x7043414c) {\n          if (uVar8 <= uVar7) {\n            FUN_0011c6b0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x7343414c) {\n          if (uVar8 <= uVar7) {\n            FUN_0011c9f0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x74494d45) {\n          if (uVar8 <= uVar7) {\n            FUN_0011cc80(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x74455874) {\n          if (uVar8 <= uVar7) {\n            FUN_0011cd90(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x7a545874) {\n          if (uVar8 <= uVar7) {\n            FUN_0011cf40(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (iVar5 == 0x69545874) {\n          if (uVar8 <= uVar7) {\n            FUN_0011d1c0(param_1,param_2);\n            uVar4 = *(uint *)(param_1 + 300);\n            goto LAB_0010d5cd;\n          }\n        }\n        else if (uVar8 <= uVar7) {\n          FUN_0011d520(param_1,param_2,iVar6,0);\n          uVar4 = *(uint *)(param_1 + 300);\nLAB_0010d5cd:\n          *(uint *)(param_1 + 300) = uVar4 & 0xfffffeff;\n          goto LAB_0010d6d0;\n        }\n      }\n    }\n  }\n  FUN_0010d0c0(param_1);\nLAB_0010d6d0:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0010db20": "\nvoid FUN_0010db20(long param_1,undefined8 param_2)\n\n{\n  if (*(code **)(param_1 + 0x318) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x0010db3d. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x318))\n              (param_1,param_2,*(undefined4 *)(param_1 + 0x214),*(undefined *)(param_1 + 0x265));\n    return;\n  }\n  return;\n}\n\n", "FUN_0010db50": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_0010db50(long param_1)\n\n{\n  byte bVar1;\n  char cVar2;\n  int iVar3;\n  byte *__src;\n  long lVar4;\n  long in_FS_OFFSET;\n  uint local_38 [2];\n  ulong local_30;\n  undefined2 local_28;\n  undefined2 local_26;\n  long local_20;\n  \n  local_38[0] = *(uint *)(param_1 + 0x210);\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_28 = *(undefined2 *)(param_1 + 0x267);\n  local_26 = *(ushort *)(param_1 + 0x26a) << 8 | *(ushort *)(param_1 + 0x26a) >> 8;\n  bVar1 = *(byte *)(param_1 + 0x26a);\n  if (bVar1 < 8) {\n    local_30 = (ulong)bVar1 * (ulong)local_38[0] + 7 >> 3;\n  }\n  else {\n    local_30 = (ulong)(bVar1 >> 3) * (ulong)local_38[0];\n  }\n  __src = *(byte **)(param_1 + 0x228);\n  if (*__src != 0) {\n    if (4 < *__src) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"bad adaptive filter value\");\n    }\n    FUN_0011e490(param_1,local_38,__src + 1);\n    __src = *(byte **)(param_1 + 0x228);\n  }\n  memcpy(*(void **)(param_1 + 0x220),__src,local_30 + 1);\n  if (*(int *)(param_1 + 0x134) != 0) {\n    FUN_00116510(param_1,local_38);\n  }\n  if (*(byte *)(param_1 + 0x26f) == 0) {\n    *(byte *)(param_1 + 0x26f) = local_26._1_1_;\n    if (*(byte *)(param_1 + 0x26e) < local_26._1_1_) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"progressive row overflow\");\n    }\n  }\n  else if (*(byte *)(param_1 + 0x26f) != local_26._1_1_) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal progressive row size calculation error\");\n  }\n  lVar4 = *(long *)(param_1 + 0x228) + 1;\n  if ((*(char *)(param_1 + 0x264) == '\\0') || ((*(uint *)(param_1 + 0x134) & 2) == 0)) {\n    FUN_0010db20(param_1,lVar4);\n    FUN_0010d2f0(param_1);\n    goto LAB_0010dc80;\n  }\n  if (5 < *(byte *)(param_1 + 0x265)) {\nLAB_0010dc63:\n    FUN_0010db20(param_1,lVar4);\n    FUN_0010d2f0(param_1);\n    cVar2 = *(char *)(param_1 + 0x265);\n    goto joined_r0x0010dc7a;\n  }\n  FUN_0011dec0(local_38);\n  lVar4 = *(long *)(param_1 + 0x228) + 1;\n  if (5 < *(byte *)(param_1 + 0x265)) goto LAB_0010dc63;\n  switch(*(undefined *)(param_1 + 0x265)) {\n  case 0:\n    iVar3 = 8;\n    while( true ) {\n      FUN_0010db20(param_1,lVar4);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      iVar3 = iVar3 + -1;\n      if ((iVar3 == 0) || (cVar2 != '\\0')) break;\n      lVar4 = *(long *)(param_1 + 0x228) + 1;\n    }\n    if (cVar2 == '\\x02') {\n      iVar3 = 4;\n      do {\n        FUN_0010db20(param_1,0);\n        FUN_0010d2f0(param_1);\n        cVar2 = *(char *)(param_1 + 0x265);\n        iVar3 = iVar3 + -1;\n        if (iVar3 == 0) break;\n      } while (cVar2 == '\\x02');\n    }\n    if (cVar2 == '\\x04') {\n      if (4 < *(uint *)(param_1 + 0x1fc)) goto LAB_0010dc80;\n      FUN_0010db20(param_1,0);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      if (cVar2 == '\\x04') {\n        FUN_0010db20(param_1,0);\n        FUN_0010d2f0(param_1);\n        cVar2 = *(char *)(param_1 + 0x265);\n      }\n    }\n    if ((cVar2 != '\\x06') || (4 < *(uint *)(param_1 + 0x1fc))) goto LAB_0010dc80;\n    goto LAB_0010dea8;\n  case 1:\n    iVar3 = 8;\n    while( true ) {\n      FUN_0010db20(param_1,lVar4);\n      FUN_0010d2f0(param_1);\n      iVar3 = iVar3 + -1;\n      if ((iVar3 == 0) || (*(char *)(param_1 + 0x265) != '\\x01')) break;\n      lVar4 = *(long *)(param_1 + 0x228) + 1;\n    }\n    if (*(char *)(param_1 + 0x265) == '\\x02') {\n      iVar3 = 4;\n      do {\n        FUN_0010db20(param_1,0);\n        FUN_0010d2f0(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 == 0) break;\n      } while (*(char *)(param_1 + 0x265) == '\\x02');\n    }\n    goto LAB_0010dc80;\n  case 2:\n    iVar3 = 4;\n    while( true ) {\n      FUN_0010db20(param_1,lVar4);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      iVar3 = iVar3 + -1;\n      if ((iVar3 == 0) || (cVar2 != '\\x02')) break;\n      lVar4 = *(long *)(param_1 + 0x228) + 1;\n    }\n    iVar3 = 4;\n    do {\n      if (cVar2 != '\\x02') break;\n      FUN_0010db20(param_1,0);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    break;\n  case 3:\n    iVar3 = 4;\n    while( true ) {\n      FUN_0010db20(param_1,lVar4);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      iVar3 = iVar3 + -1;\n      if ((iVar3 == 0) || (cVar2 != '\\x03')) break;\n      lVar4 = *(long *)(param_1 + 0x228) + 1;\n    }\n    break;\n  case 4:\n    FUN_0010db20(param_1,lVar4);\n    FUN_0010d2f0(param_1);\n    cVar2 = *(char *)(param_1 + 0x265);\n    if (cVar2 == '\\x04') {\n      FUN_0010db20(param_1,*(long *)(param_1 + 0x228) + 1);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n      if (cVar2 == '\\x04') {\n        FUN_0010db20(param_1,0);\n        FUN_0010d2f0(param_1);\n        cVar2 = *(char *)(param_1 + 0x265);\n        if (cVar2 == '\\x04') {\n          lVar4 = 0;\n          goto LAB_0010df36;\n        }\n      }\n    }\n    goto joined_r0x0010dc7a;\n  case 5:\n    FUN_0010db20(param_1,lVar4);\n    FUN_0010d2f0(param_1);\n    cVar2 = *(char *)(param_1 + 0x265);\n    if (cVar2 == '\\x05') {\n      lVar4 = *(long *)(param_1 + 0x228) + 1;\nLAB_0010df36:\n      FUN_0010db20(param_1,lVar4);\n      FUN_0010d2f0(param_1);\n      cVar2 = *(char *)(param_1 + 0x265);\n    }\njoined_r0x0010dc7a:\n    if (cVar2 != '\\x06') goto LAB_0010dc80;\n    goto LAB_0010dea8;\n  }\n  if (cVar2 == '\\x04') {\n    FUN_0010db20(param_1,0);\n    FUN_0010d2f0(param_1);\n    if (*(char *)(param_1 + 0x265) == '\\x04') {\nLAB_0010dea8:\n      FUN_0010db20(param_1,0);\n      FUN_0010d2f0(param_1);\n    }\n  }\nLAB_0010dc80:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0010e070": "\nvoid FUN_0010e070(long param_1,long param_2,ulong param_3)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  ulong uVar4;\n  int iVar5;\n  \n  if ((param_3 == 0) || (param_2 == 0)) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"No IDAT data (internal error)\");\n  }\n  *(long *)(param_1 + 0x140) = param_2;\n  uVar4 = param_3 & 0xffffffff;\n  *(int *)(param_1 + 0x148) = (int)param_3;\nLAB_0010e11c:\n  uVar3 = (uint)uVar4;\n  do {\n    if (uVar3 == 0) {\n      return;\n    }\n    if ((*(byte *)(param_1 + 0x130) & 8) != 0) {\n      png_warning(param_1,\"Extra compression data in IDAT\");\n      return;\n    }\n    if (*(int *)(param_1 + 0x160) == 0) {\n      bVar1 = *(byte *)(param_1 + 0x26a);\n      if (bVar1 < 8) {\n        iVar5 = (int)((ulong)*(uint *)(param_1 + 0x210) * (ulong)bVar1 + 7 >> 3);\n      }\n      else {\n        iVar5 = *(uint *)(param_1 + 0x210) * (uint)(bVar1 >> 3);\n      }\n      *(int *)(param_1 + 0x160) = iVar5 + 1;\n      *(undefined8 *)(param_1 + 0x158) = *(undefined8 *)(param_1 + 0x228);\n    }\n    uVar2 = FUN_00119fb0(param_1,2);\n    if (1 < uVar2) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 8;\n      *(undefined4 *)(param_1 + 0x138) = 0;\n      if ((*(uint *)(param_1 + 0x214) < *(uint *)(param_1 + 0x200)) &&\n         (*(byte *)(param_1 + 0x265) < 7)) {\n        if (uVar2 != 0xfffffffd) {\n                    /* WARNING: Subroutine does not return */\n          png_error(param_1,\"Decompression error in IDAT\");\n        }\n        png_benign_error(param_1,\"IDAT: ADLER32 checksum mismatch\");\n        return;\n      }\n      png_warning(param_1,\"Truncated compressed data in IDAT\");\n      return;\n    }\n    if (*(long *)(param_1 + 0x158) == *(long *)(param_1 + 0x228)) {\nLAB_0010e111:\n      uVar3 = *(uint *)(param_1 + 0x148);\n    }\n    else {\n      if ((*(uint *)(param_1 + 0x200) <= *(uint *)(param_1 + 0x214)) ||\n         (6 < *(byte *)(param_1 + 0x265))) {\n        png_warning(param_1,\"Extra compressed data in IDAT\");\n        *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 8;\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        return;\n      }\n      if (*(int *)(param_1 + 0x160) != 0) goto LAB_0010e111;\n      FUN_0010db50(param_1);\n      uVar3 = *(uint *)(param_1 + 0x148);\n    }\n    uVar4 = (ulong)uVar3;\n    if (uVar2 != 1) goto LAB_0010e11c;\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 8;\n  } while( true );\n}\n\n", "FUN_0010e250": "\nvoid FUN_0010e250(long param_1)\n\n{\n  ulong uVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  int iVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  undefined auStack40 [4];\n  uint local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(param_1 + 0x12d) & 1) == 0) {\n    if (7 < *(ulong *)(param_1 + 0x360)) {\n      FUN_0010cf30(param_1,auStack40,4);\n      uVar2 = png_get_uint_31(param_1,auStack40);\n      *(undefined4 *)(param_1 + 0x348) = uVar2;\n      FUN_001068b0(param_1);\n      FUN_00119cb0(param_1,&local_24,4);\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x100;\n      uVar3 = local_24 >> 0x18 | (local_24 & 0xff0000) >> 8 | (local_24 & 0xff00) << 8 |\n              local_24 << 0x18;\n      *(uint *)(param_1 + 0x218) = uVar3;\n      if (uVar3 != 0x49444154) {\n        *(undefined4 *)(param_1 + 0x370) = 1;\n        if ((*(byte *)(param_1 + 0x130) & 8) == 0) {\n                    /* WARNING: Subroutine does not return */\n          png_error(param_1,\"Not enough compressed data\");\n        }\n        goto LAB_0010e2fd;\n      }\n      uVar3 = *(uint *)(param_1 + 0x348);\n      *(uint *)(param_1 + 0x248) = uVar3;\n      goto LAB_0010e326;\n    }\n  }\n  else {\n    uVar3 = *(uint *)(param_1 + 0x248);\nLAB_0010e326:\n    if (uVar3 != 0) {\n      uVar1 = *(ulong *)(param_1 + 0x350);\n      if (uVar1 != 0) {\n        uVar5 = (ulong)uVar3;\n        if (uVar1 <= uVar3) {\n          uVar3 = (uint)uVar1;\n          uVar5 = uVar1;\n        }\n        FUN_001068d0(param_1,*(undefined8 *)(param_1 + 0x328),uVar5);\n        FUN_0010e070(param_1,*(undefined8 *)(param_1 + 0x328),uVar5);\n        *(long *)(param_1 + 0x360) = *(long *)(param_1 + 0x360) - uVar5;\n        *(long *)(param_1 + 0x350) = *(long *)(param_1 + 0x350) - uVar5;\n        uVar3 = *(int *)(param_1 + 0x248) - uVar3;\n        *(long *)(param_1 + 0x328) = *(long *)(param_1 + 0x328) + uVar5;\n        *(uint *)(param_1 + 0x248) = uVar3;\n        if (uVar3 == 0) goto LAB_0010e32a;\n      }\n      uVar1 = *(ulong *)(param_1 + 0x368);\n      if (uVar1 == 0) goto LAB_0010e2fd;\n      uVar5 = (ulong)uVar3;\n      if (uVar1 <= uVar3) {\n        uVar3 = (uint)uVar1;\n        uVar5 = uVar1;\n      }\n      FUN_001068d0(param_1,*(undefined8 *)(param_1 + 0x338),uVar5);\n      FUN_0010e070(param_1,*(undefined8 *)(param_1 + 0x338),uVar5);\n      *(long *)(param_1 + 0x360) = *(long *)(param_1 + 0x360) - uVar5;\n      *(long *)(param_1 + 0x368) = *(long *)(param_1 + 0x368) - uVar5;\n      iVar4 = *(int *)(param_1 + 0x248) - uVar3;\n      *(long *)(param_1 + 0x338) = *(long *)(param_1 + 0x338) + uVar5;\n      *(int *)(param_1 + 0x248) = iVar4;\n      if (iVar4 != 0) goto LAB_0010e2fd;\n    }\nLAB_0010e32a:\n    if (3 < *(ulong *)(param_1 + 0x360)) {\n      FUN_00119dc0(param_1,0);\n      *(undefined4 *)(param_1 + 0x138) = 0;\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) & 0xfffffeff | 8;\n      goto LAB_0010e2fd;\n    }\n  }\n  FUN_0010d0c0(param_1);\nLAB_0010e2fd:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0010e480": "\nvoid FUN_0010e480(long param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != 0) {\n    iVar1 = *(int *)(param_1 + 0x370);\n    if (iVar1 == 1) {\n      FUN_0010d4e0();\n      return;\n    }\n    if (iVar1 == 2) {\n      FUN_0010e250();\n      return;\n    }\n    if (iVar1 == 0) {\n      FUN_0010d000();\n      return;\n    }\n    *(undefined8 *)(param_1 + 0x360) = 0;\n  }\n  return;\n}\n\n", "png_process_data": "\nvoid png_process_data(long param_1,long param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_0010d2c0(param_1,param_3,param_4);\n    lVar1 = *(long *)(param_1 + 0x360);\n    while (lVar1 != 0) {\n      FUN_0010e480(param_1,param_2);\n      lVar1 = *(long *)(param_1 + 0x360);\n    }\n  }\n  return;\n}\n\n", "png_progressive_combine_row": "\nvoid png_progressive_combine_row(long param_1,undefined8 param_2,long param_3)\n\n{\n  if ((param_3 != 0) && (param_1 != 0)) {\n    FUN_0011d8d0(param_1,param_2,1);\n    return;\n  }\n  return;\n}\n\n", "png_set_progressive_read_fn": "\nvoid png_set_progressive_read_fn\n               (long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x310) = param_3;\n    *(undefined8 *)(param_1 + 0x318) = param_4;\n    *(undefined8 *)(param_1 + 800) = param_5;\n    png_set_read_fn(param_1,param_2,FUN_0010cf30);\n    return;\n  }\n  return;\n}\n\n", "png_get_progressive_ptr": "\nundefined8 png_get_progressive_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 0x108);\n  }\n  return 0;\n}\n\n", "FUN_0010e5c0": "\nbyte FUN_0010e5c0(long param_1)\n\n{\n  byte bVar1;\n  byte bVar2;\n  \n  bVar1 = *(byte *)(param_1 + 0x267);\n  bVar2 = ((bVar1 & 2) != 0) * '\\x02';\n  if (((bVar1 & 4) != 0) || (*(short *)(param_1 + 0x260) != 0)) {\n    bVar2 = bVar2 | 1;\n  }\n  if (*(char *)(param_1 + 0x268) == '\\x10') {\n    bVar2 = bVar2 | 4;\n  }\n  if ((bVar1 & 1) != 0) {\n    bVar2 = bVar2 | 8;\n  }\n  return bVar2;\n}\n\n", "FUN_0010e610": "\nvoid FUN_0010e610(long param_1,void *param_2,ulong param_3)\n\n{\n  long lVar1;\n  void *__src;\n  ulong uVar2;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if ((*(long **)(param_1 + 0x108) != (long *)0x0) &&\n     (lVar1 = **(long **)(param_1 + 0x108), lVar1 != 0)) {\n    __src = *(void **)(lVar1 + 0x18);\n    uVar2 = *(ulong *)(lVar1 + 0x20);\n    if ((__src != (void *)0x0) && (param_3 <= uVar2)) {\n      memcpy(param_2,__src,param_3);\n      *(ulong *)(lVar1 + 0x18) = (long)__src + param_3;\n      *(ulong *)(lVar1 + 0x20) = uVar2 - param_3;\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"read beyond end of data\");\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"invalid memory read\");\n}\n\n", "FUN_0010e6a0": "\nvoid FUN_0010e6a0(undefined8 param_1)\n\n{\n  png_set_keep_unknown_chunks(param_1,1,0,0xffffffff);\n  png_set_keep_unknown_chunks(param_1,0,&DAT_0012b2c0,6);\n  return;\n}\n\n", "FUN_0010e6d0": "\nvoid FUN_0010e6d0(undefined8 *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  \n  iVar1 = *(int *)(**(long **)*param_1 + 0x4a0);\n  iVar2 = FUN_00109960(iVar1);\n  if (iVar2 == 0) {\n    *(undefined4 *)(param_1 + 8) = 4;\n    return;\n  }\n  if ((iVar1 < 100000) &&\n     ((iVar1 == 0 || (iVar2 = FUN_00109960((iVar1 * 0xb + 2) / 5), iVar2 == 0)))) {\n    *(undefined4 *)(param_1 + 8) = 1;\n    return;\n  }\n  *(undefined4 *)(param_1 + 8) = 3;\n  uVar3 = FUN_001091d0(iVar1);\n  *(undefined4 *)((long)param_1 + 0x44) = uVar3;\n  return;\n}\n\n", "FUN_0010e770": "\nulong FUN_0010e770(undefined8 *param_1,ulong param_2,int param_3)\n\n{\n  ushort uVar1;\n  \n  param_2 = param_2 & 0xffffffff;\n  if (param_3 == 3) {\n    param_3 = *(int *)(param_1 + 8);\n    if (param_3 == 0) {\n      FUN_0010e6d0();\n      param_3 = *(int *)(param_1 + 8);\n    }\n    if (param_3 == 3) {\n      uVar1 = FUN_0010a380((int)param_2 * 0x101,*(undefined4 *)((long)param_1 + 0x44));\n      return (ulong)uVar1;\n    }\n    if (3 < param_3) {\n      if (param_3 == 4) {\n        return (ulong)(uint)((int)param_2 * 0x101);\n      }\n      goto LAB_0010e80f;\n    }\n  }\n  if (param_3 == 1) {\n    return (ulong)(ushort)(&DAT_0012a1c0)[param_2];\n  }\n  if (param_3 == 2) {\n    return param_2;\n  }\nLAB_0010e80f:\n                    /* WARNING: Subroutine does not return */\n  png_error(**(undefined8 **)*param_1,\"unexpected encoding (internal error)\");\n}\n\n", "FUN_0010e830": "\nuint FUN_0010e830(undefined8 param_1,undefined8 param_2,undefined8 param_3,int param_4,\n                 undefined4 param_5,int param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  iVar1 = FUN_0010e770();\n  iVar2 = FUN_0010e770(param_1,param_5,param_6);\n  uVar3 = (0xff - param_4) * iVar2 + iVar1 * param_4;\n  if (param_6 != 2) {\n    return ((uVar3 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar3 >> 0xf] >> 0xc) +\n           (uint)(ushort)(&DAT_00129dc0)[uVar3 >> 0xf] >> 8 & 0xff;\n  }\n  return uVar3 * 0x101 + 0x8000 + (uVar3 * 0x101 >> 0x10) >> 0x10;\n}\n\n", "FUN_0010e8d0": "\nvoid FUN_0010e8d0(long *param_1,uint param_2,uint param_3,uint param_4,ulong param_5,uint param_6,\n                 int param_7)\n\n{\n  undefined2 *puVar1;\n  undefined8 *puVar2;\n  bool bVar3;\n  undefined2 uVar4;\n  ushort uVar5;\n  ushort uVar6;\n  ushort uVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined2 *puVar11;\n  ulong uVar12;\n  undefined *puVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  int iVar17;\n  uint uVar18;\n  ulong uVar19;\n  uint uVar20;\n  uint uVar21;\n  bool bVar22;\n  bool bVar23;\n  \n  param_5 = param_5 & 0xffffffff;\n  uVar19 = (ulong)param_4;\n  uVar12 = (ulong)param_3;\n  puVar2 = (undefined8 *)*param_1;\n  bVar22 = (*(uint *)((long)puVar2 + 0x14) & 4) == 0;\n  uVar20 = (uint)param_5;\n  if ((*(uint *)((long)puVar2 + 0x14) & 2) == 0) {\n    bVar3 = param_3 != param_4 || param_4 != uVar20;\n  }\n  else {\n    bVar3 = false;\n  }\n  if (0xff < param_2) {\n                    /* WARNING: Subroutine does not return */\n    png_error(*(undefined8 *)*puVar2,\"color-map index out of range\");\n  }\n  if (param_7 == 3) {\n    param_7 = *(int *)(param_1 + 8);\n    if (param_7 == 0) {\n      FUN_0010e6d0(param_1);\n      param_7 = *(int *)(param_1 + 8);\n    }\n    if (param_7 == 3) {\n      uVar5 = FUN_0010a380(param_3 * 0x101);\n      uVar12 = (ulong)uVar5;\n      uVar6 = FUN_0010a380(param_4 * 0x101);\n      uVar19 = (ulong)uVar6;\n      uVar7 = FUN_0010a380(uVar20 * 0x101);\n      param_5 = (ulong)uVar7;\n      if ((bVar22) && (!bVar3)) {\n        uVar20 = *(uint *)((long)puVar2 + 0x14);\n        uVar8 = (uint)uVar5 * 0x100 - (uint)uVar5;\n        uVar18 = uVar8 >> 0xf;\n        uVar9 = (uint)uVar6 * 0x100 - (uint)uVar6;\n        uVar21 = uVar9 >> 0xf;\n        uVar12 = (ulong)(((uVar8 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar18] >> 0xc) +\n                         (uint)(ushort)(&DAT_00129dc0)[uVar18] >> 8 & 0xff);\n        uVar19 = (ulong)(((uVar9 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar21] >> 0xc) +\n                         (uint)(ushort)(&DAT_00129dc0)[uVar21] >> 8 & 0xff);\n        uVar8 = (uint)uVar7 * 0x100 - (uint)uVar7;\n        uVar9 = uVar8 >> 0xf;\n        param_5 = (ulong)(((uVar8 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar9] >> 0xc) +\n                          (uint)(ushort)(&DAT_00129dc0)[uVar9] >> 8 & 0xff);\n        uVar8 = uVar20 & 0x21;\n        bVar23 = uVar8 == 0x21;\n        uVar9 = (uint)bVar23;\n        uVar18 = uVar20 >> 3 & 2;\n        goto LAB_0010ebb5;\n      }\n    }\n    else {\n      if (param_7 != 4) goto LAB_0010e931;\n      uVar12 = (ulong)(param_3 * 0x101);\n      uVar19 = (ulong)(param_4 * 0x101);\n      param_5 = (ulong)(uVar20 * 0x101);\n    }\n    param_6 = param_6 * 0x101;\nLAB_0010e987:\n    uVar20 = *(uint *)((long)puVar2 + 0x14);\n    uVar8 = uVar20 & 0x21;\n    bVar23 = uVar8 == 0x21;\n    uVar9 = (uint)bVar23;\n    uVar18 = uVar20 >> 3 & 2;\n  }\n  else {\nLAB_0010e931:\n    if (param_7 != 1) {\n      if (param_7 != 2) {\n                    /* WARNING: Subroutine does not return */\n        png_error(*(undefined8 *)*puVar2,\"bad encoding (internal error)\");\n      }\n      goto LAB_0010e987;\n    }\n    uVar20 = *(uint *)((long)puVar2 + 0x14);\n    uVar8 = uVar20 & 0x21;\n    bVar23 = uVar8 == 0x21;\n    uVar9 = (uint)bVar23;\n    uVar18 = uVar20 >> 3 & 2;\n    if ((bVar22) && (!bVar3)) goto LAB_0010ebb5;\n    uVar12 = (ulong)(ushort)(&DAT_0012a1c0)[uVar12];\n    uVar19 = (ulong)(ushort)(&DAT_0012a1c0)[uVar19];\n    param_5 = (ulong)(ushort)(&DAT_0012a1c0)[param_5];\n    param_6 = param_6 * 0x101;\n  }\n  if (bVar3) {\n    iVar17 = (int)param_5 * 0x93e + (int)uVar12 * 0x1b38 + (int)uVar19 * 0x5b8a;\n    if (bVar22) {\n      uVar21 = iVar17 + 0x80;\n      uVar21 = ((uVar21 & 0xffffff00) - (uVar21 >> 8)) + 0x40;\n      param_6 = param_6 * 0xff + 0x807f >> 0x10;\n      uVar14 = uVar21 >> 0x16;\n      uVar21 = ((uVar21 >> 7 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar14] >> 0xc) +\n               (uint)(ushort)(&DAT_00129dc0)[uVar14] >> 8 & 0xff;\n      uVar12 = (ulong)uVar21;\n      param_5 = (ulong)uVar21;\n      uVar19 = (ulong)uVar21;\n      goto LAB_0010ebb5;\n    }\n    uVar21 = iVar17 + 0x4000U >> 0xf;\n    uVar12 = (ulong)uVar21;\n    param_5 = (ulong)uVar21;\n    uVar19 = (ulong)uVar21;\n  }\n  else if (bVar22) {\n    uVar21 = (int)uVar12 * 0xff;\n    uVar14 = uVar21 >> 0xf;\n    uVar12 = (ulong)(((uVar21 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar14] >> 0xc) +\n                     (uint)(ushort)(&DAT_00129dc0)[uVar14] >> 8 & 0xff);\n    uVar21 = (int)uVar19 * 0xff;\n    uVar15 = uVar21 >> 0xf;\n    uVar14 = (int)param_5 * 0xff;\n    uVar16 = uVar14 >> 0xf;\n    uVar19 = (ulong)(((uVar21 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar15] >> 0xc) +\n                     (uint)(ushort)(&DAT_00129dc0)[uVar15] >> 8 & 0xff);\n    param_5 = (ulong)((uint)(ushort)(&DAT_00129dc0)[uVar16] +\n                      ((uVar14 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar16] >> 0xc) >> 8 & 0xff);\n    param_6 = param_6 * 0xff + 0x807f >> 0x10;\nLAB_0010ebb5:\n    iVar17 = (uVar20 & 3) + 1;\n    puVar13 = (undefined *)((ulong)(param_2 * iVar17) + param_1[3]);\n    if (iVar17 != 3) {\n      if (iVar17 != 4) {\n        if (iVar17 == 2) {\n          puVar13[uVar8 != 0x21] = (char)param_6;\n        }\n        puVar13[bVar23] = (char)uVar19;\n        return;\n      }\n      puVar10 = puVar13 + 3;\n      if (bVar23 != false) {\n        puVar10 = puVar13;\n      }\n      *puVar10 = (char)param_6;\n    }\n    puVar13[(int)((uVar18 ^ 2) + uVar9)] = (char)param_5;\n    puVar13[(ulong)bVar23 + 1] = (char)uVar19;\n    puVar13[(int)(uVar18 + uVar9)] = (char)uVar12;\n    return;\n  }\n  iVar17 = (uVar20 & 3) + 1;\n  puVar1 = (undefined2 *)(param_1[3] + (ulong)(param_2 * iVar17) * 2);\n  if (iVar17 != 3) {\n    if (iVar17 != 4) {\n      if (iVar17 == 2) {\n        puVar1[uVar8 != 0x21] = (short)param_6;\n      }\n      uVar4 = (undefined2)uVar19;\n      if ((param_6 < 0xffff) && (uVar4 = 0, param_6 != 0)) {\n        uVar4 = (undefined2)((ulong)((int)uVar19 * param_6 + 0x7fff) / 0xffff);\n      }\n      puVar1[bVar23] = uVar4;\n      return;\n    }\n    puVar11 = puVar1 + 3;\n    if (bVar23 != false) {\n      puVar11 = puVar1;\n    }\n    *puVar11 = (short)param_6;\n  }\n  if (param_6 < 0xffff) {\n    if (param_6 == 0) {\n      uVar12 = 0;\n      uVar19 = 0;\n      param_5 = 0;\n    }\n    else {\n      uVar19 = (ulong)((int)uVar19 * param_6 + 0x7fff) / 0xffff;\n      param_5 = (ulong)((int)param_5 * param_6 + 0x7fff) / 0xffff;\n      uVar12 = (ulong)((int)uVar12 * param_6 + 0x7fff) / 0xffff;\n    }\n  }\n  puVar1[(int)((uVar18 ^ 2) + uVar9)] = (short)param_5;\n  puVar1[(ulong)bVar23 + 1] = (short)uVar19;\n  puVar1[(int)(uVar18 + uVar9)] = (short)uVar12;\n  return;\n}\n\n", "FUN_0010ef20": "\nundefined8 FUN_0010ef20(undefined8 param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  \n  iVar6 = 0;\n  do {\n    iVar2 = iVar6 + 1;\n    uVar1 = (iVar6 * 0x100 + 0x73U) / 0xe7;\n    FUN_0010e8d0(param_1,iVar6,uVar1,uVar1,uVar1,0xff,1);\n    iVar6 = iVar2;\n  } while (iVar2 != 0xe7);\n  iVar6 = 0x33;\n  iVar2 = 0xe8;\n  FUN_0010e8d0(param_1,0xe7,0xff,0xff,0xff,0,1);\n  do {\n    iVar3 = 0;\n    iVar5 = iVar2;\n    do {\n      iVar4 = iVar3 + 0x33;\n      FUN_0010e8d0(param_1,iVar5,iVar3,iVar3,iVar3,iVar6,1);\n      iVar3 = iVar4;\n      iVar5 = iVar5 + 1;\n    } while (iVar4 != 0x132);\n    iVar2 = iVar2 + 6;\n    iVar6 = iVar6 + 0x33;\n  } while (iVar2 != 0x100);\n  return 0x100;\n}\n\n", "FUN_0010f010": "\nundefined8 FUN_0010f010(undefined8 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = 0;\n  do {\n    iVar2 = iVar1 + 1;\n    FUN_0010e8d0(param_1,iVar1,iVar1,iVar1,iVar1,0xff,1);\n    iVar1 = iVar2;\n  } while (iVar2 != 0x100);\n  return 0x100;\n}\n\n", "FUN_0010f060": "\nundefined8 FUN_0010f060(undefined8 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int local_3c;\n  \n  iVar4 = 0;\n  local_3c = 0;\n  do {\n    iVar6 = 0;\n    iVar5 = local_3c;\n    do {\n      iVar1 = iVar5;\n      iVar2 = 0;\n      do {\n        iVar3 = iVar2 + 0x33;\n        FUN_0010e8d0(param_1,iVar1,iVar4,iVar6,iVar2,0xff,1);\n        iVar1 = iVar1 + 1;\n        iVar2 = iVar3;\n      } while (iVar3 != 0x132);\n      iVar6 = iVar6 + 0x33;\n      iVar5 = iVar5 + 6;\n    } while (iVar6 != 0x132);\n    local_3c = local_3c + 0x24;\n    iVar4 = iVar4 + 0x33;\n  } while (local_3c != 0xd8);\n  return 0xd8;\n}\n\n", "FUN_0010f100": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_0010f100(long *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined uVar3;\n  long **pplVar4;\n  long lVar5;\n  byte *pbVar6;\n  ushort uVar7;\n  uint uVar8;\n  int iVar9;\n  int iVar10;\n  uint uVar11;\n  uint uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  ulong uVar16;\n  ulong uVar17;\n  int iVar18;\n  uint uVar19;\n  uint uVar20;\n  byte bVar21;\n  byte bVar22;\n  undefined8 uVar23;\n  int iVar24;\n  uint uVar25;\n  undefined *puVar26;\n  ushort *puVar27;\n  uint uVar28;\n  uint uVar29;\n  ulong uVar30;\n  long in_FS_OFFSET;\n  undefined8 uVar31;\n  uint local_98;\n  long local_88;\n  uint local_80;\n  int local_7c;\n  ushort *local_70;\n  uint local_68;\n  uint local_64;\n  undefined local_4a [2];\n  undefined2 local_48;\n  undefined2 local_46;\n  undefined2 local_44;\n  undefined2 local_42;\n  long local_40;\n  \n  pplVar4 = (long **)*param_1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar20 = *(uint *)((long)pplVar4 + 0x14);\n  lVar5 = **pplVar4;\n  bVar21 = *(byte *)(lVar5 + 0x267);\n  if ((uVar20 & 4) == 0) {\n    if ((((bVar21 & 4) == 0) && (*(short *)(lVar5 + 0x260) == 0)) || ((uVar20 & 1) != 0)) {\n      local_80 = 0xff;\n      iVar9 = 1;\n      uVar30 = 0xff;\n      local_98 = 0xff;\n    }\n    else {\n      pbVar6 = (byte *)param_1[4];\n      if (pbVar6 == (byte *)0x0) {\n                    /* WARNING: Subroutine does not return */\n        png_error(lVar5,\"background color must be supplied to remove alpha/transparency\");\n      }\n      uVar30 = (ulong)pbVar6[1];\n      if ((uVar20 & 2) == 0) {\n        local_80 = (uint)pbVar6[1];\n        iVar9 = 1;\n        local_98 = local_80;\n      }\n      else {\n        iVar9 = 1;\n        local_98 = (uint)*pbVar6;\n        local_80 = (uint)pbVar6[2];\n      }\n    }\n  }\n  else if ((((bVar21 & 4) == 0) && (*(short *)(lVar5 + 0x260) == 0)) ||\n          (local_98 = uVar20 & 1, (uVar20 & 1) != 0)) {\n    local_80 = 0xffff;\n    iVar9 = 2;\n    uVar30 = 0xffff;\n    local_98 = 0xffff;\n  }\n  else {\n    local_80 = 0;\n    uVar30 = 0;\n    iVar9 = 2;\n  }\n  uVar11 = (uint)uVar30;\n  if ((*(ushort *)(lVar5 + 0x4ea) & 1) == 0) {\n    iVar18 = 0xb18f;\n    if (*(char *)(lVar5 + 0x268) == '\\x10') {\n      iVar18 = (-(uint)((*(uint *)(pplVar4 + 3) & 4) == 0) & 0xd511) + 0xb18f;\n    }\n    *(int *)(lVar5 + 0x4a0) = iVar18;\n    *(ushort *)(lVar5 + 0x4ea) = *(ushort *)(lVar5 + 0x4ea) | 1;\n  }\n  switch(bVar21) {\n  case 0:\n    if (*(byte *)(lVar5 + 0x268) < 9) {\n      uVar8 = 1 << (*(byte *)(lVar5 + 0x268) & 0x1f);\n      if (*(uint *)((long)pplVar4 + 0x1c) < uVar8) {\n                    /* WARNING: Subroutine does not return */\n        png_error(lVar5,\"gray[8] color-map: too few entries\");\n      }\n      iVar18 = (int)(0xff / (ulong)(uVar8 - 1));\n      if (*(short *)(lVar5 + 0x260) == 0) {\n        uVar25 = 0x100;\n        uVar13 = 0;\n      }\n      else {\n        uVar25 = (uint)*(ushort *)(lVar5 + 0x2f8);\n        uVar13 = 0;\n        if (((uVar20 & 1) == 0) && (uVar13 = 0xff, iVar9 == 2)) {\n          uVar13 = 0xffff;\n        }\n      }\n      iVar24 = 0;\n      uVar20 = 0;\n      do {\n        while (uVar25 == uVar20) {\n          uVar20 = uVar20 + 1;\n          FUN_0010e8d0(param_1,uVar25,local_98,uVar11,local_80,uVar13,iVar9);\n          iVar24 = iVar24 + iVar18;\n          if (uVar8 == uVar20) goto LAB_0010f4b0;\n        }\n        uVar19 = uVar20 + 1;\n        FUN_0010e8d0(param_1,uVar20,iVar24,iVar24,iVar24,0xff,3);\n        iVar24 = iVar24 + iVar18;\n        uVar20 = uVar19;\n      } while (uVar8 != uVar19);\nLAB_0010f4b0:\n      bVar21 = *(byte *)(lVar5 + 0x268);\n      if (7 < bVar21) goto LAB_0010f4c4;\nLAB_0010f6de:\n      png_set_packing(lVar5);\n      if (8 < *(byte *)(lVar5 + 0x268)) goto LAB_0010f6fb;\n      goto LAB_0010f4cc;\n    }\n    if (*(uint *)((long)pplVar4 + 0x1c) < 0x100) {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar5,\"gray[16] color-map: too few entries\");\n    }\n    uVar31 = 0x10f9b9;\n    uVar8 = FUN_0010f010(param_1);\n    if (*(short *)(lVar5 + 0x260) == 0) {\n      uVar11 = 0x100;\n      uVar25 = 0;\n      break;\n    }\n    if ((uVar20 & 1) == 0) {\n      if ((local_98 == uVar11) && (uVar11 == local_80)) goto LAB_0010fce5;\n      uVar23 = 0xffff;\n      if (iVar9 != 2) {\n        uVar23 = 0xff;\n      }\n    }\n    else {\n      uVar23 = 0;\n    }\n    uVar25 = 2;\n    FUN_0010e8d0(param_1,0xfe,local_98,uVar30,local_80,uVar23,iVar9,uVar31);\n    uVar11 = 0xfe;\nLAB_0010fc9a:\n    if ((*(short *)(lVar5 + 0x260) != 0) && ((*(byte *)(lVar5 + 0x267) & 4) == 0)) {\n      png_set_tRNS_to_alpha();\n    }\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar5,\"invalid PNG color type\");\n  case 2:\n  case 6:\n    uVar25 = uVar20 & 2;\n    if (uVar25 != 0) {\n      uVar8 = *(uint *)((long)pplVar4 + 0x1c);\n      if ((bVar21 == 6) || (*(short *)(lVar5 + 0x260) != 0)) {\n        if ((uVar20 & 1) == 0) {\n          uVar20 = ((uVar20 >> 2 & 1) + 1) * ((uVar20 & 3) + 1);\n          if (uVar8 < 0xf4) {\n                    /* WARNING: Subroutine does not return */\n            png_error(lVar5,\"rgb-alpha color-map: too few entries\");\n          }\n          uVar31 = 0x10fd93;\n          uVar8 = FUN_0010f060(param_1);\n          FUN_0010e8d0(param_1,uVar8,local_98,uVar30,local_80,0,iVar9,uVar31);\n          uVar16 = uVar30;\n          uVar17 = uVar30;\n          uVar25 = local_98;\n          if (iVar9 == 2) {\n            uVar25 = local_98 * 0xff >> 0xf;\n            uVar19 = uVar11 * 0xff >> 0xf;\n            uVar12 = local_80 * 0xff >> 0xf;\n            uVar16 = (ulong)(((uVar11 * 0xff & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar19] >> 0xc)\n                             + (uint)(ushort)(&DAT_00129dc0)[uVar19] >> 8 & 0xff);\n            uVar17 = (ulong)(((local_80 * 0xff & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar12] >>\n                             0xc) + (uint)(ushort)(&DAT_00129dc0)[uVar12] >> 8 & 0xff);\n            uVar25 = ((local_98 * 0xff & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar25] >> 0xc) +\n                     (uint)(ushort)(&DAT_00129dc0)[uVar25] >> 8 & 0xff;\n          }\n          iVar18 = memcmp((void *)(param_1[3] + (ulong)(uVar20 * uVar8)),\n                          (void *)((ulong)(((int)(uVar17 * 5 + 0x82 >> 8) +\n                                            ((int)(uVar16 * 5 + 0x82 >> 8) +\n                                            (uVar25 * 5 + 0x82 >> 8) * 6) * 6 & 0xff) * uVar20) +\n                                  param_1[3]),(ulong)uVar20);\n          if (iVar18 == 0) {\n            local_4a[0] = 0;\n            uVar25 = 3;\n            local_48 = (undefined2)local_98;\n            local_46 = (undefined2)uVar30;\n            local_44 = (undefined2)local_80;\n            local_42 = local_46;\n            png_set_background_fixed(lVar5,local_4a,1,0,0);\n            uVar11 = 0x100;\n            break;\n          }\n          local_64 = uVar8 + 0xd;\n          local_68 = 0;\n          do {\n            uVar11 = 0;\n            uVar20 = local_64 - 9;\n            do {\n              uVar19 = uVar20;\n              uVar25 = 0;\n              uVar20 = uVar19 - 3;\n              do {\n                uVar13 = FUN_0010e830(param_1,uVar25,1,0x80,local_80,iVar9);\n                uVar25 = uVar25 * 2 | 0x7f;\n                uVar14 = FUN_0010e830(param_1,uVar11,1,0x80);\n                uVar15 = FUN_0010e830(param_1,local_68,1,0x80);\n                uVar12 = uVar20 + 1;\n                FUN_0010e8d0(param_1,uVar20,uVar15,uVar14,uVar13,0,iVar9);\n                uVar20 = uVar12;\n              } while (uVar12 != uVar19);\n              uVar11 = uVar11 * 2 | 0x7f;\n              uVar20 = uVar19 + 3;\n            } while (local_64 != uVar19 + 3);\n            local_68 = local_68 * 2 | 0x7f;\n            local_64 = uVar19 + 0xc;\n            uVar11 = uVar8;\n          } while (uVar8 + 0x28 != local_64);\n        }\n        else {\n          if (uVar8 < 0xf4) {\n                    /* WARNING: Subroutine does not return */\n            png_error(lVar5,\"rgb+alpha color-map: too few entries\");\n          }\n          uVar8 = 0;\n          uVar31 = 0x10fbe0;\n          uVar11 = FUN_0010f060(param_1);\n          FUN_0010e8d0(param_1,uVar11,0xff,0xff,0xff,0,1,uVar31);\n          uVar20 = uVar11 + 0xd;\n          do {\n            uVar12 = 0;\n            uVar25 = uVar20 - 9;\n            do {\n              uVar19 = uVar25;\n              uVar25 = 0;\n              uVar28 = uVar19 - 3;\n              do {\n                uVar29 = uVar28 + 1;\n                FUN_0010e8d0(param_1,uVar28,uVar8,uVar12,uVar25,0x80,1);\n                uVar25 = uVar25 * 2 | 0x7f;\n                uVar28 = uVar29;\n              } while (uVar29 != uVar19);\n              uVar12 = uVar12 * 2 | 0x7f;\n              uVar25 = uVar19 + 3;\n            } while (uVar20 != uVar19 + 3);\n            uVar20 = uVar19 + 0xc;\n            uVar8 = uVar8 * 2 | 0x7f;\n          } while (uVar11 + 0x28 != uVar20);\n        }\n        uVar25 = 4;\n        uVar8 = uVar19;\n        goto LAB_0010fc9a;\n      }\n      if (uVar8 < 0xd8) {\n                    /* WARNING: Subroutine does not return */\n        png_error(lVar5,\"rgb color-map: too few entries\");\n      }\n      uVar25 = 3;\n      uVar8 = FUN_0010f060(param_1);\n      uVar11 = 0x100;\n      break;\n    }\n    uVar31 = 0x10fa79;\n    png_set_rgb_to_gray_fixed(lVar5,1,0xffffffff,0xffffffff);\n    if (*(char *)(lVar5 + 0x267) != '\\x06') {\n      uVar8 = *(uint *)((long)pplVar4 + 0x1c);\n      if (*(short *)(lVar5 + 0x260) != 0) goto LAB_0010fac8;\n      if (uVar8 < 0x100) goto LAB_0010faa8;\n      goto LAB_0010fb03;\n    }\n    uVar8 = *(uint *)((long)pplVar4 + 0x1c);\nLAB_0010fac8:\n    if ((uVar20 & 1) != 0) {\n      if (uVar8 < 0x100) {\n                    /* WARNING: Subroutine does not return */\n        png_error(lVar5,\"rgb[ga] color-map: too few entries\");\n      }\n      uVar8 = FUN_0010ef20(param_1);\n      uVar11 = 0xe7;\n      uVar25 = uVar20 & 1;\n      goto LAB_0010fc9a;\n    }\n    if (uVar8 < 0x100) {\nLAB_0010faa8:\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar5,\"rgb[gray] color-map: too few entries\");\n    }\n    if ((*(char *)(lVar5 + 0x267) != '\\x06') && (*(short *)(lVar5 + 0x260) == 0)) {\nLAB_0010fb03:\n      uVar31 = 0x10fb0b;\n      uVar8 = FUN_0010f010(param_1);\n      if ((*(char *)(lVar5 + 0x267) == '\\x06') || (*(short *)(lVar5 + 0x260) != 0)) {\n        iVar18 = 1;\n        uVar16 = uVar30;\n        if (iVar9 == 2) {\n          uVar20 = uVar11 * 0xff >> 0xf;\n          uVar20 = ((uVar11 * 0xff & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar20] >> 0xc) +\n                   (uint)(ushort)(&DAT_00129dc0)[uVar20] >> 8 & 0xff;\n          FUN_0010e8d0(param_1,uVar20,uVar30,uVar30,uVar30,0,2,uVar31);\n          uVar16 = (ulong)uVar20;\n        }\n        goto LAB_0011004a;\n      }\nLAB_0010fb2d:\n      uVar11 = 0x100;\n      break;\n    }\n    iVar18 = *(int *)(lVar5 + 0x4a0);\n    if (iVar18 < 100000) {\n      if (iVar18 != 0) {\n        uVar31 = 0x110153;\n        iVar18 = FUN_00109960((iVar18 * 0xb + 2) / 5);\n        if (iVar18 != 0) goto LAB_0011015b;\n      }\n      goto LAB_0010fb03;\n    }\nLAB_0011015b:\n    uVar20 = 0;\n    do {\n      uVar8 = uVar20 + 1;\n      FUN_0010e8d0(param_1,uVar20,uVar20,uVar20,uVar20,0xff,3,uVar31);\n      uVar20 = uVar8;\n    } while (uVar8 != 0x100);\n    if ((*(char *)(lVar5 + 0x267) != '\\x06') && (*(short *)(lVar5 + 0x260) == 0)) {\n      if (8 < *(byte *)(lVar5 + 0x268)) {\n        png_set_scale_16(lVar5);\n      }\n      if (*(uint *)((long)pplVar4 + 0x1c) < 0x100) goto LAB_00110364;\n      uVar25 = 0;\n      *(undefined4 *)((long)pplVar4 + 0x1c) = 0x100;\n      goto LAB_0010f380;\n    }\n    uVar16 = uVar30;\n    if (iVar9 == 1) {\n      uVar16 = (ulong)(ushort)(&DAT_0012a1c0)[uVar30];\n    }\n    uVar31 = 0x110277;\n    uVar7 = FUN_0010a380(uVar16,*(undefined4 *)(lVar5 + 0x4a0));\n    uVar20 = (uint)uVar7 * 0xff + 0x807f >> 0x10;\n    uVar16 = (ulong)uVar20;\n    iVar18 = 3;\n    FUN_0010e8d0(param_1,uVar20,uVar30,uVar30,uVar30,0,iVar9,uVar31);\nLAB_0011004a:\n    local_4a[0] = 0;\n    local_48 = (undefined2)uVar16;\n    local_46 = local_48;\n    local_44 = local_48;\n    local_42 = local_48;\n    png_set_background_fixed(lVar5,local_4a,1,0,0);\n    if ((*(short *)(lVar5 + 0x260) != 0) && ((*(byte *)(lVar5 + 0x267) & 4) == 0)) {\n      png_set_tRNS_to_alpha(lVar5);\n    }\n    if (iVar18 == 1) goto LAB_0010fb2d;\n    if (iVar18 != 3) {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar5,\"bad data option (internal error)\");\n    }\n    uVar11 = 0x100;\n    goto LAB_0010f311;\n  case 3:\n    puVar26 = *(undefined **)(lVar5 + 0x250);\n    uVar25 = (uint)*(ushort *)(lVar5 + 0x260);\n    if (uVar25 == 0) {\n      local_88 = 0;\n      bVar21 = 0;\n    }\n    else {\n      local_88 = *(long *)(lVar5 + 0x2e8);\n      if (local_88 == 0) {\n        bVar21 = 0;\n        uVar25 = 0;\n      }\n      else {\n        bVar21 = ~(byte)uVar20 & 1;\n      }\n    }\n    uVar7 = *(ushort *)(lVar5 + 600);\n    uVar8 = (uint)uVar7;\n    if (0x100 < uVar7) {\n      uVar8 = 0x100;\n    }\n    if (*(uint *)((long)pplVar4 + 0x1c) <= uVar8 && uVar8 != *(uint *)((long)pplVar4 + 0x1c)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar5,\"palette color-map: too few entries\");\n    }\n    uVar30 = 0;\n    if (uVar7 == 0) goto LAB_0010f4b0;\n    do {\n      while ((uVar16 = uVar30 & 0xffffffff, uVar25 <= (uint)uVar30 || (bVar21 == 0))) {\n        bVar22 = 0xff;\n        if ((uint)uVar16 < uVar25) {\n          bVar22 = *(byte *)(local_88 + uVar30);\n        }\nLAB_0010f697:\n        puVar1 = puVar26 + 2;\n        uVar30 = uVar30 + 1;\n        puVar2 = puVar26 + 1;\n        uVar3 = *puVar26;\n        puVar26 = puVar26 + 3;\n        FUN_0010e8d0(param_1,uVar16,uVar3,*puVar2,*puVar1,bVar22,3);\n        if (uVar8 <= (uint)uVar30) goto LAB_0010f6c6;\n      }\n      bVar22 = *(byte *)(local_88 + uVar30);\n      if (bVar22 == 0xff) goto LAB_0010f697;\n      if (bVar22 == 0) {\n        FUN_0010e8d0(param_1,uVar16,local_98,uVar11,local_80,0,iVar9);\n      }\n      else {\n        uVar7 = CONCAT11(bVar22,bVar22);\n        if (iVar9 != 2) {\n          uVar7 = (ushort)bVar22;\n        }\n        uVar13 = FUN_0010e830(param_1,puVar26[2],3,bVar22,local_80,iVar9);\n        uVar14 = FUN_0010e830(param_1,puVar26[1],3,*(undefined *)(local_88 + uVar30),uVar11,iVar9);\n        uVar31 = 0x10f63d;\n        uVar15 = FUN_0010e830(param_1,*puVar26,3,*(undefined *)(local_88 + uVar30),local_98,iVar9);\n        FUN_0010e8d0(param_1,uVar30 & 0xffffffff,uVar15,uVar14,uVar13,uVar7,iVar9,uVar31);\n      }\n      uVar30 = uVar30 + 1;\n      puVar26 = puVar26 + 3;\n    } while ((uint)uVar30 < uVar8);\nLAB_0010f6c6:\n    bVar21 = *(byte *)(lVar5 + 0x268);\n    if (bVar21 < 8) goto LAB_0010f6de;\nLAB_0010f4c4:\n    if (bVar21 < 9) {\nLAB_0010f4cc:\n      if (*(uint *)((long)pplVar4 + 0x1c) < uVar8) goto LAB_00110364;\n      *(uint *)((long)pplVar4 + 0x1c) = uVar8;\n      uVar25 = 0;\n      goto LAB_0010f380;\n    }\nLAB_0010f6fb:\n    uVar11 = 0x100;\n    uVar25 = 0;\n    goto LAB_0010f706;\n  case 4:\n    uVar8 = *(uint *)((long)pplVar4 + 0x1c);\n    uVar25 = uVar20 & 1;\n    if (uVar25 == 0) {\n      if (((uVar20 & 2) == 0) || ((local_98 == uVar11 && (uVar11 == local_80)))) {\n        if (uVar8 < 0x100) {\n                    /* WARNING: Subroutine does not return */\n          png_error(lVar5,\"gray-alpha color-map: too few entries\");\n        }\n        uVar31 = 0x10fce3;\n        uVar8 = FUN_0010f010(param_1);\nLAB_0010fce5:\n        uVar25 = uVar20 & 1;\n        if (iVar9 == 2) {\n          uVar20 = uVar11 * 0xff >> 0xf;\n          uVar20 = ((uVar11 * 0xff & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar20] >> 0xc) +\n                   (uint)(ushort)(&DAT_00129dc0)[uVar20] >> 8 & 0xff;\n          FUN_0010e8d0(param_1,uVar20,uVar30,uVar30,uVar30,0xffff,2,uVar31);\n          uVar30 = (ulong)uVar20;\n        }\n        local_4a[0] = 0;\n        local_48 = (undefined2)uVar30;\n        local_46 = local_48;\n        local_44 = local_48;\n        local_42 = local_48;\n        png_set_background_fixed(lVar5,local_4a,1,0,0);\n        uVar11 = 0x100;\n      }\n      else {\n        if (uVar8 < 0x100) {\n                    /* WARNING: Subroutine does not return */\n          png_error(lVar5,\"ga-alpha color-map: too few entries\");\n        }\n        do {\n          uVar20 = uVar25 + 1;\n          FUN_0010e8d0(param_1,uVar25);\n          uVar25 = uVar20;\n        } while (uVar20 != 0xe7);\n        if (iVar9 == 2) {\n          FUN_0010e8d0(param_1,0xe7,local_98);\n        }\n        else {\n          FUN_0010e8d0(param_1,0xe7,local_98,uVar30,local_80,0xff,1);\n          local_98 = (uint)(ushort)(&DAT_0012a1c0)[local_98];\n          uVar11 = (uint)(ushort)(&DAT_0012a1c0)[uVar30];\n          local_80 = (uint)(ushort)(&DAT_0012a1c0)[local_80];\n        }\n        local_70 = &DAT_0012a1c0;\n        local_7c = 0x33;\n        local_68 = 0xe8;\n        iVar18 = local_80 * -0x33;\n        iVar24 = local_80 * 0xcc;\n        iVar9 = uVar11 * 0xcc;\n        local_80 = local_98 * 0xcc;\n        puVar27 = local_70;\n        uVar8 = local_68;\n        do {\n          do {\n            iVar10 = (uint)*puVar27 * local_7c;\n            puVar27 = puVar27 + 0x33;\n            uVar19 = (uint)(iVar10 + iVar24) >> 0xf;\n            uVar20 = (uint)(iVar10 + iVar9) >> 0xf;\n            uVar25 = iVar10 + local_80 >> 0xf;\n            FUN_0010e8d0(param_1,uVar8,\n                         ((iVar10 + local_80 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar25] >> 0xc)\n                         + (uint)(ushort)(&DAT_00129dc0)[uVar25] >> 8 & 0xff,\n                         (uint)(ushort)(&DAT_00129dc0)[uVar20] +\n                         ((iVar10 + iVar9 & 0x7fffU) * (uint)(byte)(&DAT_00129bc0)[uVar20] >> 0xc)\n                         >> 8 & 0xff,\n                         ((iVar10 + iVar24 & 0x7fffU) * (uint)(byte)(&DAT_00129bc0)[uVar19] >> 0xc)\n                         + (uint)(ushort)(&DAT_00129dc0)[uVar19] >> 8 & 0xff,0xff,1);\n            uVar8 = uVar8 + 1;\n          } while (puVar27 != (ushort *)&DAT_0012a424);\n          uVar8 = local_68 + 6;\n          local_7c = local_7c + 0x33;\n          iVar9 = iVar9 + uVar11 * -0x33;\n          iVar24 = iVar24 + iVar18;\n          local_80 = local_80 + local_98 * -0x33;\n          puVar27 = local_70;\n          local_68 = uVar8;\n        } while (uVar8 != 0x100);\n        uVar11 = 0xe7;\n        uVar25 = 1;\n      }\n    }\n    else {\n      if (uVar8 < 0x100) {\n                    /* WARNING: Subroutine does not return */\n        png_error(lVar5,\"gray+alpha color-map: too few entries\");\n      }\n      uVar8 = FUN_0010ef20(param_1);\n      uVar11 = 0xe7;\n    }\n  }\n  png_set_alpha_mode_fixed(lVar5,0,220000);\nLAB_0010f311:\n  if (8 < *(byte *)(lVar5 + 0x268)) {\nLAB_0010f706:\n    png_set_scale_16(lVar5);\n  }\n  if ((0x100 < uVar8) || (*(uint *)((long)pplVar4 + 0x1c) < uVar8)) {\nLAB_00110364:\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar5,\"color map overflow (BAD internal error)\");\n  }\n  *(uint *)((long)pplVar4 + 0x1c) = uVar8;\n  if (uVar25 != 3) {\n    if (uVar25 == 4) {\n      if (uVar11 == 0xd8) goto LAB_0010f380;\n      goto LAB_0010fb8e;\n    }\n    if (uVar25 == 1) {\n      if (uVar11 != 0xe7) goto LAB_0010fb8e;\n      goto LAB_0010f380;\n    }\n    if (uVar25 == 2) {\n      if ((uVar8 <= uVar11) || (uVar11 != 0xfe)) goto LAB_0010fb8e;\n      goto LAB_0010f380;\n    }\n  }\n  if (uVar11 == 0x100) {\nLAB_0010f380:\n    *(uint *)(param_1 + 9) = uVar25;\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return 1;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\nLAB_0010fb8e:\n                    /* WARNING: Subroutine does not return */\n  png_error(lVar5,\"bad background index (internal error)\");\n}\n\n", "FUN_001108e0": "\nundefined8 FUN_001108e0(long **param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  uint uVar3;\n  \n  lVar1 = **param_1;\n  lVar2 = (*param_1)[1];\n  png_set_benign_errors(lVar1,1);\n  png_read_info(lVar1,lVar2);\n  *(undefined4 *)((long)param_1 + 0xc) = *(undefined4 *)(lVar1 + 0x1f8);\n  *(undefined4 *)(param_1 + 2) = *(undefined4 *)(lVar1 + 0x1fc);\n  uVar3 = FUN_0010e5c0(lVar1);\n  *(uint *)((long)param_1 + 0x14) = uVar3;\n  if (((uVar3 & 2) != 0) && ((*(ushort *)(lVar1 + 0x4ea) & 0x8042) == 2)) {\n    *(uint *)(param_1 + 3) = *(uint *)(param_1 + 3) | 1;\n  }\n  if (*(char *)(lVar1 + 0x267) == '\\0') {\n    uVar3 = 1 << (*(byte *)(lVar1 + 0x268) & 0x1f);\n  }\n  else {\n    if (*(char *)(lVar1 + 0x267) != '\\x03') {\n      *(undefined4 *)((long)param_1 + 0x1c) = 0x100;\n      return 1;\n    }\n    uVar3 = (uint)*(ushort *)(lVar1 + 600);\n  }\n  if (0x100 < uVar3) {\n    uVar3 = 0x100;\n  }\n  *(uint *)((long)param_1 + 0x1c) = uVar3;\n  return 1;\n}\n\n", "FUN_00110f20": "\nundefined4 FUN_00110f20(long **param_1)\n\n{\n  long **pplVar1;\n  long lVar2;\n  long lVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  int iVar8;\n  uint uVar9;\n  long *plVar10;\n  code *pcVar11;\n  uint uVar12;\n  uint uVar13;\n  long *plVar14;\n  long in_FS_OFFSET;\n  bool bVar15;\n  uint local_6c;\n  uint local_64;\n  int local_60;\n  uint local_4c;\n  ushort local_48;\n  ushort local_46;\n  ushort local_44;\n  long local_40;\n  \n  pplVar1 = (long **)*param_1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar9 = *(uint *)((long)pplVar1 + 0x14);\n  lVar2 = **pplVar1;\n  lVar3 = (*pplVar1)[1];\n  uVar4 = uVar9 & 4;\n  png_set_expand(lVar2);\n  uVar5 = FUN_0010e5c0(lVar2);\n  local_6c = 0;\n  uVar12 = uVar5 & 0xfffffff7 ^ uVar9;\n  if ((uVar12 & 2) != 0) {\n    if ((uVar9 & 2) == 0) {\n      local_6c = uVar5 & 1;\n      png_set_rgb_to_gray_fixed();\n    }\n    else {\n      png_set_gray_to_rgb();\n    }\n    uVar12 = uVar12 & 0xfffffffd;\n  }\n  iVar8 = -1;\n  if ((uVar5 & 4) != 0) {\n    iVar8 = (-(uint)((*(uint *)(pplVar1 + 3) & 4) == 0) & 0x186a1) - 1;\n  }\n  png_set_alpha_mode_fixed(lVar2,0,iVar8);\n  if (uVar4 == 0) {\n    uVar13 = 0;\n    uVar6 = 0xffffffff;\n  }\n  else {\n    uVar6 = 100000;\n    uVar13 = uVar5 & 1;\n  }\n  if ((uVar12 & 0x40) != 0) {\n    uVar12 = uVar12 & 0xffffffbf;\n    uVar13 = 2;\n  }\n  if (local_6c != 0) {\n    iVar8 = FUN_00108ce0(&local_4c,uVar6,*(undefined4 *)(lVar2 + 0x4a0));\n    if ((iVar8 == 0) || (iVar8 = FUN_00109960(local_4c), iVar8 != 0)) {\n      if (uVar13 == 1) {\n        local_6c = 2;\n        uVar13 = 0;\n      }\n    }\n    else {\n      local_6c = 0;\n    }\n  }\n  if ((uVar12 & 4) != 0) {\n    if (uVar4 == 0) {\n      png_set_scale_16(lVar2);\n    }\n    else {\n      png_set_expand_16();\n    }\n    uVar12 = uVar12 & 0xfffffffb;\n  }\n  local_64 = 0;\n  if ((uVar12 & 1) != 0) {\n    if ((uVar5 & 1) == 0) {\n      bVar15 = (uVar9 & 0x20) == 0;\n      if (!bVar15) {\n        uVar12 = uVar12 & 0xffffffdf;\n      }\n      png_set_add_alpha(lVar2,(-(uint)(uVar4 == 0) & 0xffff0100) + 0xffff,bVar15);\n      local_64 = 0;\n    }\n    else if (local_6c == 0) {\n      if (uVar4 == 0) {\n        plVar14 = param_1[4];\n        if (plVar14 == (long *)0x0) {\n          local_64 = 1;\n          uVar13 = 2;\n        }\n        else {\n          local_4c = (uint)(CONCAT12(*(undefined *)plVar14,(short)local_4c) & 0xffff00);\n          local_48 = (ushort)*(byte *)((long)plVar14 + 1);\n          local_46 = (ushort)*(byte *)((long)plVar14 + 2);\n          local_44 = local_48;\n          png_set_background_fixed(lVar2,&local_4c,1);\n          local_64 = uVar4;\n        }\n      }\n      else {\n        png_set_strip_alpha(lVar2);\n        local_64 = local_6c;\n      }\n    }\n    else {\n      local_6c = 2;\n    }\n    uVar12 = uVar12 & 0xfffffffe;\n  }\n  png_set_alpha_mode_fixed(lVar2,uVar13,uVar6);\n  if ((uVar12 & 0x10) != 0) {\n    if ((uVar9 & 2) == 0) {\n      uVar9 = uVar9 & 0xffffffef;\n    }\n    else {\n      png_set_bgr(lVar2);\n    }\n    uVar12 = uVar12 & 0xffffffef;\n  }\n  if ((uVar12 & 0x20) != 0) {\n    if ((uVar9 & 1) == 0) {\n      uVar9 = uVar9 & 0xffffffdf;\n    }\n    else if (local_6c != 2) {\n      png_set_swap_alpha(lVar2);\n    }\n    uVar12 = uVar12 & 0xffffffdf;\n  }\n  if (uVar4 != 0) {\n    png_set_swap(lVar2);\n  }\n  if (uVar12 != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar2,\"png_read_image: unsupported transformation\");\n  }\n  FUN_0010e6a0(lVar2);\n  if ((local_64 == 0) && (local_6c != 2)) {\n    local_60 = png_set_interlace_handling(lVar2);\n  }\n  else {\n    local_60 = 0;\n  }\n  png_read_update_info();\n  if ((*(byte *)(lVar3 + 0x25) & 2) != 0) {\n    uVar12 = 2;\n  }\n  if ((*(byte *)(lVar3 + 0x25) & 4) == 0) {\n    if (local_64 != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar2,\"png_image_read: alpha channel lost\");\n    }\n  }\n  else if ((local_64 == 0) && ((local_6c != 2 || ((uVar9 & 1) != 0)))) {\n    uVar12 = uVar12 | 1;\n  }\n  if ((uVar9 & 0x40) != 0) {\n    uVar12 = uVar12 | 0x40;\n  }\n  if (*(char *)(lVar3 + 0x24) == '\\x10') {\n    uVar12 = uVar12 | 4;\n  }\n  if ((*(uint *)(lVar2 + 0x134) & 1) != 0) {\n    uVar12 = uVar12 | 0x10;\n  }\n  uVar5 = *(uint *)(lVar2 + 0x134) & 0x20000;\n  if (local_6c == 2) {\n    if ((uVar9 & 0x20) != 0) {\n      uVar12 = uVar12 | 0x20;\n    }\n    if ((uVar5 != 0) || ((*(ulong *)(lVar2 + 0x130) & 0x100000000000080) == 0x100000000000000)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar2,\"unexpected alpha swap transformation\");\n    }\n  }\n  else if ((uVar5 != 0) || ((*(ulong *)(lVar2 + 0x130) & 0x100000000000080) == 0x100000000000000)) {\n    uVar12 = uVar12 | 0x20;\n  }\n  if (uVar9 != uVar12) {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar2,\"png_read_image: invalid transformations\");\n  }\n  plVar14 = param_1[1];\n  plVar10 = (long *)(long)*(int *)(param_1 + 2);\n  if (uVar4 != 0) {\n    plVar10 = (long *)((long)(long *)(long)*(int *)(param_1 + 2) * 2);\n  }\n  if ((long)plVar10 < 0) {\n    plVar14 = (long *)((long)plVar14 - (ulong)(*(int *)(pplVar1 + 2) - 1) * (long)plVar10);\n  }\n  param_1[6] = plVar14;\n  param_1[7] = plVar10;\n  if (local_64 == 0) {\n    if (local_6c != 2) {\n      local_60 = local_60 + -1;\n      if (-1 < local_60) {\n        while( true ) {\n          for (iVar8 = *(int *)(pplVar1 + 2); iVar8 != 0; iVar8 = iVar8 + -1) {\n            png_read_row(lVar2,plVar14,0);\n            plVar14 = (long *)((long)plVar14 + (long)plVar10);\n          }\n          local_60 = local_60 + -1;\n          if (local_60 == -1) break;\n          plVar14 = param_1[6];\n        }\n      }\n      uVar6 = 1;\n      goto LAB_00111356;\n    }\n    uVar7 = png_get_rowbytes(lVar2,lVar3);\n    plVar14 = (long *)png_malloc(lVar2,uVar7);\n    pcVar11 = FUN_00111590;\n    param_1[5] = plVar14;\n  }\n  else {\n    uVar7 = png_get_rowbytes(lVar2,lVar3);\n    plVar14 = (long *)png_malloc(lVar2,uVar7);\n    pcVar11 = FUN_00111c60;\n    param_1[5] = plVar14;\n  }\n  uVar6 = FUN_0010b820(pplVar1,pcVar11,param_1);\n  param_1[5] = (long *)0x0;\n  png_free(lVar2,plVar14);\nLAB_00111356:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00111590": "\nundefined8 FUN_00111590(long **param_1)\n\n{\n  char cVar1;\n  ushort uVar2;\n  uint uVar3;\n  uint uVar4;\n  long **pplVar5;\n  long lVar6;\n  long *plVar7;\n  long *plVar8;\n  char cVar9;\n  byte bVar10;\n  byte bVar11;\n  ushort uVar12;\n  uint uVar13;\n  uint uVar14;\n  int iVar15;\n  ulong uVar16;\n  long lVar17;\n  byte bVar18;\n  uint uVar19;\n  uint uVar20;\n  ulong uVar21;\n  byte *pbVar22;\n  uint uVar23;\n  ulong uVar24;\n  uint uVar25;\n  long *plVar26;\n  long *plVar27;\n  ulong uVar28;\n  int local_80;\n  ulong local_78;\n  uint local_44;\n  uint local_40;\n  \n  pplVar5 = (long **)*param_1;\n  lVar6 = **pplVar5;\n  lVar17 = (*pplVar5)[1];\n  uVar3 = *(uint *)(pplVar5 + 2);\n  uVar4 = *(uint *)((long)pplVar5 + 0xc);\n  if ((*(uint *)(lVar6 + 0x134) & 0x600000) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar6,\"lost rgb to gray\");\n  }\n  if ((*(uint *)(lVar6 + 0x134) & 0x80) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar6,\"unexpected compose\");\n  }\n  cVar9 = png_get_channels();\n  if (cVar9 != '\\x02') {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar6,\"lost/gained channels\");\n  }\n  uVar14 = *(uint *)((long)pplVar5 + 0x14);\n  if ((uVar14 & 5) == 1) {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar6,\"unexpected 8-bit transformation\");\n  }\n  cVar9 = *(char *)(lVar6 + 0x264);\n  if (cVar9 == '\\0') {\n    local_40 = 1;\n  }\n  else {\n    if (cVar9 != '\\x01') {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar6,\"unknown interlace type\");\n    }\n    local_40 = 7;\n  }\n  cVar1 = *(char *)(lVar17 + 0x24);\n  if (cVar1 == '\\b') {\n    plVar7 = param_1[6];\n    plVar8 = param_1[7];\n    local_44 = 1;\n    uVar14 = 0;\n    if (cVar9 == '\\x01') goto LAB_00111a43;\nLAB_001118d8:\n    iVar15 = 1;\n    uVar24 = 0;\n    uVar16 = 0;\n    local_78 = 1;\nLAB_001118ed:\n    plVar27 = param_1[4];\n    if (plVar27 == (long *)0x0) goto LAB_00111ae4;\n    do {\n      bVar18 = *(byte *)((long)plVar27 + 1);\n      uVar2 = (&DAT_0012a1c0)[bVar18];\n      if ((uint)uVar24 < uVar3) {\n        do {\n          lVar17 = uVar24 * (long)plVar8;\n          plVar27 = param_1[5];\n          png_read_row(lVar6,plVar27,0);\n          for (pbVar22 = (byte *)((long)plVar7 + uVar16 + lVar17);\n              pbVar22 < (byte *)((long)plVar7 + (ulong)uVar4 + lVar17); pbVar22 = pbVar22 + local_78\n              ) {\n            bVar11 = *(byte *)((long)plVar27 + 1);\n            if (bVar11 == 0) {\n              *pbVar22 = bVar18;\n            }\n            else {\n              bVar10 = *(byte *)plVar27;\n              if (bVar11 != 0xff) {\n                uVar14 = (0xff - (uint)bVar11) * (uint)uVar2 +\n                         (uint)(ushort)(&DAT_0012a1c0)[bVar10] * (uint)bVar11;\n                uVar19 = uVar14 >> 0xf;\n                bVar10 = (byte)(((uVar14 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar19] >> 0xc) +\n                                (uint)(ushort)(&DAT_00129dc0)[uVar19] >> 8);\n              }\n              *pbVar22 = bVar10;\n            }\n            plVar27 = (long *)((long)plVar27 + 2);\n          }\n          uVar14 = (int)uVar24 + iVar15;\n          uVar24 = (ulong)uVar14;\n        } while (uVar14 < uVar3);\n      }\n      while( true ) {\n        do {\n          if (local_40 == local_44) {\n            return 1;\n          }\n          uVar19 = local_44 + 1;\n          uVar14 = local_44;\n          local_44 = uVar19;\n          if (*(char *)(lVar6 + 0x264) != '\\x01') goto LAB_001118d8;\nLAB_00111a43:\n          uVar19 = (uVar14 & 1) << (3U - (char)((int)local_44 >> 1) & 0x1f);\n          if (uVar14 < 2) {\n            bVar18 = 3;\n            uVar23 = ~uVar19 & 7;\n          }\n          else {\n            bVar18 = (byte)((int)(8 - local_44) >> 1);\n            uVar23 = ((1 << (bVar18 & 0x1f)) + -1) - (uVar19 & 7);\n          }\n        } while (uVar23 + uVar4 >> (bVar18 & 0x1f) == 0);\n        uVar16 = (ulong)(uVar19 & 7);\n        local_78 = (ulong)(uint)(1 << ((byte)((int)(8 - local_44) >> 1) & 0x1f));\n        iVar15 = 8;\n        uVar24 = (ulong)((uVar14 & 1 ^ 1) << (3U - (char)((int)uVar14 >> 1) & 0x1f) & 7);\n        if (uVar14 < 3) goto LAB_001118ed;\n        iVar15 = 8 >> ((byte)((int)(uVar14 - 1) >> 1) & 0x1f);\n        plVar27 = param_1[4];\n        if (plVar27 != (long *)0x0) break;\nLAB_00111ae4:\n        if ((uint)uVar24 < uVar3) {\n          do {\n            lVar17 = uVar24 * (long)plVar8;\n            plVar27 = param_1[5];\n            png_read_row(lVar6,plVar27,0);\n            for (pbVar22 = (byte *)((long)plVar7 + uVar16 + lVar17);\n                pbVar22 < (byte *)((long)plVar7 + (ulong)uVar4 + lVar17);\n                pbVar22 = pbVar22 + local_78) {\n              bVar18 = *(byte *)((long)plVar27 + 1);\n              if (bVar18 != 0) {\n                bVar11 = *(byte *)plVar27;\n                if (bVar18 != 0xff) {\n                  uVar14 = (uint)(ushort)(&DAT_0012a1c0)[*pbVar22] * (0xff - (uint)bVar18) +\n                           (uint)(ushort)(&DAT_0012a1c0)[bVar11] * (uint)bVar18;\n                  uVar19 = uVar14 >> 0xf;\n                  bVar11 = (byte)(((uVar14 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar19] >> 0xc) +\n                                  (uint)(ushort)(&DAT_00129dc0)[uVar19] >> 8);\n                }\n                *pbVar22 = bVar11;\n              }\n              plVar27 = (long *)((long)plVar27 + 2);\n            }\n            uVar14 = (int)uVar24 + iVar15;\n            uVar24 = (ulong)uVar14;\n          } while (uVar14 < uVar3);\n        }\n      }\n    } while( true );\n  }\n  if (cVar1 != '\\x10') {\n                    /* WARNING: Subroutine does not return */\n    png_error(lVar6,\"unexpected bit depth\");\n  }\n  plVar7 = param_1[7];\n  plVar8 = param_1[6];\n  uVar19 = (uVar14 & 1) + 1;\n  uVar20 = 0;\n  uVar23 = 1;\n  uVar25 = 1;\n  if (cVar9 != '\\x01') goto LAB_00111721;\nLAB_001116b0:\n  uVar25 = (uVar20 & 1) << (3U - (char)((int)uVar23 >> 1) & 0x1f);\n  if (uVar20 < 2) {\n    bVar18 = 3;\n    uVar13 = ~uVar25 & 7;\n  }\n  else {\n    bVar18 = (byte)((int)(8 - uVar23) >> 1);\n    uVar13 = ((1 << (bVar18 & 0x1f)) + -1) - (uVar25 & 7);\n  }\n  if (uVar13 + uVar4 >> (bVar18 & 0x1f) != 0) {\n    uVar24 = (ulong)((uVar25 & 7) * uVar19);\n    uVar16 = (ulong)(uVar19 << ((byte)((int)(8 - uVar23) >> 1) & 0x1f));\n    local_80 = 8;\n    uVar28 = (ulong)((uVar20 & 1 ^ 1) << (3U - (char)((int)uVar20 >> 1) & 0x1f) & 7);\n    if (uVar20 < 3) goto LAB_00111732;\n    local_80 = 8 >> ((byte)((int)(uVar20 - 1) >> 1) & 0x1f);\n    goto LAB_00111732;\n  }\n  do {\n    uVar20 = uVar23;\n    if (local_40 == uVar23) {\n      return 1;\n    }\n    while( true ) {\n      uVar23 = uVar20 + 1;\n      uVar25 = uVar23;\n      if (*(char *)(lVar6 + 0x264) == '\\x01') goto LAB_001116b0;\nLAB_00111721:\n      uVar23 = uVar25;\n      local_80 = 1;\n      uVar16 = (ulong)uVar19;\n      uVar28 = 0;\n      uVar24 = 0;\nLAB_00111732:\n      if (uVar3 <= (uint)uVar28) break;\n      plVar27 = param_1[5];\n      do {\n        lVar17 = uVar28 * ((long)plVar7 / 2);\n        png_read_row(lVar6,plVar27,0);\n        plVar27 = param_1[5];\n        plVar26 = plVar27;\n        for (uVar21 = (long)plVar8 + uVar24 * 2 + lVar17 * 2;\n            uVar21 < (long)plVar8 + (ulong)(uVar4 * uVar19) * 2 + lVar17 * 2;\n            uVar21 = uVar21 + uVar16 * 2) {\n          uVar2 = *(ushort *)((long)plVar26 + 2);\n          uVar12 = *(ushort *)plVar26;\n          if (uVar2 == 0) {\n            uVar12 = 0;\n          }\n          else if (uVar2 != 0xffff) {\n            uVar12 = (ushort)((ulong)((uint)uVar2 * (uint)uVar12 + 0x7fff) / 0xffff);\n          }\n          *(ushort *)(uVar21 + (ulong)((uVar14 & 0x21) == 0x21) * 2) = uVar12;\n          if ((uVar14 & 1) != 0) {\n            *(ushort *)(uVar21 + (ulong)((uVar14 & 0x21) != 0x21) * 2) = uVar2;\n          }\n          plVar26 = (long *)((long)plVar26 + 4);\n        }\n        uVar20 = (int)uVar28 + local_80;\n        uVar28 = (ulong)uVar20;\n      } while (uVar20 < uVar3);\n      uVar20 = uVar23;\n      if (local_40 == uVar23) {\n        return 1;\n      }\n    }\n  } while( true );\n}\n\n", "FUN_00111c60": "\nundefined8 FUN_00111c60(long *param_1)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  uint uVar3;\n  long **pplVar4;\n  long lVar5;\n  long lVar6;\n  char cVar7;\n  byte bVar8;\n  uint uVar9;\n  byte bVar10;\n  ulong uVar11;\n  uint uVar12;\n  long lVar13;\n  ulong uVar14;\n  ulong uVar15;\n  uint uVar16;\n  uint uVar17;\n  long lVar18;\n  uint uVar19;\n  ulong uVar20;\n  uint local_6c;\n  int local_68;\n  uint local_48;\n  uint local_40;\n  \n  pplVar4 = (long **)*param_1;\n  lVar5 = **pplVar4;\n  cVar7 = *(char *)(lVar5 + 0x264);\n  if (cVar7 == '\\0') {\n    local_40 = 1;\n  }\n  else {\n    if (cVar7 != '\\x01') {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar5,\"unknown interlace type\");\n    }\n    local_40 = 7;\n  }\n  uVar2 = *(uint *)(pplVar4 + 2);\n  lVar6 = param_1[7];\n  uVar3 = *(uint *)((long)pplVar4 + 0xc);\n  if ((*(byte *)((long)pplVar4 + 0x14) & 2) == 0) {\n    local_6c = 1;\n    uVar12 = uVar3;\n  }\n  else {\n    local_6c = 3;\n    uVar12 = uVar3 * 3;\n  }\n  uVar19 = 0;\n  do {\n    uVar16 = uVar19 + 1;\n    if (cVar7 == '\\x01') {\n      uVar17 = (uVar19 & 1) << (3U - (char)((int)uVar16 >> 1) & 0x1f);\n      if (uVar19 < 2) {\n        bVar10 = 3;\n        uVar9 = ~uVar17 & 7;\n      }\n      else {\n        bVar10 = (byte)((int)(8 - uVar16) >> 1);\n        uVar9 = ((1 << (bVar10 & 0x1f)) + -1) - (uVar17 & 7);\n      }\n      if (uVar9 + uVar3 >> (bVar10 & 0x1f) != 0) {\n        uVar15 = (ulong)((uVar17 & 7) * local_6c);\n        local_48 = local_6c << ((byte)((int)(8 - uVar16) >> 1) & 0x1f);\n        local_68 = 8;\n        uVar20 = (ulong)((uVar19 & 1 ^ 1) << (3U - (char)((int)uVar19 >> 1) & 0x1f) & 7);\n        if (2 < uVar19) {\n          local_68 = 8 >> ((byte)((int)(uVar19 - 1) >> 1) & 0x1f);\n        }\n        goto LAB_00111d5d;\n      }\n    }\n    else {\n      local_68 = 1;\n      uVar20 = 0;\n      uVar15 = 0;\n      local_48 = local_6c;\nLAB_00111d5d:\n      uVar19 = (uint)uVar20;\n      while (uVar19 < uVar2) {\n        lVar18 = param_1[5];\n        png_read_row(lVar5,lVar18,0);\n        lVar13 = uVar20 * lVar6 + param_1[6];\n        uVar1 = lVar13 + (ulong)uVar12;\n        for (uVar14 = lVar13 + uVar15; uVar14 < uVar1; uVar14 = uVar14 + local_48) {\n          while (bVar10 = *(byte *)(lVar18 + (ulong)local_6c), bVar10 != 0) {\n            uVar11 = 0;\n            do {\n              bVar8 = *(byte *)(lVar18 + uVar11);\n              if (bVar10 != 0xff) {\n                uVar19 = (uint)(ushort)(&DAT_0012a1c0)[*(byte *)(uVar14 + uVar11)] *\n                         (0xff - (uint)bVar10) + ((uint)bVar8 * 0x10000 - (uint)bVar8);\n                uVar17 = uVar19 >> 0xf;\n                bVar8 = (byte)(((uVar19 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar17] >> 0xc) +\n                               (uint)(ushort)(&DAT_00129dc0)[uVar17] >> 8);\n              }\n              *(byte *)(uVar14 + uVar11) = bVar8;\n              uVar11 = uVar11 + 1;\n            } while (uVar11 != local_6c);\n            uVar14 = uVar14 + local_48;\n            lVar18 = lVar18 + (ulong)(local_6c + 1);\n            if (uVar1 <= uVar14) goto LAB_00111e60;\n          }\n          lVar18 = lVar18 + (ulong)(local_6c + 1);\n        }\nLAB_00111e60:\n        uVar19 = (int)uVar20 + local_68;\n        uVar20 = (ulong)uVar19;\n      }\n    }\n    if (local_40 == uVar16) {\n      return 1;\n    }\n    cVar7 = *(char *)(lVar5 + 0x264);\n    uVar19 = uVar16;\n  } while( true );\n}\n\n", "FUN_00111f30": "\nundefined4 FUN_00111f30(long **param_1)\n\n{\n  long **pplVar1;\n  long lVar2;\n  long lVar3;\n  undefined4 uVar4;\n  undefined8 uVar5;\n  int iVar6;\n  long *plVar7;\n  long *plVar8;\n  int iVar9;\n  \n  iVar9 = 0;\n  pplVar1 = (long **)*param_1;\n  lVar2 = **pplVar1;\n  lVar3 = (*pplVar1)[1];\n  FUN_0010e6a0(lVar2);\n  if (*(int *)(param_1 + 9) == 0) {\n    iVar9 = png_set_interlace_handling(lVar2);\n  }\n  png_read_update_info(lVar2,lVar3);\n  iVar6 = *(int *)(param_1 + 9);\n  if (iVar6 == 3) {\n    if (((*(short *)(lVar3 + 0x24) == 0x208) && (*(int *)(lVar2 + 0x2a4) == 220000)) &&\n       (*(int *)((long)pplVar1 + 0x1c) == 0xd8)) goto LAB_00112003;\n  }\n  else if (iVar6 < 4) {\n    if (iVar6 == 0) {\n      if (((*(char *)(lVar3 + 0x25) == '\\x03') || (*(char *)(lVar3 + 0x25) == '\\0')) &&\n         (*(char *)(lVar3 + 0x24) == '\\b')) goto LAB_00112003;\n    }\n    else if ((((iVar6 - 1U < 2) && (*(short *)(lVar3 + 0x24) == 0x408)) &&\n             (*(int *)(lVar2 + 0x2a4) == 220000)) && (*(int *)((long)pplVar1 + 0x1c) == 0x100)) {\nLAB_00112003:\n      plVar8 = (long *)(long)*(int *)(param_1 + 2);\n      plVar7 = param_1[1];\n      if ((long)plVar8 < 0) {\n        plVar7 = (long *)((long)plVar7 - (ulong)(*(int *)(pplVar1 + 2) - 1) * (long)plVar8);\n      }\n      param_1[6] = plVar7;\n      param_1[7] = plVar8;\n      if (iVar9 == 0) {\n        uVar5 = png_get_rowbytes(lVar2,lVar3);\n        plVar7 = (long *)png_malloc(lVar2,uVar5);\n        param_1[5] = plVar7;\n        uVar4 = FUN_0010b820(pplVar1,FUN_00112150,param_1);\n        param_1[5] = (long *)0x0;\n        png_free(lVar2,plVar7);\n      }\n      else {\n        iVar9 = iVar9 + -1;\n        if (-1 < iVar9) {\n          while( true ) {\n            for (iVar6 = *(int *)(pplVar1 + 2); iVar6 != 0; iVar6 = iVar6 + -1) {\n              png_read_row(lVar2,plVar7,0);\n              plVar7 = (long *)((long)plVar7 + (long)plVar8);\n            }\n            iVar9 = iVar9 + -1;\n            if (iVar9 == -1) break;\n            plVar7 = param_1[6];\n          }\n        }\n        uVar4 = 1;\n      }\n      return uVar4;\n    }\n  }\n  else if (((iVar6 == 4) && (*(short *)(lVar3 + 0x24) == 0x608)) &&\n          ((*(int *)(lVar2 + 0x2a4) == 220000 && (*(int *)((long)pplVar1 + 0x1c) == 0xf4))))\n  goto LAB_00112003;\n                    /* WARNING: Subroutine does not return */\n  png_error(lVar2,\"bad color-map processing (internal error)\");\n}\n\n", "FUN_00112150": "\nundefined8 FUN_00112150(long *param_1)\n\n{\n  long lVar1;\n  byte *pbVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  long **pplVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  char cVar10;\n  uint uVar11;\n  byte *pbVar12;\n  byte bVar13;\n  byte bVar14;\n  uint uVar15;\n  uint uVar16;\n  ulong uVar17;\n  byte bVar19;\n  uint uVar20;\n  byte *pbVar21;\n  int local_78;\n  uint local_48;\n  uint local_3c;\n  ulong uVar18;\n  byte *pbVar22;\n  \n  pplVar6 = (long **)*param_1;\n  lVar7 = **pplVar6;\n  cVar10 = *(char *)(lVar7 + 0x264);\n  if (cVar10 == '\\0') {\n    local_3c = 1;\n  }\n  else {\n    if (cVar10 != '\\x01') {\n                    /* WARNING: Subroutine does not return */\n      png_error(lVar7,\"unknown interlace type\");\n    }\n    local_3c = 7;\n  }\n  uVar3 = *(uint *)(pplVar6 + 2);\n  uVar4 = *(uint *)((long)pplVar6 + 0xc);\n  iVar5 = *(int *)(param_1 + 9);\n  lVar8 = param_1[6];\n  lVar9 = param_1[7];\n  uVar16 = 0;\n  do {\n    uVar20 = uVar16 + 1;\n    if (cVar10 != '\\x01') {\n      local_78 = 1;\n      uVar18 = 0;\n      uVar17 = 0;\n      local_48 = 1;\nLAB_00112240:\n      uVar16 = (uint)uVar18;\njoined_r0x00112258:\n      if (uVar16 < uVar3) {\n        do {\n          pbVar21 = (byte *)param_1[5];\n          lVar1 = lVar8 + uVar18 * lVar9;\n          pbVar2 = (byte *)(lVar1 + (ulong)uVar4);\n          png_read_row(lVar7,pbVar21,0);\n          pbVar12 = (byte *)(uVar17 + lVar1);\n          if (iVar5 == 3) {\n            if (pbVar12 < pbVar2) goto LAB_00112430;\n          }\n          else if (iVar5 < 4) {\n            if (iVar5 == 1) {\n              if (pbVar12 < pbVar2) {\n                do {\n                  bVar13 = *pbVar21;\n                  bVar14 = pbVar21[1];\n                  pbVar21 = pbVar21 + 2;\n                  if (bVar14 < 0xe6) {\n                    bVar19 = 0xe7;\n                    if (0x19 < bVar14) {\n                      bVar19 = (char)((uint)bVar13 * 5 + 0x82 >> 8) + -0x1e +\n                               (char)((ulong)bVar14 * 5 + 0x82 >> 8) * '\\x06';\n                    }\n                  }\n                  else {\n                    bVar19 = (byte)((uint)bVar13 * 0xe7 + 0x80 >> 8);\n                  }\n                  *pbVar12 = bVar19;\n                  pbVar12 = pbVar12 + local_48;\n                } while (pbVar12 < pbVar2);\n              }\n            }\n            else if (iVar5 == 2) {\n              for (; pbVar22 = pbVar21, pbVar12 < pbVar2; pbVar12 = pbVar12 + local_48) {\n                while (pbVar21 = pbVar22 + 2, pbVar22[1] != 0) {\n                  bVar13 = *pbVar22;\n                  if (bVar13 == 0xfe) {\n                    bVar13 = 0xff;\n                  }\n                  *pbVar12 = bVar13;\n                  pbVar12 = pbVar12 + local_48;\n                  pbVar22 = pbVar21;\n                  if (pbVar2 <= pbVar12) goto LAB_001122f8;\n                }\n                *pbVar12 = 0xfe;\n              }\n            }\n          }\n          else if (iVar5 == 4) {\n            for (; pbVar12 < pbVar2; pbVar12 = pbVar12 + local_48) {\n              if (pbVar21[3] < 0xc4) {\n                if (pbVar21[3] < 0x40) {\n                  *pbVar12 = 0xd8;\n                }\n                else {\n                  bVar13 = *pbVar21 & 0x40;\n                  if ((char)*pbVar21 < '\\0') {\n                    bVar14 = 0xe6;\n                    if (bVar13 != 0) {\n                      cVar10 = -0xe;\n                      goto LAB_001123a7;\n                    }\n                  }\n                  else {\n                    bVar14 = 0xd9;\n                    if (bVar13 != 0) {\n                      cVar10 = -0x1b;\nLAB_001123a7:\n                      bVar14 = cVar10 + 1;\n                    }\n                  }\n                  *pbVar12 = bVar14;\n                }\n              }\n              else {\n                *pbVar12 = (char)((uint)pbVar21[2] * 5 + 0x82 >> 8) +\n                           ((char)((uint)pbVar21[1] * 5 + 0x82 >> 8) +\n                           (char)((uint)*pbVar21 * 5 + 0x82 >> 8) * '\\x06') * '\\x06';\n              }\n              pbVar21 = pbVar21 + 4;\n            }\n          }\nLAB_001122f8:\n          uVar16 = (int)uVar18 + local_78;\n          uVar18 = (ulong)uVar16;\n          if (uVar3 <= uVar16) break;\n        } while( true );\n      }\n      goto LAB_00112208;\n    }\n    uVar15 = (uVar16 & 1) << (3U - (char)((int)uVar20 >> 1) & 0x1f);\n    if (uVar16 < 2) {\n      bVar13 = 3;\n      uVar11 = ~uVar15 & 7;\n    }\n    else {\n      bVar13 = (byte)((int)(8 - uVar20) >> 1);\n      uVar11 = ((1 << (bVar13 & 0x1f)) + -1) - (uVar15 & 7);\n    }\n    if (uVar11 + uVar4 >> (bVar13 & 0x1f) != 0) {\n      uVar17 = (ulong)(uVar15 & 7);\n      local_48 = 1 << ((byte)((int)(8 - uVar20) >> 1) & 0x1f);\n      local_78 = 8;\n      uVar18 = (ulong)((uVar16 & 1 ^ 1) << (3U - (char)((int)uVar16 >> 1) & 0x1f) & 7);\n      if (2 < uVar16) {\n        local_78 = 8 >> ((byte)((int)(uVar16 - 1) >> 1) & 0x1f);\n      }\n      goto LAB_00112240;\n    }\nLAB_00112208:\n    if (local_3c == uVar20) {\n      return 1;\n    }\n    cVar10 = *(char *)(lVar7 + 0x264);\n    uVar16 = uVar20;\n  } while( true );\nLAB_00112430:\n  do {\n    *pbVar12 = (char)((uint)pbVar21[2] * 5 + 0x82 >> 8) +\n               ((char)((uint)pbVar21[1] * 5 + 0x82 >> 8) +\n               (char)((uint)*pbVar21 * 5 + 0x82 >> 8) * '\\x06') * '\\x06';\n    pbVar12 = pbVar12 + local_48;\n    pbVar21 = pbVar21 + 3;\n  } while (pbVar12 < pbVar2);\n  uVar16 = (int)uVar18 + local_78;\n  uVar18 = (ulong)uVar16;\n  goto joined_r0x00112258;\n}\n\n", "png_read_rows": "\nvoid png_read_rows(long param_1,undefined8 *param_2,undefined8 *param_3,int param_4)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != (undefined8 *)0x0) {\n    if (param_3 != (undefined8 *)0x0) {\n      if (param_4 == 0) {\n        return;\n      }\n      puVar1 = param_2 + (ulong)(param_4 - 1) + 1;\n      do {\n        uVar2 = *param_3;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        param_3 = param_3 + 1;\n        png_read_row(param_1,uVar3,uVar2);\n      } while (puVar1 != param_2);\n      return;\n    }\n    if (param_2 != (undefined8 *)0x0) {\n      if (param_4 == 0) {\n        return;\n      }\n      puVar1 = param_2 + (ulong)(param_4 - 1) + 1;\n      do {\n        uVar2 = *param_2;\n        param_2 = param_2 + 1;\n        png_read_row(param_1,uVar2,0);\n      } while (puVar1 != param_2);\n      return;\n    }\n  }\n  if ((param_3 != (undefined8 *)0x0) && (param_4 != 0)) {\n    puVar1 = param_3 + (ulong)(param_4 - 1) + 1;\n    do {\n      uVar2 = *param_3;\n      param_3 = param_3 + 1;\n      png_read_row(param_1,0,uVar2);\n    } while (param_3 != puVar1);\n  }\n  return;\n}\n\n", "png_read_end": "\nvoid png_read_end(long param_1,long param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  iVar2 = FUN_001077c0(param_1,0x49444154);\n  if (iVar2 == 0) {\n    FUN_0011e7b0(param_1);\n    cVar1 = *(char *)(param_1 + 0x267);\n  }\n  else {\n    cVar1 = *(char *)(param_1 + 0x267);\n  }\n  if ((cVar1 == '\\x03') &&\n     (*(uint *)(param_1 + 0x25c) != (uint)*(ushort *)(param_1 + 600) &&\n      (int)(uint)*(ushort *)(param_1 + 600) <= (int)*(uint *)(param_1 + 0x25c))) {\n    png_benign_error(param_1,\"Read palette index exceeding num_palette\");\n  }\n  do {\n    iVar3 = FUN_0011d820(param_1);\n    iVar2 = *(int *)(param_1 + 0x218);\n    if (iVar2 == 0x49444154) {\nLAB_001127a3:\n      if (param_2 == 0) {\nLAB_00112838:\n        FUN_00119dc0(param_1);\n        uVar5 = *(uint *)(param_1 + 300);\n      }\n      else {\n        iVar4 = FUN_001077c0(param_1,iVar2);\n        if (iVar4 == 0) {\n          if (iVar2 == 0x49444154) {\n            if ((iVar3 == 0) || ((*(byte *)(param_1 + 0x130) & 8) != 0)) {\n              if ((*(byte *)(param_1 + 0x12d) & 0x20) != 0) {\n                png_benign_error(param_1);\n              }\n            }\n            else {\n              png_benign_error(param_1);\n            }\n            goto LAB_00112838;\n          }\n          if (iVar2 == 0x504c5445) {\n            FUN_0011a760(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x624b4744) {\n            FUN_0011bd80(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x6348524d) {\n            FUN_0011add0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x65584966) {\n            FUN_0011c040(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x67414d41) {\n            FUN_0011aab0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x68495354) {\n            FUN_0011c240(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x6f464673) {\n            FUN_0011c520(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x7043414c) {\n            FUN_0011c6b0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x7343414c) {\n            FUN_0011c9f0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x70485973) {\n            FUN_0011c3c0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x73424954) {\n            FUN_0011aba0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x73524742) {\n            FUN_0011aff0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x69434350) {\n            FUN_0011b110(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x73504c54) {\n            FUN_0011b820(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x74455874) {\n            FUN_0011cd90(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x74494d45) {\n            FUN_0011cc80(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x74524e53) {\n            FUN_0011bb10(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar2 == 0x7a545874) {\n            FUN_0011cf40(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n          else {\n            if (iVar2 != 0x69545874) goto LAB_00112a15;\n            FUN_0011d1c0(param_1,param_2,iVar3);\n            uVar5 = *(uint *)(param_1 + 300);\n          }\n        }\n        else if (iVar2 == 0x49444154) {\n          if (((iVar3 != 0) && ((*(byte *)(param_1 + 0x130) & 8) == 0)) ||\n             ((*(byte *)(param_1 + 0x12d) & 0x20) != 0)) {\n            png_benign_error(param_1,\".Too many IDATs found\");\n          }\nLAB_00112a15:\n          FUN_0011d520(param_1,param_2,iVar3);\n          uVar5 = *(uint *)(param_1 + 300);\n        }\n        else {\n          FUN_0011d520(param_1,param_2,iVar3);\n          uVar5 = *(uint *)(param_1 + 300);\n          if (iVar2 == 0x504c5445) {\n            uVar5 = uVar5 | 2;\n            *(uint *)(param_1 + 300) = uVar5;\n          }\n        }\n      }\n    }\n    else {\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x2000;\n      if (iVar2 == 0x49454e44) {\n        FUN_0011aa40(param_1,param_2,iVar3);\n        uVar5 = *(uint *)(param_1 + 300);\n      }\n      else {\n        if (iVar2 != 0x49484452) goto LAB_001127a3;\n        FUN_0011a560(param_1,param_2,iVar3);\n        uVar5 = *(uint *)(param_1 + 300);\n      }\n    }\n    if ((uVar5 & 0x10) != 0) {\n      return;\n    }\n  } while( true );\n}\n\n", "FUN_00112e70": "\nundefined8 FUN_00112e70(long **param_1)\n\n{\n  undefined8 uVar1;\n  long *plVar2;\n  ulong uVar3;\n  undefined8 *puVar4;\n  long in_FS_OFFSET;\n  byte bVar5;\n  long local_20;\n  long local_18;\n  long local_10;\n  \n  bVar5 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*param_1 == (long *)0x0) {\n    local_20 = png_create_read_struct(&DAT_0012902e,param_1,FUN_0010b760,FUN_0010b7e0);\n    *param_1 = (long *)0x0;\n    param_1[0xc] = (long *)0x0;\n    puVar4 = (undefined8 *)((ulong)(param_1 + 1) & 0xfffffffffffffff8);\n    for (uVar3 = (ulong)(((int)param_1 -\n                         (int)(undefined8 *)((ulong)(param_1 + 1) & 0xfffffffffffffff8)) + 0x68U >>\n                        3); uVar3 != 0; uVar3 = uVar3 - 1) {\n      *puVar4 = 0;\n      puVar4 = puVar4 + (ulong)bVar5 * -2 + 1;\n    }\n    *(undefined4 *)(param_1 + 1) = 1;\n    if (local_20 != 0) {\n      local_18 = png_create_info_struct(local_20);\n      if (local_18 != 0) {\n        plVar2 = (long *)png_malloc_warn(local_20,0x30);\n        if (plVar2 != (long *)0x0) {\n          *param_1 = plVar2;\n          *(undefined (*) [16])(plVar2 + 4) = (undefined  [16])0x0;\n          *plVar2 = local_20;\n          *(byte *)(plVar2 + 5) = *(byte *)(plVar2 + 5) & 0xfe;\n          plVar2[1] = local_18;\n          *(undefined (*) [16])(plVar2 + 2) = (undefined  [16])0x0;\n          uVar1 = 1;\n          goto LAB_00112e9a;\n        }\n        png_destroy_info_struct(local_20,&local_18);\n      }\n      png_destroy_read_struct(&local_20,0,0);\n    }\n    uVar1 = FUN_0010ac60(param_1,\"png_image_read: out of memory\");\n  }\n  else {\n    uVar1 = FUN_0010ac60(param_1,\"png_image_read: opaque pointer not NULL\");\n  }\nLAB_00112e9a:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_read_status_fn": "\nvoid png_set_read_status_fn(long param_1,undefined8 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x300) = param_2;\n  }\n  return;\n}\n\n", "png_read_png": "\nvoid png_read_png(long param_1,long param_2,ulong param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  undefined8 *puVar7;\n  undefined8 *puVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  ulong uVar11;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 0) {\n    return;\n  }\n  png_read_info();\n  if (0x1fffffff < *(uint *)(param_2 + 4)) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Image is too high to process with png_read_png()\");\n  }\n  if ((param_3 & 0x8000) != 0) {\n    png_set_scale_16(param_1);\n  }\n  if ((param_3 & 1) != 0) {\n    png_set_strip_16(param_1);\n  }\n  if ((param_3 & 2) != 0) {\n    png_set_strip_alpha(param_1);\n  }\n  if ((param_3 & 4) != 0) {\n    png_set_packing(param_1);\n  }\n  if ((param_3 & 8) != 0) {\n    png_set_packswap(param_1);\n  }\n  if ((param_3 & 0x10) != 0) {\n    png_set_expand(param_1);\n  }\n  if ((param_3 & 0x20) != 0) {\n    png_set_invert_mono(param_1);\n  }\n  if (((param_3 & 0x40) != 0) && ((*(byte *)(param_2 + 8) & 2) != 0)) {\n    png_set_shift(param_1,param_2 + 0xb0);\n  }\n  if ((param_3 & 0x80) != 0) {\n    png_set_bgr(param_1);\n  }\n  if ((param_3 & 0x100) != 0) {\n    png_set_swap_alpha(param_1);\n  }\n  if ((param_3 & 0x200) != 0) {\n    png_set_swap(param_1);\n  }\n  if ((param_3 & 0x400) != 0) {\n    png_set_invert_alpha(param_1);\n  }\n  if ((param_3 & 0x2000) != 0) {\n    png_set_gray_to_rgb(param_1);\n  }\n  if ((param_3 & 0x4000) != 0) {\n    png_set_expand_16(param_1);\n  }\n  png_set_interlace_handling(param_1);\n  png_read_update_info(param_1,param_2);\n  png_free_data(param_1,param_2,0x40);\n  if (*(long *)(param_2 + 0x160) == 0) {\n    puVar7 = (undefined8 *)png_malloc(param_1,(ulong)*(uint *)(param_2 + 4) << 3);\n    iVar3 = *(int *)(param_2 + 4);\n    *(undefined8 **)(param_2 + 0x160) = puVar7;\n    if (iVar3 == 0) {\n      *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x40;\n    }\n    else {\n      puVar8 = puVar7;\n      do {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n      } while (puVar7 + (ulong)(iVar3 - 1) + 1 != puVar8);\n      *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x40;\n      uVar11 = 0;\n      do {\n        uVar10 = (int)uVar11 + 1;\n        puVar8 = puVar7 + uVar11;\n        uVar9 = png_malloc(param_1,*(undefined8 *)(param_2 + 0x10));\n        uVar6 = *(uint *)(param_2 + 4);\n        uVar2 = *(uint *)(param_2 + 4);\n        puVar7 = *(undefined8 **)(param_2 + 0x160);\n        *puVar8 = uVar9;\n        uVar11 = (ulong)uVar10;\n      } while (uVar10 <= uVar6 && uVar2 != uVar10);\n    }\n  }\n  png_read_image(param_1);\n  *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x8000;\n  if (param_1 == 0) {\n    return;\n  }\n  iVar3 = FUN_001077c0(param_1,0x49444154);\n  if (iVar3 == 0) {\n    FUN_0011e7b0(param_1);\n    cVar1 = *(char *)(param_1 + 0x267);\n  }\n  else {\n    cVar1 = *(char *)(param_1 + 0x267);\n  }\n  if ((cVar1 == '\\x03') &&\n     (*(uint *)(param_1 + 0x25c) != (uint)*(ushort *)(param_1 + 600) &&\n      (int)(uint)*(ushort *)(param_1 + 600) <= (int)*(uint *)(param_1 + 0x25c))) {\n    png_benign_error(param_1,\"Read palette index exceeding num_palette\");\n  }\n  do {\n    iVar4 = FUN_0011d820(param_1);\n    iVar3 = *(int *)(param_1 + 0x218);\n    if (iVar3 == 0x49444154) {\nLAB_001127a3:\n      if (param_2 == 0) {\nLAB_00112838:\n        FUN_00119dc0(param_1);\n        uVar6 = *(uint *)(param_1 + 300);\n      }\n      else {\n        iVar5 = FUN_001077c0(param_1,iVar3);\n        if (iVar5 == 0) {\n          if (iVar3 == 0x49444154) {\n            if ((iVar4 == 0) || ((*(byte *)(param_1 + 0x130) & 8) != 0)) {\n              if ((*(byte *)(param_1 + 0x12d) & 0x20) != 0) {\n                png_benign_error(param_1);\n              }\n            }\n            else {\n              png_benign_error(param_1);\n            }\n            goto LAB_00112838;\n          }\n          if (iVar3 == 0x504c5445) {\n            FUN_0011a760(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x624b4744) {\n            FUN_0011bd80(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x6348524d) {\n            FUN_0011add0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x65584966) {\n            FUN_0011c040(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x67414d41) {\n            FUN_0011aab0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x68495354) {\n            FUN_0011c240(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x6f464673) {\n            FUN_0011c520(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x7043414c) {\n            FUN_0011c6b0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x7343414c) {\n            FUN_0011c9f0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x70485973) {\n            FUN_0011c3c0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x73424954) {\n            FUN_0011aba0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x73524742) {\n            FUN_0011aff0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x69434350) {\n            FUN_0011b110(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x73504c54) {\n            FUN_0011b820(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x74455874) {\n            FUN_0011cd90(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x74494d45) {\n            FUN_0011cc80(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x74524e53) {\n            FUN_0011bb10(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else if (iVar3 == 0x7a545874) {\n            FUN_0011cf40(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n          else {\n            if (iVar3 != 0x69545874) goto LAB_00112a15;\n            FUN_0011d1c0(param_1,param_2,iVar4);\n            uVar6 = *(uint *)(param_1 + 300);\n          }\n        }\n        else if (iVar3 == 0x49444154) {\n          if (((iVar4 != 0) && ((*(byte *)(param_1 + 0x130) & 8) == 0)) ||\n             ((*(byte *)(param_1 + 0x12d) & 0x20) != 0)) {\n            png_benign_error(param_1,\".Too many IDATs found\");\n          }\nLAB_00112a15:\n          FUN_0011d520(param_1,param_2,iVar4);\n          uVar6 = *(uint *)(param_1 + 300);\n        }\n        else {\n          FUN_0011d520(param_1,param_2,iVar4);\n          uVar6 = *(uint *)(param_1 + 300);\n          if (iVar3 == 0x504c5445) {\n            uVar6 = uVar6 | 2;\n            *(uint *)(param_1 + 300) = uVar6;\n          }\n        }\n      }\n    }\n    else {\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x2000;\n      if (iVar3 == 0x49454e44) {\n        FUN_0011aa40(param_1,param_2,iVar4);\n        uVar6 = *(uint *)(param_1 + 300);\n      }\n      else {\n        if (iVar3 != 0x49484452) goto LAB_001127a3;\n        FUN_0011a560(param_1,param_2,iVar4);\n        uVar6 = *(uint *)(param_1 + 300);\n      }\n    }\n    if ((uVar6 & 0x10) != 0) {\n      return;\n    }\n  } while( true );\n}\n\n", "png_image_begin_read_from_stdio": "\nundefined8 png_image_begin_read_from_stdio(long **param_1,long param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  if (param_1 == (long **)0x0) {\n    return 0;\n  }\n  if (*(int *)(param_1 + 1) != 1) {\n    uVar2 = FUN_0010ac60(param_1,\"png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION\");\n    return uVar2;\n  }\n  if (param_2 == 0) {\n    uVar2 = FUN_0010ac60(param_1,\"png_image_begin_read_from_stdio: invalid argument\");\n    return uVar2;\n  }\n  iVar1 = FUN_00112e70();\n  if (iVar1 == 0) {\n    return 0;\n  }\n  *(long *)(**param_1 + 0x108) = param_2;\n  uVar2 = FUN_0010b820(param_1,FUN_001108e0,param_1);\n  return uVar2;\n}\n\n", "png_image_begin_read_from_file": "\nundefined8 png_image_begin_read_from_file(long **param_1,char *param_2)\n\n{\n  long *plVar1;\n  int iVar2;\n  undefined8 uVar3;\n  FILE *__stream;\n  int *piVar4;\n  char *pcVar5;\n  \n  if (param_1 == (long **)0x0) {\n    return 0;\n  }\n  if (*(int *)(param_1 + 1) == 1) {\n    if (param_2 == (char *)0x0) {\n      pcVar5 = \"png_image_begin_read_from_file: invalid argument\";\n    }\n    else {\n      __stream = fopen(param_2,\"rb\");\n      if (__stream != (FILE *)0x0) {\n        iVar2 = FUN_00112e70(param_1);\n        if (iVar2 == 0) {\n          fclose(__stream);\n          return 0;\n        }\n        plVar1 = *param_1;\n        *(FILE **)(*plVar1 + 0x108) = __stream;\n        plVar1 = plVar1 + 5;\n        *(byte *)plVar1 = *(byte *)plVar1 | 2;\n        uVar3 = FUN_0010b820(param_1,FUN_001108e0,param_1);\n        return uVar3;\n      }\n      piVar4 = __errno_location();\n      pcVar5 = strerror(*piVar4);\n    }\n  }\n  else {\n    pcVar5 = \"png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION\";\n  }\n  uVar3 = FUN_0010ac60(param_1,pcVar5);\n  return uVar3;\n}\n\n", "png_image_begin_read_from_memory": "\nundefined8 png_image_begin_read_from_memory(long **param_1,long param_2,long param_3)\n\n{\n  long *plVar1;\n  long lVar2;\n  int iVar3;\n  undefined8 uVar4;\n  \n  if (param_1 == (long **)0x0) {\n    return 0;\n  }\n  if (*(int *)(param_1 + 1) != 1) {\n    uVar4 = FUN_0010ac60(param_1,\"png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION\");\n    return uVar4;\n  }\n  if ((param_2 != 0) && (param_3 != 0)) {\n    iVar3 = FUN_00112e70();\n    if (iVar3 == 0) {\n      return 0;\n    }\n    plVar1 = *param_1;\n    plVar1[3] = param_2;\n    plVar1[4] = param_3;\n    lVar2 = *plVar1;\n    *(long ***)(lVar2 + 0x108) = param_1;\n    *(code **)(lVar2 + 0x100) = FUN_0010e610;\n    uVar4 = FUN_0010b820(param_1,FUN_001108e0,param_1);\n    return uVar4;\n  }\n  uVar4 = FUN_0010ac60(param_1,\"png_image_begin_read_from_memory: invalid argument\");\n  return uVar4;\n}\n\n", "png_image_finish_read": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong png_image_finish_read(long *param_1,undefined8 param_2,long param_3,uint param_4,long param_5)\n\n{\n  uint uVar1;\n  ulong uVar2;\n  int iVar3;\n  ulong uVar4;\n  uint uVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  long *local_78;\n  long local_70;\n  undefined local_68 [16];\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined local_48 [16];\n  undefined local_38 [16];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = 0;\n  if (param_1 == (long *)0x0) goto LAB_001134e7;\n  uVar6 = *(uint *)(param_1 + 1);\n  if (uVar6 != 1) {\n    uVar4 = FUN_0010ac60(param_1,\"png_image_finish_read: damaged PNG_IMAGE_VERSION\");\n    goto LAB_001134e7;\n  }\n  uVar1 = *(uint *)((long)param_1 + 0x14);\n  uVar5 = 0x7fffffff;\n  if ((uVar1 & 8) == 0) {\n    uVar6 = (uVar1 & 3) + 1;\n    uVar5 = (uint)(0x7fffffff / (ulong)uVar6);\n  }\n  if (uVar5 < *(uint *)((long)param_1 + 0xc)) {\n    uVar4 = FUN_0010ac60(param_1,\"png_image_finish_read: row_stride too large\");\n    goto LAB_001134e7;\n  }\n  uVar6 = uVar6 * *(uint *)((long)param_1 + 0xc);\n  if (param_4 == 0) {\n    param_4 = uVar6;\n  }\n  uVar5 = ((int)param_4 >> 0x1f ^ param_4) - ((int)param_4 >> 0x1f);\n  if (((*param_1 == 0) || (param_3 == 0)) || (uVar5 < uVar6)) {\n    uVar4 = FUN_0010ac60(param_1,\"png_image_finish_read: invalid argument\");\n    goto LAB_001134e7;\n  }\n  if ((uVar1 & 8) == 0) {\n    uVar2 = 0xffffffff / (ulong)((uVar1 >> 2 & 1) + 1);\n    uVar4 = uVar2 % (ulong)uVar5;\n    if (*(uint *)(param_1 + 2) <= (uint)(uVar2 / uVar5)) {\n      local_68._4_12_ = SUB1612((undefined  [16])0x0 >> 0x20,0);\n      local_68 = CONCAT124(local_68._4_12_,param_4);\n      local_68 = CONCAT88(param_5,local_68._0_8_);\n      local_50 = 0;\n      local_48 = (undefined  [16])0x0;\n      local_38 = (undefined  [16])0x0;\n      local_78 = param_1;\n      local_70 = param_3;\n      local_58 = param_2;\n      uVar6 = FUN_0010b820(0,param_1,FUN_00110f20,&local_78);\nLAB_0011362d:\n      uVar4 = (ulong)uVar6;\n      png_image_free(param_1);\n      goto LAB_001134e7;\n    }\n  }\n  else {\n    uVar6 = (uint)((ulong)*(uint *)(param_1 + 2) * (ulong)uVar5 >> 0x20);\n    uVar4 = (ulong)uVar6;\n    if (uVar6 == 0) {\n      if ((*(int *)((long)param_1 + 0x1c) == 0) || (param_5 == 0)) {\n        uVar4 = FUN_0010ac60(param_1,\"png_image_finish_read[color-map]: no color-map\");\n        goto LAB_001134e7;\n      }\n      local_68._4_12_ = SUB1612((undefined  [16])0x0 >> 0x20,0);\n      local_68 = CONCAT124(local_68._4_12_,param_4);\n      local_68 = CONCAT88(param_5,local_68._0_8_);\n      local_50 = 0;\n      local_48 = (undefined  [16])0x0;\n      local_38 = (undefined  [16])0x0;\n      local_78 = param_1;\n      local_70 = param_3;\n      local_58 = param_2;\n      uVar6 = FUN_0010b820(0,param_1,FUN_0010f100,&local_78);\n      if (uVar6 != 0) {\n        iVar3 = FUN_0010b820(param_1,FUN_00111f30,&local_78);\n        uVar6 = (uint)(iVar3 != 0);\n      }\n      goto LAB_0011362d;\n    }\n  }\n  uVar4 = FUN_0010ac60(param_1,\"png_image_finish_read: image too large\",uVar4);\nLAB_001134e7:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001136f0": "\nvoid FUN_001136f0(long param_1,void *param_2,size_t param_3)\n\n{\n  size_t sVar1;\n  \n  if (param_1 != 0) {\n    sVar1 = fread(param_2,1,param_3,*(FILE **)(param_1 + 0x108));\n    if (param_3 != sVar1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Read Error\");\n    }\n  }\n  return;\n}\n\n", "FUN_00113740": "\nvoid FUN_00113740(long param_1)\n\n{\n  if (*(code **)(param_1 + 0x100) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00113750. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x100))();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Call to NULL read function\");\n}\n\n", "FUN_001137d0": "\nvoid FUN_001137d0(uint *param_1,long param_2)\n\n{\n  undefined *puVar1;\n  uint uVar2;\n  char cVar3;\n  ulong uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  byte bVar8;\n  byte bVar9;\n  \n  bVar8 = *(byte *)((long)param_1 + 0x11);\n  if (bVar8 < 8) {\n    return;\n  }\n  bVar9 = *(byte *)(param_1 + 4);\n  if ((bVar9 & 2) != 0) {\n    return;\n  }\n  uVar2 = *param_1;\n  uVar4 = (ulong)uVar2;\n  if (bVar9 == 0) {\n    if (bVar8 == 8) {\n      puVar1 = (undefined *)(param_2 + -1 + uVar4);\n      if (uVar2 == 0) goto LAB_0011386e;\n      puVar5 = puVar1;\n      puVar7 = puVar1 + uVar4 * 2;\n      do {\n        puVar6 = puVar5 + -1;\n        *puVar7 = *puVar5;\n        puVar7[-1] = *puVar5;\n        puVar7[-2] = *puVar5;\n        puVar5 = puVar6;\n        puVar7 = puVar7 + -3;\n      } while (puVar6 != puVar1 + ~(ulong)(uVar2 - 1));\n    }\n    else {\n      puVar1 = (undefined *)(param_2 + -1 + uVar4 * 2);\n      if (uVar2 == 0) goto LAB_0011386e;\n      puVar5 = puVar1 + uVar4 * 4;\n      puVar7 = puVar1;\n      do {\n        puVar6 = puVar7 + -2;\n        *puVar5 = *puVar7;\n        puVar5[-1] = puVar7[-1];\n        puVar5[-2] = *puVar7;\n        puVar5[-3] = puVar7[-1];\n        puVar5[-4] = *puVar7;\n        puVar5[-5] = puVar7[-1];\n        puVar5 = puVar5 + -6;\n        puVar7 = puVar6;\n      } while (puVar6 != puVar1 + ~(ulong)(uVar2 - 1) * 2);\n    }\n  }\n  else {\n    if (bVar9 != 4) goto LAB_0011386e;\n    if (bVar8 == 8) {\n      puVar1 = (undefined *)(param_2 + -1 + uVar4 * 2);\n      if (uVar2 == 0) goto LAB_0011386e;\n      puVar5 = puVar1;\n      puVar7 = puVar1 + uVar4 * 2;\n      do {\n        puVar6 = puVar5 + -2;\n        *puVar7 = *puVar5;\n        puVar7[-1] = puVar5[-1];\n        puVar7[-2] = puVar5[-1];\n        puVar7[-3] = puVar5[-1];\n        puVar5 = puVar6;\n        puVar7 = puVar7 + -4;\n      } while (puVar6 != puVar1 + ~(ulong)(uVar2 - 1) * 2);\n    }\n    else {\n      puVar1 = (undefined *)(param_2 + -1 + uVar4 * 4);\n      if (uVar2 == 0) goto LAB_0011386e;\n      puVar5 = puVar1;\n      puVar7 = puVar1 + uVar4 * 4;\n      do {\n        puVar6 = puVar5 + -4;\n        *puVar7 = *puVar5;\n        puVar7[-1] = puVar5[-1];\n        puVar7[-2] = puVar5[-2];\n        puVar7[-3] = puVar5[-3];\n        puVar7[-4] = puVar5[-2];\n        puVar7[-5] = puVar5[-3];\n        puVar7[-6] = puVar5[-2];\n        puVar7[-7] = puVar5[-3];\n        puVar5 = puVar6;\n        puVar7 = puVar7 + -8;\n      } while (puVar1 + ~(ulong)(uVar2 - 1) * 4 != puVar6);\n    }\n  }\n  bVar9 = *(byte *)(param_1 + 4);\n  bVar8 = *(byte *)((long)param_1 + 0x11);\nLAB_0011386e:\n  *(byte *)(param_1 + 4) = bVar9 | 2;\n  cVar3 = *(char *)((long)param_1 + 0x12) + '\\x02';\n  *(char *)((long)param_1 + 0x12) = cVar3;\n  bVar8 = cVar3 * bVar8;\n  *(byte *)((long)param_1 + 0x13) = bVar8;\n  if (bVar8 < 8) {\n    uVar4 = bVar8 * uVar4 + 7 >> 3;\n  }\n  else {\n    uVar4 = (bVar8 >> 3) * uVar4;\n  }\n  *(ulong *)(param_1 + 2) = uVar4;\n  return;\n}\n\n", "FUN_001139d0": "\nvoid FUN_001139d0(uint *param_1,long param_2,long param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  char cVar3;\n  ushort uVar4;\n  ushort uVar5;\n  uint uVar6;\n  byte bVar7;\n  ulong uVar8;\n  undefined *puVar9;\n  char *pcVar10;\n  undefined *puVar11;\n  undefined *puVar12;\n  byte bVar13;\n  int iVar14;\n  uint uVar15;\n  byte *pbVar16;\n  char *pcVar17;\n  byte *pbVar18;\n  byte *pbVar19;\n  ushort uVar20;\n  char cVar21;\n  uint uVar22;\n  long lVar23;\n  char *pcVar24;\n  char *pcVar25;\n  \n  uVar6 = *param_1;\n  if (*(char *)(param_1 + 4) != '\\0') {\n    if (param_3 == 0) {\n      return;\n    }\n    if (*(char *)(param_1 + 4) != '\\x02') {\n      return;\n    }\n    bVar7 = *(byte *)((long)param_1 + 0x11);\n    uVar8 = (ulong)uVar6;\n    if (bVar7 == 8) {\n      cVar1 = *(char *)(param_3 + 2);\n      cVar2 = *(char *)(param_3 + 4);\n      cVar3 = *(char *)(param_3 + 6);\n      pcVar24 = (char *)(param_2 + -1 + uVar8 * 4);\n      if (uVar6 != 0) {\n        pcVar25 = pcVar24;\n        pcVar17 = (char *)(param_2 + -1 + *(long *)(param_1 + 2));\n        do {\n          cVar21 = -1;\n          if ((pcVar17[-2] == cVar1) && (pcVar17[-1] == cVar2)) {\n            cVar21 = -(*pcVar17 != cVar3);\n          }\n          *pcVar25 = cVar21;\n          pcVar10 = pcVar25 + -4;\n          pcVar25[-1] = *pcVar17;\n          pcVar25[-2] = pcVar17[-1];\n          pcVar25[-3] = pcVar17[-2];\n          pcVar25 = pcVar10;\n          pcVar17 = pcVar17 + -3;\n        } while (pcVar10 != pcVar24 + ~(ulong)(uVar6 - 1) * 4);\n        goto LAB_00113e30;\n      }\nLAB_00113be0:\n      bVar13 = bVar7 << 2;\n      *(undefined *)(param_1 + 4) = 6;\n      *(undefined *)((long)param_1 + 0x12) = 4;\n      *(byte *)((long)param_1 + 0x13) = bVar13;\n    }\n    else {\n      if (bVar7 == 0x10) {\n        uVar20 = *(ushort *)(param_3 + 2);\n        uVar4 = *(ushort *)(param_3 + 4);\n        uVar5 = *(ushort *)(param_3 + 6);\n        puVar9 = (undefined *)(param_2 + -1 + uVar8 * 8);\n        if (uVar6 == 0) goto LAB_00113be0;\n        puVar12 = puVar9;\n        pcVar24 = (char *)(param_2 + -1 + *(long *)(param_1 + 2));\n        do {\n          if (((((pcVar24[-5] == (char)((ulong)uVar20 >> 8)) && (pcVar24[-4] == (char)uVar20)) &&\n               (pcVar24[-3] == (char)((ulong)uVar4 >> 8))) &&\n              ((pcVar24[-2] == (char)uVar4 && (pcVar24[-1] == (char)((ulong)uVar5 >> 8))))) &&\n             (*pcVar24 == (char)uVar5)) {\n            *puVar12 = 0;\n            puVar12[-1] = 0;\n          }\n          else {\n            *puVar12 = 0xff;\n            puVar12[-1] = 0xff;\n          }\n          puVar11 = puVar12 + -8;\n          puVar12[-2] = *pcVar24;\n          puVar12[-3] = pcVar24[-1];\n          puVar12[-4] = pcVar24[-2];\n          puVar12[-5] = pcVar24[-3];\n          puVar12[-6] = pcVar24[-4];\n          puVar12[-7] = pcVar24[-5];\n          puVar12 = puVar11;\n          pcVar24 = pcVar24 + -6;\n        } while (puVar11 != puVar9 + ~(ulong)(uVar6 - 1) * 8);\nLAB_00113e30:\n        bVar7 = *(byte *)((long)param_1 + 0x11);\n      }\n      *(undefined *)(param_1 + 4) = 6;\n      *(undefined *)((long)param_1 + 0x12) = 4;\n      bVar13 = (byte)((uint)bVar7 << 2);\n      *(byte *)((long)param_1 + 0x13) = bVar13;\n      if (bVar13 < 8) {\n        uVar8 = ((uint)bVar7 << 2 & 0xff) * uVar8 + 7 >> 3;\n        goto LAB_00113af8;\n      }\n    }\n    uVar8 = (bVar13 >> 3) * uVar8;\nLAB_00113af8:\n    *(ulong *)(param_1 + 2) = uVar8;\n    return;\n  }\n  bVar7 = *(byte *)((long)param_1 + 0x11);\n  if (param_3 == 0) {\n    if (7 < bVar7) {\n      return;\n    }\n    if (bVar7 == 2) {\n      uVar20 = 0;\nLAB_00113d1e:\n      uVar22 = uVar6 - 1;\n      uVar8 = (ulong)uVar22;\n      lVar23 = (ulong)uVar6 - 1;\n      pbVar19 = (byte *)(param_2 + lVar23);\n      uVar15 = (uVar6 * 2 + 6 ^ 0xfffffffe) & 6;\n      pbVar18 = (byte *)((ulong)(uVar22 >> 2) + param_2);\n      if (uVar6 != 0) {\n        pbVar16 = pbVar19 + ~(ulong)uVar22;\n        do {\n          uVar22 = (int)(uint)*pbVar18 >> ((byte)uVar15 & 0x1f) & 3;\n          *pbVar19 = (byte)(uVar22 << 6) |\n                     (byte)uVar22 * '\\x04' | (byte)(uVar22 << 4) | (byte)uVar22;\n          if (uVar15 == 6) {\n            pbVar18 = pbVar18 + -1;\n            uVar15 = 0;\n          }\n          else {\n            uVar15 = uVar15 + 2;\n          }\n          pbVar19 = pbVar19 + -1;\n        } while (pbVar19 != pbVar16);\n        goto LAB_00113cd8;\n      }\nLAB_00113f00:\n      *(undefined *)((long)param_1 + 0x11) = 8;\n      *(undefined *)((long)param_1 + 0x13) = 8;\n      *(ulong *)(param_1 + 2) = (ulong)uVar6;\n      if (param_3 == 0) {\n        return;\n      }\n    }\n    else {\n      if (bVar7 != 4) {\n        if (bVar7 != 1) {\n          *(undefined *)((long)param_1 + 0x11) = 8;\n          *(undefined *)((long)param_1 + 0x13) = 8;\n          *(ulong *)(param_1 + 2) = (ulong)uVar6;\n          return;\n        }\n        uVar20 = 0;\nLAB_00113c72:\n        uVar22 = uVar6 - 1;\n        uVar8 = (ulong)uVar22;\n        lVar23 = (ulong)uVar6 - 1;\n        pcVar24 = (char *)(param_2 + lVar23);\n        uVar15 = ~(uVar6 + 7) & 7;\n        pbVar19 = (byte *)((ulong)(uVar22 >> 3) + param_2);\n        if (uVar6 != 0) {\n          pcVar25 = pcVar24 + ~(ulong)uVar22;\n          do {\n            *pcVar24 = -((byte)((int)(uint)*pbVar19 >> ((byte)uVar15 & 0x1f)) & 1);\n            if (uVar15 == 7) {\n              pbVar19 = pbVar19 + -1;\n              uVar15 = 0;\n            }\n            else {\n              uVar15 = uVar15 + 1;\n            }\n            pcVar24 = pcVar24 + -1;\n          } while (pcVar24 != pcVar25);\n          goto LAB_00113cd8;\n        }\n        goto LAB_00113f00;\n      }\n      uVar20 = 0;\nLAB_00113c02:\n      uVar8 = (ulong)(uVar6 - 1);\n      lVar23 = (ulong)uVar6 - 1;\n      pbVar19 = (byte *)(param_2 + lVar23);\n      iVar14 = (uVar6 & 1) << 2;\n      pbVar18 = (byte *)((ulong)(uVar6 - 1 >> 1) + param_2);\n      pbVar16 = pbVar19 + ~uVar8;\n      if (uVar6 == 0) goto LAB_00113f00;\n      do {\n        uVar22 = (int)(uint)*pbVar18 >> (sbyte)iVar14 & 0xf;\n        *pbVar19 = (byte)uVar22 | (byte)(uVar22 << 4);\n        if (iVar14 == 4) {\n          pbVar18 = pbVar18 + -1;\n          iVar14 = 0;\n        }\n        else {\n          iVar14 = 4;\n        }\n        pbVar19 = pbVar19 + -1;\n      } while (pbVar19 != pbVar16);\nLAB_00113cd8:\n      *(undefined *)((long)param_1 + 0x11) = 8;\n      *(undefined *)((long)param_1 + 0x13) = 8;\n      *(ulong *)(param_1 + 2) = (ulong)uVar6;\n      if (param_3 == 0) {\n        return;\n      }\n      pbVar19 = (byte *)(param_2 + lVar23);\n      pcVar24 = (char *)(param_2 + -1 + (ulong)uVar6 * 2);\nLAB_00113a42:\n      pbVar18 = pbVar19;\n      do {\n        pbVar16 = pbVar18 + -1;\n        *pcVar24 = -(*pbVar18 != uVar20);\n        pcVar24[-1] = *pbVar18;\n        pcVar24 = pcVar24 + -2;\n        pbVar18 = pbVar16;\n      } while (pbVar16 != pbVar19 + ~uVar8);\n    }\nLAB_00113a74:\n    bVar7 = *(byte *)((long)param_1 + 0x11);\nLAB_00113a78:\n    uVar8 = (ulong)uVar6;\n    bVar7 = bVar7 * '\\x02';\n    *(undefined *)(param_1 + 4) = 4;\n    *(undefined *)((long)param_1 + 0x12) = 2;\n    *(byte *)((long)param_1 + 0x13) = bVar7;\n    if (bVar7 < 8) {\n      uVar8 = bVar7 * uVar8 + 7 >> 3;\n      goto LAB_00113a9c;\n    }\n  }\n  else {\n    uVar20 = *(ushort *)(param_3 + 8);\n    uVar8 = (ulong)uVar6;\n    if (bVar7 < 8) {\n      if (bVar7 == 2) {\n        uVar20 = (uVar20 & 3) * 0x55;\n        goto LAB_00113d1e;\n      }\n      if (bVar7 == 4) {\n        uVar20 = (uVar20 & 0xf) * 0x11;\n        goto LAB_00113c02;\n      }\n      if (bVar7 == 1) {\n        uVar20 = (uVar20 & 1) * 0xff;\n        goto LAB_00113c72;\n      }\n      *(undefined *)((long)param_1 + 0x11) = 8;\n      *(undefined *)((long)param_1 + 0x13) = 8;\n      *(ulong *)(param_1 + 2) = uVar8;\nLAB_00113a2b:\n      uVar20 = uVar20 & 0xff;\n      pbVar19 = (byte *)(param_2 + -1 + uVar8);\n      pcVar24 = (char *)(param_2 + -1 + uVar8 * 2);\n      if (uVar6 != 0) {\n        uVar8 = (ulong)(uVar6 - 1);\n        goto LAB_00113a42;\n      }\n      goto LAB_00113a74;\n    }\n    if (bVar7 == 8) goto LAB_00113a2b;\n    if (bVar7 != 0x10) goto LAB_00113a78;\n    pbVar19 = (byte *)(param_2 + -1 + *(long *)(param_1 + 2));\n    if (uVar6 != 0) {\n      puVar9 = (undefined *)(param_2 + -1 + *(long *)(param_1 + 2) * 2);\n      pbVar18 = pbVar19;\n      do {\n        if ((uVar20 >> 8 == (ushort)pbVar18[-1]) && ((ushort)*pbVar18 == (uVar20 & 0xff))) {\n          *puVar9 = 0;\n          puVar9[-1] = 0;\n        }\n        else {\n          *puVar9 = 0xff;\n          puVar9[-1] = 0xff;\n        }\n        pbVar16 = pbVar18 + -2;\n        puVar9[-2] = *pbVar18;\n        puVar9[-3] = pbVar18[-1];\n        puVar9 = puVar9 + -4;\n        pbVar18 = pbVar16;\n      } while (pbVar16 != pbVar19 + ~(ulong)(uVar6 - 1) * 2);\n      goto LAB_00113a74;\n    }\n    *(undefined *)(param_1 + 4) = 4;\n    uVar8 = 0;\n    *(undefined2 *)((long)param_1 + 0x12) = 0x2002;\n    bVar7 = 0x20;\n  }\n  uVar8 = (bVar7 >> 3) * uVar8;\nLAB_00113a9c:\n  *(ulong *)(param_1 + 2) = uVar8;\n  return;\n}\n\n", "FUN_00113f30": "\nundefined8 FUN_00113f30(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (param_1 != 0) {\n    if ((*(uint *)(param_1 + 0x130) & 0x40) != 0) {\n      FUN_0010b490(param_1,\"invalid after png_start_read_image or png_read_update_info\");\n      return 0;\n    }\n    if ((param_2 != 0) && ((*(byte *)(param_1 + 300) & 1) == 0)) {\n      FUN_0010b490(param_1,\"invalid before the PNG header has been read\");\n      return 0;\n    }\n    uVar1 = 1;\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x4000;\n  }\n  return uVar1;\n}\n\n", "FUN_00113fa0": "\nulong FUN_00113fa0(double param_1,undefined8 param_2)\n\n{\n  ulong in_RAX;\n  \n  if ((0.0 < param_1) && (param_1 < 128.0)) {\n    param_1 = param_1 * 100000.0;\n  }\n  param_1 = param_1 + 0.5;\n  if (param_1 < 4503599627370496.0) {\n    in_RAX = (ulong)param_1;\n    param_1 = (double)((ulong)param_1 & 0x8000000000000000 |\n                      (ulong)((double)in_RAX -\n                             (double)(-(ulong)(param_1 < (double)in_RAX) & 0x3ff0000000000000)));\n  }\n  if ((param_1 <= 2147483647.0) && (-2147483647.0 <= param_1)) {\n    return in_RAX & 0xffffffff00000000 | (ulong)(uint)(int)param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010b5c0(param_2,\"gamma value\");\n}\n\n", "png_set_crc_action": "\nvoid png_set_crc_action(long param_1,int param_2,int param_3)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 4) {\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0xc00;\n  }\n  else if (param_2 < 5) {\n    if (param_2 == 2) {\n      png_warning(param_1,\"Can\\'t discard critical data on CRC error\");\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffff3ff;\n    }\n    else {\n      if (param_2 != 3) goto LAB_001140dd;\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffff3ff | 0x400;\n    }\n  }\n  else if (param_2 != 5) {\nLAB_001140dd:\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffff3ff;\n  }\n  if (param_3 == 4) {\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x300;\n    return;\n  }\n  if (param_3 < 5) {\n    if (param_3 == 1) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffffcff | 0x200;\n      return;\n    }\n    if (param_3 != 3) {\nLAB_001140c5:\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffffcff;\n      return;\n    }\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffffcff | 0x100;\n  }\n  else if (param_3 != 5) goto LAB_001140c5;\n  return;\n}\n\n", "png_set_background": "\nvoid png_set_background(undefined8 param_1,undefined8 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_00108c50(param_1,\"png_set_background\");\n  png_set_background_fixed(param_1,param_2,param_3,param_4,uVar1);\n  return;\n}\n\n", "png_set_alpha_mode": "\nvoid png_set_alpha_mode(undefined8 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_00113fa0();\n  png_set_alpha_mode_fixed(param_1,param_2,uVar1);\n  return;\n}\n\n", "png_set_quantize": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid png_set_quantize(long param_1,undefined2 *param_2,uint param_3,uint param_4,long *param_5,\n                     int param_6)\n\n{\n  byte bVar1;\n  long **pplVar2;\n  long *plVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  long lVar9;\n  long lVar10;\n  undefined2 *puVar11;\n  undefined8 uVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  ulong uVar15;\n  long **pplVar16;\n  uint uVar17;\n  ulong uVar18;\n  int iVar19;\n  int iVar20;\n  uint uVar21;\n  byte *pbVar22;\n  int iVar23;\n  long **pplVar24;\n  byte bVar25;\n  int iVar26;\n  ulong uVar27;\n  undefined2 *puVar28;\n  ulong uVar29;\n  byte bVar30;\n  uint uVar31;\n  int iVar32;\n  uint uVar33;\n  long lVar34;\n  uint uVar35;\n  uint uVar36;\n  uint uVar37;\n  uint uVar38;\n  long *plVar39;\n  long **pplVar40;\n  bool bVar41;\n  bool bVar42;\n  int local_88;\n  long local_80;\n  undefined2 *local_78;\n  long **local_70;\n  uint local_48;\n  \n  iVar5 = FUN_00113f30();\n  if (iVar5 == 0) {\n    return;\n  }\n  *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x40;\n  if (param_6 == 0) {\n    lVar9 = png_malloc(param_1);\n    *(long *)(param_1 + 0x380) = lVar9;\n    if (0 < (int)param_3) {\n      uVar15 = 0;\n      while( true ) {\n        *(char *)(lVar9 + uVar15) = (char)uVar15;\n        if (param_3 - 1 == uVar15) break;\n        lVar9 = *(long *)(param_1 + 0x380);\n        uVar15 = uVar15 + 1;\n      }\n    }\n  }\n  local_48 = param_3;\n  if ((int)param_4 < (int)param_3) {\n    if (param_5 != (long *)0x0) {\n      lVar9 = png_malloc();\n      *(long *)(param_1 + 0x408) = lVar9;\n      if (0 < (int)param_3) {\n        uVar15 = 0;\n        while( true ) {\n          *(char *)(lVar9 + uVar15) = (char)uVar15;\n          if (param_3 - 1 == uVar15) break;\n          lVar9 = *(long *)(param_1 + 0x408);\n          uVar15 = uVar15 + 1;\n        }\n      }\n      uVar31 = param_3 - 1;\n      uVar15 = (ulong)uVar31;\n      if ((int)param_4 <= (int)uVar31) {\n        while (0 < (int)uVar15) {\n          uVar35 = (int)uVar15 - 1;\n          uVar15 = (ulong)uVar35;\n          bVar42 = true;\n          uVar29 = 0;\n          do {\n            pbVar13 = (byte *)(*(long *)(param_1 + 0x408) + uVar29);\n            uVar18 = uVar29 + 1;\n            bVar30 = *(byte *)(*(long *)(param_1 + 0x408) + uVar18);\n            bVar25 = *pbVar13;\n            if (*(ushort *)((long)param_5 + (ulong)bVar25 * 2) <\n                *(ushort *)((long)param_5 + (ulong)bVar30 * 2)) {\n              *pbVar13 = bVar30;\n              *(byte *)(*(long *)(param_1 + 0x408) + uVar18) = bVar25;\n              bVar42 = false;\n            }\n            bVar41 = uVar15 != uVar29;\n            uVar29 = uVar18;\n          } while (bVar41);\n          if ((bVar42) || ((int)uVar35 < (int)param_4)) break;\n        }\n      }\n      if (param_6 == 0) {\n        if (0 < (int)param_4) {\n          uVar15 = (ulong)param_3;\n          uVar29 = 0;\n          puVar11 = param_2;\n          while( true ) {\n            if ((int)param_4 <= (int)(uint)*(byte *)(*(long *)(param_1 + 0x408) + uVar29)) {\n              uVar18 = (long)((int)uVar15 + -1);\n              do {\n                uVar27 = uVar18;\n                uVar15 = uVar27 & 0xffffffff;\n                uVar18 = uVar27 - 1;\n              } while ((int)param_4 <= (int)(uint)*(byte *)(*(long *)(param_1 + 0x408) + uVar27));\n              puVar28 = (undefined2 *)(uVar27 * 3 + (long)param_2);\n              bVar30 = *(byte *)puVar28;\n              bVar25 = *(byte *)((long)puVar28 + 1);\n              *puVar28 = *puVar11;\n              bVar1 = *(byte *)(puVar28 + 1);\n              *(byte *)(puVar28 + 1) = *(byte *)(puVar11 + 1);\n              lVar9 = *(long *)(param_1 + 0x380);\n              *(byte *)puVar11 = bVar30;\n              *(byte *)((long)puVar11 + 1) = bVar25;\n              *(byte *)(puVar11 + 1) = bVar1;\n              *(char *)(lVar9 + uVar27) = (char)uVar29;\n              *(char *)(*(long *)(param_1 + 0x380) + uVar29) = (char)uVar15;\n            }\n            if (param_4 - 1 == uVar29) break;\n            uVar29 = uVar29 + 1;\n            puVar11 = (undefined2 *)((long)puVar11 + 3);\n          }\n        }\n        uVar15 = 0;\n        if (0 < (int)param_3) {\n          while( true ) {\n            pbVar13 = (byte *)(*(long *)(param_1 + 0x380) + uVar15);\n            bVar30 = *pbVar13;\n            if ((int)param_4 <= (int)(uint)bVar30) {\n              pbVar14 = (byte *)((ulong)bVar30 * 3 + (long)param_2);\n              uVar21 = (uint)*pbVar14 - (uint)*(byte *)param_2;\n              uVar35 = (int)uVar21 >> 0x1f;\n              uVar6 = (uint)pbVar14[1] - (uint)*(byte *)((long)param_2 + 1);\n              uVar33 = (int)uVar6 >> 0x1f;\n              uVar17 = (uint)pbVar14[2] - (uint)*(byte *)(param_2 + 1);\n              uVar36 = (int)uVar17 >> 0x1f;\n              iVar5 = ((uVar21 ^ uVar35) - uVar35) + ((uVar6 ^ uVar33) - uVar33) +\n                      ((uVar17 ^ uVar36) - uVar36);\n              if ((int)param_4 < 2) {\n                bVar30 = 0;\n              }\n              else {\n                pbVar22 = (byte *)((long)param_2 + 3);\n                uVar35 = 0;\n                uVar21 = 1;\n                do {\n                  uVar17 = (uint)*pbVar14 - (uint)*pbVar22;\n                  uVar33 = (int)uVar17 >> 0x1f;\n                  uVar36 = (uint)pbVar14[1] - (uint)pbVar22[1];\n                  uVar6 = (int)uVar36 >> 0x1f;\n                  uVar37 = (uint)pbVar14[2] - (uint)pbVar22[2];\n                  uVar38 = (int)uVar37 >> 0x1f;\n                  iVar19 = ((uVar36 ^ uVar6) - uVar6) + ((uVar17 ^ uVar33) - uVar33) +\n                           ((uVar37 ^ uVar38) - uVar38);\n                  if (iVar19 < iVar5) {\n                    iVar5 = iVar19;\n                    uVar35 = uVar21;\n                  }\n                  bVar30 = (byte)uVar35;\n                  uVar21 = uVar21 + 1;\n                  pbVar22 = pbVar22 + 3;\n                } while (param_4 != uVar21);\n              }\n              *pbVar13 = bVar30;\n            }\n            if (uVar31 == uVar15) break;\n            uVar15 = uVar15 + 1;\n          }\n        }\n        lVar9 = *(long *)(param_1 + 0x408);\n      }\n      else {\n        lVar9 = *(long *)(param_1 + 0x408);\n        if (0 < (int)param_4) {\n          uVar15 = 0;\n          do {\n            if ((int)param_4 <= (int)(uint)*(byte *)(lVar9 + uVar15)) {\n              lVar34 = (long)(int)(local_48 - 1);\n              do {\n                lVar10 = lVar34;\n                local_48 = (uint)lVar10;\n                lVar34 = lVar10 + -1;\n              } while ((int)param_4 <= (int)(uint)*(byte *)(lVar9 + lVar10));\n              puVar11 = (undefined2 *)(lVar10 * 3 + (long)param_2);\n              *(undefined2 *)((long)param_2 + uVar15 * 3) = *puVar11;\n              *(byte *)((long)param_2 + uVar15 * 3 + 2) = *(byte *)(puVar11 + 1);\n            }\n            bVar42 = param_4 - 1 != uVar15;\n            uVar15 = uVar15 + 1;\n          } while (bVar42);\n        }\n      }\n      png_free(param_1,lVar9);\n      lVar9 = *(long *)(param_1 + 0x250);\n      *(undefined8 *)(param_1 + 0x408) = 0;\n      local_48 = param_4;\n      goto joined_r0x001146ff;\n    }\n    uVar12 = png_malloc();\n    *(undefined8 *)(param_1 + 0x410) = uVar12;\n    uVar12 = png_malloc(param_1,param_3);\n    *(undefined8 *)(param_1 + 0x418) = uVar12;\n    uVar15 = 0;\n    if (0 < (int)param_3) {\n      do {\n        *(char *)(*(long *)(param_1 + 0x410) + uVar15) = (char)uVar15;\n        *(char *)(*(long *)(param_1 + 0x418) + uVar15) = (char)uVar15;\n        bVar42 = param_3 - 1 != uVar15;\n        uVar15 = uVar15 + 1;\n      } while (bVar42);\n    }\n    pplVar16 = (long **)png_calloc(param_1);\n    local_88 = 0x60;\n    local_70 = pplVar16 + 0x61;\n    uVar31 = param_3;\n    do {\n      pbVar13 = (byte *)((long)param_2 + 3);\n      uVar35 = 0;\n      pplVar24 = pplVar16;\n      if (0 < (int)(uVar31 - 1)) {\n        do {\n          uVar21 = uVar35 + 1;\n          pbVar14 = pbVar13;\n          uVar6 = uVar21;\n          if ((int)uVar21 < (int)uVar31) {\n            do {\n              while (uVar17 = (int)((uint)pbVar13[-3] - (uint)*pbVar14) >> 0x1f,\n                    uVar33 = (int)((uint)pbVar13[-2] - (uint)pbVar14[1]) >> 0x1f,\n                    uVar36 = (int)((uint)pbVar13[-1] - (uint)pbVar14[2]) >> 0x1f,\n                    iVar5 = (((uint)pbVar13[-3] - (uint)*pbVar14 ^ uVar17) - uVar17) +\n                            (((uint)pbVar13[-2] - (uint)pbVar14[1] ^ uVar33) - uVar33) +\n                            (((uint)pbVar13[-1] - (uint)pbVar14[2] ^ uVar36) - uVar36),\n                    local_88 < iVar5) {\n                uVar6 = uVar6 + 1;\n                pbVar14 = pbVar14 + 3;\n                if (uVar6 == uVar31) goto LAB_00114c89;\n              }\n              param_5 = (long *)png_malloc_warn(param_1,0x10);\n              if (param_5 == (long *)0x0) goto LAB_00114ea2;\n              lVar9 = (long)pplVar16[iVar5];\n              *(char *)((long)param_5 + 9) = (char)uVar6;\n              uVar6 = uVar6 + 1;\n              *(char *)(param_5 + 1) = (char)uVar35;\n              *param_5 = lVar9;\n              pplVar16[iVar5] = param_5;\n              pbVar14 = pbVar14 + 3;\n            } while (uVar6 != uVar31);\n          }\nLAB_00114c89:\n          pbVar13 = pbVar13 + 3;\n          if (param_5 == (long *)0x0) goto LAB_00114ea2;\n          uVar35 = uVar21;\n        } while ((int)uVar21 < (int)(uVar31 - 1));\n      }\n      if (param_5 != (long *)0x0) {\n        pplVar40 = pplVar16;\n        do {\n          for (pplVar2 = (long **)*pplVar40; pplVar2 != (long **)0x0; pplVar2 = (long **)*pplVar2) {\n            bVar30 = *(byte *)(pplVar2 + 1);\n            lVar9 = *(long *)(param_1 + 0x410);\n            pbVar13 = (byte *)(lVar9 + (ulong)bVar30);\n            bVar25 = *pbVar13;\n            if ((int)(uint)bVar25 < (int)uVar31) {\n              uVar15 = (ulong)*(byte *)((long)pplVar2 + 9);\n              bVar1 = *(byte *)(lVar9 + uVar15);\n              if ((int)(uint)bVar1 < (int)uVar31) {\n                uVar29 = (ulong)bVar30;\n                uVar18 = uVar15;\n                if ((uVar31 & 1) == 0) {\n                  uVar18 = (ulong)(int)(uint)bVar30;\n                  uVar29 = uVar15;\n                  pbVar13 = (byte *)(lVar9 + uVar15);\n                  bVar30 = *(byte *)((long)pplVar2 + 9);\n                  bVar25 = bVar1;\n                }\n                local_78 = (undefined2 *)(ulong)bVar25;\n                uVar31 = uVar31 - 1;\n                lVar34 = (long)(int)uVar31;\n                puVar28 = (undefined2 *)(lVar34 * 3 + (long)param_2);\n                puVar11 = (undefined2 *)((long)local_78 * 3 + (long)param_2);\n                *puVar11 = *puVar28;\n                *(byte *)(puVar11 + 1) = *(byte *)(puVar28 + 1);\n                bVar25 = *pbVar13;\n                if ((param_6 == 0) && (0 < (int)param_3)) {\n                  uVar15 = 0;\n                  do {\n                    pbVar13 = (byte *)(*(long *)(param_1 + 0x380) + uVar15);\n                    bVar1 = *pbVar13;\n                    if (bVar1 == bVar25) {\n                      *pbVar13 = *(byte *)(lVar9 + uVar18);\n                      lVar9 = *(long *)(param_1 + 0x410);\n                      pbVar13 = (byte *)(*(long *)(param_1 + 0x380) + uVar15);\n                      bVar1 = *pbVar13;\n                      bVar25 = *(byte *)(lVar9 + uVar29);\n                    }\n                    if (bVar1 == uVar31) {\n                      *pbVar13 = bVar25;\n                      lVar9 = *(long *)(param_1 + 0x410);\n                      bVar25 = *(byte *)(lVar9 + uVar29);\n                    }\n                    bVar42 = param_3 - 1 != uVar15;\n                    uVar15 = uVar15 + 1;\n                  } while (bVar42);\n                }\n                *(byte *)(lVar9 + (ulong)*(byte *)(*(long *)(param_1 + 0x418) + lVar34)) = bVar25;\n                *(undefined *)\n                 (*(long *)(param_1 + 0x418) + (ulong)*(byte *)(*(long *)(param_1 + 0x410) + uVar29)\n                 ) = *(undefined *)(*(long *)(param_1 + 0x418) + lVar34);\n                *(char *)(*(long *)(param_1 + 0x410) + uVar29) = (char)uVar31;\n                *(byte *)(*(long *)(param_1 + 0x418) + lVar34) = bVar30;\n              }\n            }\n            if ((int)uVar31 <= (int)param_4) goto LAB_00114ea2;\n          }\n          pplVar40 = pplVar40 + 1;\n        } while (local_70 != pplVar40);\n      }\nLAB_00114ea2:\n      do {\n        plVar39 = *pplVar24;\n        if (*pplVar24 != (long *)0x0) {\n          do {\n            plVar3 = (long *)*plVar39;\n            png_free(param_1,plVar39);\n            plVar39 = plVar3;\n          } while (plVar3 != (long *)0x0);\n          param_5 = (long *)0x0;\n        }\n        *pplVar24 = (long *)0x0;\n        pplVar24 = pplVar24 + 1;\n      } while (pplVar16 + 0x301 != pplVar24);\n      local_88 = local_88 + 0x60;\n      local_70 = local_70 + 0x60;\n    } while ((int)param_4 < (int)uVar31);\n    png_free(param_1,pplVar16);\n    png_free(param_1,*(undefined8 *)(param_1 + 0x418));\n    png_free(param_1,*(undefined8 *)(param_1 + 0x410));\n    *(undefined8 *)(param_1 + 0x418) = 0;\n    *(undefined8 *)(param_1 + 0x410) = 0;\n    local_48 = param_4;\n  }\n  lVar9 = *(long *)(param_1 + 0x250);\njoined_r0x001146ff:\n  if (lVar9 == 0) {\n    *(undefined2 **)(param_1 + 0x250) = param_2;\n  }\n  *(undefined2 *)(param_1 + 600) = (undefined2)local_48;\n  if (param_6 == 0) {\n    return;\n  }\n  uVar12 = png_calloc(param_1,0x8000);\n  *(undefined8 *)(param_1 + 0x378) = uVar12;\n  pbVar13 = (byte *)png_malloc(param_1,0x8000);\n  memset(pbVar13,0xff,0x8000);\n  if (0 < (int)local_48) {\n    uVar31 = 0xff;\n    uVar35 = 0;\n    local_78 = param_2;\n    while( true ) {\n      local_80 = 0;\n      bVar30 = *(byte *)local_78;\n      iVar5 = -(uint)(bVar30 >> 3);\n      uVar21 = (uint)(*(byte *)((long)local_78 + 1) >> 3);\n      bVar25 = *(byte *)(local_78 + 1);\n      while( true ) {\n        iVar19 = -iVar5;\n        if ((int)(uint)(bVar30 >> 3) < (int)local_80) {\n          iVar19 = iVar5;\n        }\n        iVar23 = -uVar21;\n        iVar20 = 0;\n        uVar6 = (int)local_80 << 10;\n        while( true ) {\n          iVar32 = -iVar23;\n          if ((int)uVar21 < iVar20) {\n            iVar32 = iVar23;\n          }\n          iVar4 = iVar32;\n          if (iVar32 <= iVar19) {\n            iVar4 = iVar19;\n          }\n          uVar36 = iVar20 * 0x20;\n          iVar26 = -(uint)(bVar25 >> 3);\n          uVar17 = 0;\n          uVar33 = uVar6 | uVar36;\n          while( true ) {\n            iVar8 = -iVar26;\n            if ((int)(uint)(bVar25 >> 3) < (int)uVar17) {\n              iVar8 = iVar26;\n            }\n            iVar7 = iVar4;\n            if (iVar4 <= iVar8) {\n              iVar7 = iVar8;\n            }\n            iVar8 = iVar7 + iVar19 + iVar32 + iVar8;\n            if (iVar8 < (int)uVar31) {\n              lVar9 = (long)(int)(uVar33 | uVar17);\n              pbVar13[lVar9] = (byte)iVar8;\n              *(char *)(*(long *)(param_1 + 0x378) + lVar9) = (char)uVar35;\n            }\n            uVar17 = uVar17 + 1;\n            iVar26 = iVar26 + 1;\n            if (uVar17 == 0x20) break;\n            uVar31 = (uint)pbVar13[(int)(uVar33 | uVar17)];\n          }\n          iVar20 = iVar20 + 1;\n          iVar23 = iVar23 + 1;\n          if (iVar20 == 0x20) break;\n          uVar31 = (uint)pbVar13[(int)(uVar36 + 0x20 | uVar6)];\n        }\n        local_80 = local_80 + 1;\n        iVar5 = iVar5 + 1;\n        if (local_80 == 0x20) break;\n        uVar31 = (uint)pbVar13[local_80 * 0x400];\n      }\n      local_78 = (undefined2 *)((long)local_78 + 3);\n      uVar35 = uVar35 + 1;\n      if (local_48 == uVar35) break;\n      uVar31 = (uint)*pbVar13;\n    }\n  }\n  png_free(param_1,pbVar13);\n  return;\n}\n\n", "png_set_gamma_fixed": "\nvoid png_set_gamma_fixed(long param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00113f30(param_1,0);\n  if (iVar1 != 0) {\n    if ((param_2 == -1) || (param_2 == -100000)) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x1000;\n      param_2 = 220000;\n    }\n    else if ((param_2 == -2) || (param_2 == -50000)) {\n      param_2 = 0x250ac;\n    }\n    if ((param_3 == -1) || (param_3 == -100000)) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x1000;\n      param_3 = 0xb18f;\n    }\n    else if ((param_3 == -2) || (param_3 == -50000)) {\n      param_3 = 0x10175;\n    }\n    else if (param_3 < 1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"invalid file gamma in png_set_gamma\");\n    }\n    if (param_2 < 1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"invalid screen gamma in png_set_gamma\");\n    }\n    *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n    *(int *)(param_1 + 0x4a0) = param_3;\n    *(int *)(param_1 + 0x2a4) = param_2;\n  }\n  return;\n}\n\n", "png_set_gamma": "\nvoid png_set_gamma(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  iVar2 = FUN_00113fa0(param_2);\n  iVar3 = FUN_00113fa0(param_1,param_3);\n  iVar1 = FUN_00113f30(param_3,0);\n  if (iVar1 != 0) {\n    if ((iVar3 == -1) || (iVar3 == -100000)) {\n      *(uint *)(param_3 + 0x130) = *(uint *)(param_3 + 0x130) | 0x1000;\n      iVar3 = 220000;\n    }\n    else if ((iVar3 == -2) || (iVar3 == -50000)) {\n      iVar3 = 0x250ac;\n    }\n    if ((iVar2 == -1) || (iVar2 == -100000)) {\n      *(uint *)(param_3 + 0x130) = *(uint *)(param_3 + 0x130) | 0x1000;\n      iVar2 = 0xb18f;\n    }\n    else if ((iVar2 == -2) || (iVar2 == -50000)) {\n      iVar2 = 0x10175;\n    }\n    else if (iVar2 < 1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_3,\"invalid file gamma in png_set_gamma\");\n    }\n    if (iVar3 < 1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_3,\"invalid screen gamma in png_set_gamma\");\n    }\n    *(ushort *)(param_3 + 0x4ea) = *(ushort *)(param_3 + 0x4ea) | 1;\n    *(int *)(param_3 + 0x4a0) = iVar2;\n    *(int *)(param_3 + 0x2a4) = iVar3;\n  }\n  return;\n}\n\n", "png_set_palette_to_rgb": "\nvoid png_set_palette_to_rgb(void)\n\n{\n  png_set_expand();\n  return;\n}\n\n", "png_set_rgb_to_gray": "\nvoid png_set_rgb_to_gray(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined4 param_4\n                        )\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  \n  uVar1 = FUN_00108c50(param_2,param_3,\"rgb to gray green coefficient\");\n  uVar2 = FUN_00108c50(param_1,param_3,\"rgb to gray red coefficient\");\n  png_set_rgb_to_gray_fixed(param_3,param_4,uVar2,uVar1);\n  return;\n}\n\n", "png_set_read_user_transform_fn": "\nvoid png_set_read_user_transform_fn(long param_1,undefined8 param_2)\n\n{\n  *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x100000;\n  *(undefined8 *)(param_1 + 0x110) = param_2;\n  return;\n}\n\n", "FUN_00115280": "\nvoid FUN_00115280(long param_1)\n\n{\n  char *pcVar1;\n  char cVar2;\n  ushort uVar3;\n  ushort uVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  bool bVar8;\n  byte bVar9;\n  byte bVar10;\n  byte bVar11;\n  byte bVar12;\n  byte bVar13;\n  undefined2 uVar14;\n  short sVar15;\n  undefined4 uVar16;\n  int iVar17;\n  undefined4 uVar18;\n  byte *pbVar19;\n  char *pcVar20;\n  short sVar21;\n  uint uVar22;\n  byte *pbVar23;\n  long lVar24;\n  uint uVar25;\n  byte *pbVar26;\n  byte *pbVar27;\n  byte *pbVar28;\n  ushort uVar29;\n  int iVar30;\n  long in_FS_OFFSET;\n  byte local_4d;\n  \n  lVar5 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*(int *)(param_1 + 0x4a0) == 0) {\n    if (*(int *)(param_1 + 0x2a4) == 0) {\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n      *(undefined4 *)(param_1 + 0x4a0) = 100000;\n      *(undefined4 *)(param_1 + 0x2a4) = 100000;\n    }\n    else {\n      uVar16 = FUN_001091d0();\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n      *(undefined4 *)(param_1 + 0x4a0) = uVar16;\n    }\nLAB_001152d8:\n    uVar25 = *(uint *)(param_1 + 0x134) & 0xffffdfff;\n    *(uint *)(param_1 + 0x134) = uVar25;\n  }\n  else {\n    if (*(int *)(param_1 + 0x2a4) == 0) {\n      uVar16 = FUN_001091d0();\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n      *(undefined4 *)(param_1 + 0x2a4) = uVar16;\n      goto LAB_001152d8;\n    }\n    iVar17 = FUN_00108ce0();\n    if (iVar17 == 0) {\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n    }\n    else {\n      iVar17 = FUN_00109960();\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 1;\n      if (iVar17 == 0) goto LAB_001152d8;\n    }\n    uVar25 = *(uint *)(param_1 + 0x134) | 0x2000;\n    *(uint *)(param_1 + 0x134) = uVar25;\n  }\n  if ((uVar25 & 0x40080) == 0x40000) {\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\n    *(uint *)(param_1 + 0x134) = uVar25 & 0xfd7ffeff;\n    *(undefined2 *)(param_1 + 0x260) = 0;\n  }\n  iVar17 = FUN_00109960();\n  uVar25 = *(uint *)(param_1 + 0x134);\n  if (iVar17 == 0) {\n    uVar25 = uVar25 & 0xff7fffff;\n    *(ulong *)(param_1 + 0x130) = *(ulong *)(param_1 + 0x130) & 0xff7fffffffffdfff;\n  }\n  if ((uVar25 & 0x600000) != 0) {\n    FUN_00108fa0();\n    uVar25 = *(uint *)(param_1 + 0x134);\n  }\n  bVar9 = *(byte *)(param_1 + 0x267);\n  if ((uVar25 & 0x100) == 0) {\n    if ((((uVar25 & 0x4080) == 0x4080) &&\n        (sVar15 = *(short *)(param_1 + 0x27e), sVar15 == *(short *)(param_1 + 0x280))) &&\n       (sVar15 == *(short *)(param_1 + 0x282))) {\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x800;\n      *(short *)(param_1 + 0x284) = sVar15;\n    }\n  }\n  else if ((bVar9 & 2) == 0) {\n    *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x800;\n  }\n  uVar3 = *(ushort *)(param_1 + 0x260);\n  uVar22 = uVar25;\n  if (bVar9 == 3) {\n    if (uVar3 == 0) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\nLAB_001159da:\n      uVar22 = uVar25 & 0xff7ffe7f;\n      *(uint *)(param_1 + 0x134) = uVar22;\n    }\n    else {\n      pcVar20 = *(char **)(param_1 + 0x2e8);\n      bVar8 = false;\n      pcVar1 = pcVar20 + (ulong)(uVar3 - 1) + 1;\n      do {\n        if (*pcVar20 != -1) {\n          if (*pcVar20 != '\\0') goto LAB_001159e6;\n          bVar8 = true;\n        }\n        pcVar20 = pcVar20 + 1;\n      } while (pcVar1 != pcVar20);\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\n      uVar22 = uVar25 & 0xff7fffff;\n      *(uint *)(param_1 + 0x134) = uVar22;\n      if (!bVar8) goto LAB_001159da;\n    }\nLAB_001159e6:\n    if ((uVar22 & 0x1100) == 0x1100) {\n      pbVar23 = (byte *)((ulong)*(byte *)(param_1 + 0x27c) * 3 + *(long *)(param_1 + 0x250));\n      *(ushort *)(param_1 + 0x27e) = (ushort)*pbVar23;\n      bVar9 = pbVar23[2];\n      *(ushort *)(param_1 + 0x280) = (ushort)pbVar23[1];\n      *(ushort *)(param_1 + 0x282) = (ushort)bVar9;\n      if ((((uVar22 & 0x80000) != 0) && ((uVar22 & 0x2000000) == 0)) && (uVar3 != 0)) {\n        pbVar23 = *(byte **)(param_1 + 0x2e8) + 1;\n        pbVar27 = pbVar23;\n        pbVar19 = *(byte **)(param_1 + 0x2e8);\n        while (pbVar28 = pbVar27, *pbVar19 = ~*pbVar19, pbVar23 + (uVar3 - 1) != pbVar28) {\n          pbVar19 = pbVar28;\n          pbVar27 = pbVar28 + 1;\n        }\n        uVar22 = *(uint *)(param_1 + 0x134);\n      }\n    }\n  }\n  else {\n    if ((bVar9 & 4) == 0) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xffffdfff;\n      uVar22 = uVar25 & 0xff7fffff;\n      *(uint *)(param_1 + 0x134) = uVar22;\n      if (uVar3 == 0) {\n        uVar22 = uVar25 & 0xff7ffe7f;\n        *(uint *)(param_1 + 0x134) = uVar22;\n      }\n    }\n    if (((uVar22 & 0x1100) == 0x1100) && ((bVar9 & 2) == 0)) {\n      sVar15 = *(short *)(param_1 + 0x284);\n      cVar2 = *(char *)(param_1 + 0x268);\n      sVar21 = *(short *)(param_1 + 0x2f8);\n      if (cVar2 == '\\x02') {\n        sVar21 = sVar21 * 0x55;\n        sVar15 = sVar15 * 0x55;\n      }\n      else if (cVar2 == '\\x04') {\n        sVar21 = sVar21 * 0x11;\n        sVar15 = sVar15 * 0x11;\n      }\n      else if (cVar2 == '\\x01') {\n        sVar21 = sVar21 * 0xff;\n        sVar15 = sVar15 * 0xff;\n      }\n      *(short *)(param_1 + 0x282) = sVar15;\n      *(short *)(param_1 + 0x280) = sVar15;\n      *(short *)(param_1 + 0x27e) = sVar15;\n      if ((uVar22 & 0x2000000) == 0) {\n        *(short *)(param_1 + 0x2f6) = sVar21;\n        *(short *)(param_1 + 0x2f4) = sVar21;\n        *(short *)(param_1 + 0x2f2) = sVar21;\n      }\n    }\n  }\n  if (((uVar22 & 0x380) == 0x280) && (*(char *)(param_1 + 0x268) != '\\x10')) {\n    *(short *)(param_1 + 0x27e) =\n         (short)(((uint)*(ushort *)(param_1 + 0x27e) * 0x100 - (uint)*(ushort *)(param_1 + 0x27e)) +\n                 0x807f >> 0x10);\n    *(short *)(param_1 + 0x280) =\n         (short)(((uint)*(ushort *)(param_1 + 0x280) * 0x100 - (uint)*(ushort *)(param_1 + 0x280)) +\n                 0x807f >> 0x10);\n    *(short *)(param_1 + 0x282) =\n         (short)(((uint)*(ushort *)(param_1 + 0x282) * 0x100 - (uint)*(ushort *)(param_1 + 0x282)) +\n                 0x807f >> 0x10);\n    *(short *)(param_1 + 0x284) =\n         (short)(((uint)*(ushort *)(param_1 + 0x284) * 0x100 - (uint)*(ushort *)(param_1 + 0x284)) +\n                 0x807f >> 0x10);\n  }\n  if ((((uVar22 & 0x4000400) != 0) && ((uVar22 & 0x180) == 0x80)) &&\n     (*(char *)(param_1 + 0x268) == '\\x10')) {\n    *(short *)(param_1 + 0x27e) = *(short *)(param_1 + 0x27e) * 0x101;\n    *(short *)(param_1 + 0x280) = *(short *)(param_1 + 0x280) * 0x101;\n    *(short *)(param_1 + 0x282) = *(short *)(param_1 + 0x282) * 0x101;\n    *(short *)(param_1 + 0x284) = *(short *)(param_1 + 0x284) * 0x101;\n  }\n  *(undefined8 *)(param_1 + 0x286) = *(undefined8 *)(param_1 + 0x27c);\n  *(undefined2 *)(param_1 + 0x28e) = *(undefined2 *)(param_1 + 0x284);\n  if ((uVar22 & 0x2000) == 0) {\n    if ((uVar22 & 0x600000) != 0) {\n      iVar17 = FUN_00109960();\n      if ((iVar17 != 0) || (iVar17 = FUN_00109960(), iVar17 != 0)) goto LAB_001155b8;\n      uVar22 = *(uint *)(param_1 + 0x134);\n    }\n    if ((uVar22 & 0x80) == 0) {\n      if ((uVar22 & 0x800000) == 0) goto LAB_00115673;\nLAB_0011542a:\n      iVar17 = FUN_00109960();\n      if (iVar17 != 0) goto LAB_001155b8;\n      uVar22 = *(uint *)(param_1 + 0x134);\n    }\n    else {\n      iVar17 = FUN_00109960();\n      if (((iVar17 != 0) || (iVar17 = FUN_00109960(), iVar17 != 0)) ||\n         ((*(char *)(param_1 + 0x274) == '\\x03' && (iVar17 = FUN_00109960(), iVar17 != 0))))\n      goto LAB_001155b8;\n      uVar22 = *(uint *)(param_1 + 0x134);\n      if ((uVar22 & 0x800000) != 0) goto LAB_0011542a;\n    }\n    if ((uVar22 & 0x80) != 0) {\n      if (*(char *)(param_1 + 0x267) != '\\x03') goto LAB_00115683;\n      uVar3 = *(ushort *)(param_1 + 0x260);\n      pbVar23 = *(byte **)(param_1 + 0x250);\n      if (uVar3 != 0) {\n        bVar9 = (byte)*(undefined2 *)(param_1 + 0x280);\n        bVar12 = (byte)*(undefined2 *)(param_1 + 0x27e);\n        bVar11 = (byte)*(undefined2 *)(param_1 + 0x282);\n        pbVar27 = *(byte **)(param_1 + 0x2e8) + 1;\n        pbVar19 = pbVar27;\n        pbVar28 = *(byte **)(param_1 + 0x2e8);\n        while( true ) {\n          pbVar26 = pbVar19;\n          bVar13 = *pbVar28;\n          if (bVar13 == 0) {\n            *pbVar23 = bVar12;\n            pbVar23[1] = bVar9;\n            pbVar23[2] = bVar11;\n          }\n          else if (bVar13 != 0xff) {\n            uVar25 = (0xff - (uint)bVar13) * (uint)bVar12 + 0x80 +\n                     (uint)(ushort)((ushort)bVar13 * (ushort)*pbVar23);\n            *pbVar23 = (byte)(uVar25 + (uVar25 >> 8 & 0xff) >> 8);\n            uVar25 = (0xff - (uint)*pbVar28) * (uint)bVar9 + 0x80 +\n                     (uint)(ushort)((ushort)*pbVar28 * (ushort)pbVar23[1]);\n            pbVar23[1] = (byte)(uVar25 + (uVar25 >> 8 & 0xff) >> 8);\n            uVar25 = (0xff - (uint)*pbVar28) * (uint)bVar11 + 0x80 +\n                     (uint)(ushort)((ushort)*pbVar28 * (ushort)pbVar23[2]);\n            pbVar23[2] = (byte)(uVar25 + (uVar25 >> 8 & 0xff) >> 8);\n          }\n          pbVar23 = pbVar23 + 3;\n          if (pbVar27 + (uVar3 - 1) == pbVar26) break;\n          pbVar19 = pbVar26 + 1;\n          pbVar28 = pbVar26;\n        }\n      }\n      uVar22 = uVar22 & 0xffffff7f;\n      *(uint *)(param_1 + 0x134) = uVar22;\n      goto LAB_00115758;\n    }\nLAB_00115673:\n    if (((uVar22 & 0x1008) != 8) || (*(char *)(param_1 + 0x267) != '\\x03')) goto LAB_00115683;\n  }\n  else {\nLAB_001155b8:\n    FUN_0010a600();\n    uVar22 = *(uint *)(param_1 + 0x134);\n    if ((uVar22 & 0x80) != 0) {\n      if ((uVar22 & 0x600000) != 0) {\n        png_warning();\n      }\n      cVar2 = *(char *)(param_1 + 0x274);\n      if (*(char *)(param_1 + 0x267) == '\\x03') {\n        pbVar23 = *(byte **)(param_1 + 0x250);\n        uVar3 = *(ushort *)(param_1 + 600);\n        if (cVar2 == '\\x02') {\n          lVar24 = *(long *)(param_1 + 0x2a8);\n          bVar12 = *(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x27e));\n          bVar13 = *(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x280));\n          local_4d = *(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x282));\n          lVar24 = *(long *)(param_1 + 0x2c0);\n          bVar9 = *(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x27e));\n          uVar29 = (ushort)*(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x280));\n          bVar11 = *(byte *)(lVar24 + (ulong)*(ushort *)(param_1 + 0x282));\n        }\n        else {\n          if ((cVar2 != '\\x01') && (cVar2 == '\\x03')) {\n            FUN_001091d0();\n            FUN_0010a190();\n          }\n          iVar17 = FUN_00109960();\n          if (iVar17 == 0) {\n            local_4d = *(byte *)(param_1 + 0x282);\n            bVar12 = *(byte *)(param_1 + 0x27e);\n            bVar13 = *(byte *)(param_1 + 0x280);\n          }\n          else {\n            bVar12 = FUN_0010a250();\n            bVar13 = FUN_0010a250();\n            local_4d = FUN_0010a250();\n          }\n          iVar17 = FUN_00109960();\n          if (iVar17 == 0) {\n            bVar9 = *(byte *)(param_1 + 0x27e);\n            uVar29 = (ushort)*(byte *)(param_1 + 0x280);\n            bVar11 = *(byte *)(param_1 + 0x282);\n          }\n          else {\n            bVar9 = FUN_0010a250();\n            bVar10 = FUN_0010a250();\n            bVar11 = FUN_0010a250();\n            uVar29 = (ushort)bVar10;\n          }\n        }\n        if (uVar3 != 0) {\n          uVar4 = *(ushort *)(param_1 + 0x260);\n          lVar24 = 0;\nLAB_00115d89:\n          do {\n            if ((int)lVar24 < (int)(uint)uVar4) {\n              pbVar27 = (byte *)(*(long *)(param_1 + 0x2e8) + lVar24);\n              bVar10 = *pbVar27;\n              if (bVar10 != 0xff) {\n                if (bVar10 == 0) {\n                  *pbVar23 = bVar12;\n                  pbVar23[1] = bVar13;\n                  pbVar23[2] = local_4d;\n                }\n                else {\n                  lVar6 = *(long *)(param_1 + 0x2c0);\n                  lVar7 = *(long *)(param_1 + 0x2b8);\n                  uVar25 = (ushort)((ushort)bVar10 * (ushort)*(byte *)(lVar6 + (ulong)*pbVar23)) +\n                           0x80 + (uint)bVar9 * (0xff - (uint)bVar10);\n                  *pbVar23 = *(byte *)(lVar7 + ((ulong)uVar25 + ((ulong)(uVar25 >> 8) & 0xff) >> 8 &\n                                               0xff));\n                  uVar25 = (ushort)((ushort)*pbVar27 * (ushort)*(byte *)(lVar6 + (ulong)pbVar23[1]))\n                           + 0x80 + (uint)uVar29 * (0xff - (uint)*pbVar27);\n                  pbVar23[1] = *(byte *)(lVar7 + ((ulong)uVar25 + ((ulong)(uVar25 >> 8) & 0xff) >> 8\n                                                 & 0xff));\n                  uVar25 = (ushort)((ushort)*pbVar27 * (ushort)*(byte *)(lVar6 + (ulong)pbVar23[2]))\n                           + 0x80 + (0xff - (uint)*pbVar27) * (uint)bVar11;\n                  pbVar23[2] = *(byte *)(lVar7 + ((ulong)uVar25 + ((ulong)(uVar25 >> 8) & 0xff) >> 8\n                                                 & 0xff));\n                }\n                lVar24 = lVar24 + 1;\n                pbVar23 = pbVar23 + 3;\n                if ((int)(uint)uVar3 <= (int)lVar24) break;\n                goto LAB_00115d89;\n              }\n            }\n            lVar6 = *(long *)(param_1 + 0x2a8);\n            lVar24 = lVar24 + 1;\n            *pbVar23 = *(byte *)(lVar6 + (ulong)*pbVar23);\n            pbVar23[1] = *(byte *)(lVar6 + (ulong)pbVar23[1]);\n            pbVar23[2] = *(byte *)(lVar6 + (ulong)pbVar23[2]);\n            pbVar23 = pbVar23 + 3;\n          } while ((int)lVar24 < (int)(uint)uVar3);\n        }\n        uVar22 = *(uint *)(param_1 + 0x134) & 0xffffdf7f;\n        *(uint *)(param_1 + 0x134) = uVar22;\n      }\n      else {\n        if (cVar2 == '\\x02') {\n          uVar16 = FUN_001091d0();\n          uVar18 = FUN_0010a190();\n        }\n        else if (cVar2 == '\\x03') {\n          uVar16 = FUN_001091d0();\n          uVar18 = FUN_0010a190();\n        }\n        else {\n          if (cVar2 != '\\x01') {\n                    /* WARNING: Subroutine does not return */\n            png_error(param_1,\"invalid background gamma type\");\n          }\n          uVar16 = *(undefined4 *)(param_1 + 0x2a4);\n          uVar18 = 100000;\n        }\n        iVar17 = FUN_00109960();\n        iVar30 = FUN_00109960();\n        if (iVar17 != 0) {\n          uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x284),uVar16);\n          *(undefined2 *)(param_1 + 0x28e) = uVar14;\n        }\n        if (iVar30 != 0) {\n          uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x284),uVar18);\n          *(undefined2 *)(param_1 + 0x284) = uVar14;\n        }\n        sVar15 = *(short *)(param_1 + 0x27e);\n        if (((sVar15 == *(short *)(param_1 + 0x280)) && (sVar15 == *(short *)(param_1 + 0x282))) &&\n           (sVar15 == *(short *)(param_1 + 0x284))) {\n          uVar14 = *(undefined2 *)(param_1 + 0x28e);\n          *(undefined2 *)(param_1 + 0x28c) = uVar14;\n          *(undefined2 *)(param_1 + 0x28a) = uVar14;\n          *(undefined2 *)(param_1 + 0x288) = uVar14;\n        }\n        else {\n          if (iVar17 != 0) {\n            uVar14 = FUN_0010a440(param_1,sVar15,uVar16);\n            *(undefined2 *)(param_1 + 0x288) = uVar14;\n            uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x280),uVar16);\n            *(undefined2 *)(param_1 + 0x28a) = uVar14;\n            uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x282),uVar16);\n            *(undefined2 *)(param_1 + 0x28c) = uVar14;\n          }\n          if (iVar30 != 0) {\n            uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x27e),uVar18);\n            *(undefined2 *)(param_1 + 0x27e) = uVar14;\n            uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x280),uVar18);\n            *(undefined2 *)(param_1 + 0x280) = uVar14;\n            uVar14 = FUN_0010a440(param_1,*(undefined2 *)(param_1 + 0x282),uVar18);\n            *(undefined2 *)(param_1 + 0x282) = uVar14;\n          }\n        }\n        *(undefined *)(param_1 + 0x274) = 1;\n        uVar22 = *(uint *)(param_1 + 0x134);\n      }\n      goto LAB_00115673;\n    }\n    if (*(char *)(param_1 + 0x267) != '\\x03') goto LAB_00115683;\n    if (((uVar22 & 0x1000) == 0) || ((uVar22 & 0x600000) == 0)) {\n      uVar3 = *(ushort *)(param_1 + 600);\n      pbVar23 = *(byte **)(param_1 + 0x250);\n      if (uVar3 != 0) {\n        lVar24 = *(long *)(param_1 + 0x2a8);\n        pbVar27 = pbVar23;\n        do {\n          pbVar19 = pbVar27 + 3;\n          *pbVar27 = *(byte *)(lVar24 + (ulong)*pbVar27);\n          pbVar27[1] = *(byte *)(lVar24 + (ulong)pbVar27[1]);\n          pbVar27[2] = *(byte *)(lVar24 + (ulong)pbVar27[2]);\n          pbVar27 = pbVar19;\n        } while (pbVar23 + (ulong)(uVar3 - 1) * 3 + 3 != pbVar19);\n      }\n      uVar22 = uVar22 & 0xffffdfff;\n      *(uint *)(param_1 + 0x134) = uVar22;\n    }\nLAB_00115758:\n    if ((uVar22 & 0x1008) != 8) goto LAB_00115683;\n  }\n  bVar9 = *(byte *)(param_1 + 0x2d8);\n  uVar3 = *(ushort *)(param_1 + 600);\n  *(uint *)(param_1 + 0x134) = uVar22 & 0xfffffff7;\n  uVar25 = (uint)uVar3;\n  if (-(uint)bVar9 + 7 < 7) {\n    if (uVar3 == 0) {\n      if (7 - *(byte *)(param_1 + 0x2d9) < 7) goto LAB_00115683;\nLAB_00115f33:\n      iVar17 = -(uint)*(byte *)(param_1 + 0x2da);\n      if ((6 < iVar17 + 7U) || (uVar25 == 0)) goto LAB_00115683;\n    }\n    else {\n      pbVar23 = *(byte **)(param_1 + 0x250);\n      pbVar27 = pbVar23;\n      do {\n        pbVar19 = pbVar27 + 3;\n        *pbVar27 = (byte)((int)(uint)*pbVar27 >> ((char)-(uint)bVar9 + 8U & 0x1f));\n        pbVar27 = pbVar19;\n      } while (pbVar23 + (ulong)(uVar3 - 1) * 3 + 3 != pbVar19);\n      iVar17 = -(uint)*(byte *)(param_1 + 0x2d9);\n      if (iVar17 + 7U < 7) goto LAB_001157e8;\n      iVar17 = -(uint)*(byte *)(param_1 + 0x2da);\n      if (6 < iVar17 + 7U) goto LAB_00115683;\n    }\n    pbVar23 = *(byte **)(param_1 + 0x250);\n  }\n  else {\n    iVar17 = -(uint)*(byte *)(param_1 + 0x2d9);\n    if (6 < iVar17 + 7U) goto LAB_00115f33;\n    if (uVar25 == 0) goto LAB_00115683;\n    pbVar23 = *(byte **)(param_1 + 0x250);\nLAB_001157e8:\n    iVar30 = 0;\n    pbVar27 = pbVar23 + 1;\n    do {\n      iVar30 = iVar30 + 1;\n      *pbVar27 = (byte)((int)(uint)*pbVar27 >> ((char)iVar17 + 8U & 0x1f));\n      pbVar27 = pbVar27 + 3;\n    } while (iVar30 < (int)uVar25);\n    iVar17 = -(uint)*(byte *)(param_1 + 0x2da);\n    if (6 < iVar17 + 7U) goto LAB_00115683;\n  }\n  iVar30 = 0;\n  pbVar23 = pbVar23 + 2;\n  do {\n    iVar30 = iVar30 + 1;\n    *pbVar23 = (byte)((int)(uint)*pbVar23 >> ((char)iVar17 + 8U & 0x1f));\n    pbVar23 = pbVar23 + 3;\n  } while (iVar30 < (int)uVar25);\nLAB_00115683:\n  if (lVar5 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_00116210": "\nvoid FUN_00116210(long param_1,uint *param_2)\n\n{\n  short sVar1;\n  uint uVar2;\n  char cVar3;\n  long lVar4;\n  ulong uVar5;\n  byte bVar6;\n  byte bVar7;\n  char cVar8;\n  \n  uVar2 = *(uint *)(param_1 + 0x134);\n  bVar7 = *(byte *)((long)param_2 + 0x25);\n  if ((uVar2 & 0x1000) == 0) {\n    bVar6 = *(byte *)(param_2 + 9);\n    if ((uVar2 & 0x80) != 0) goto LAB_00116344;\nLAB_00116233:\n    param_2[0xd] = *(uint *)(param_1 + 0x4a0);\njoined_r0x00116370:\n    if (bVar6 == 0x10) {\n      if ((uVar2 & 0x4000000) != 0) {\n        *(undefined *)(param_2 + 9) = 8;\n      }\n      if ((uVar2 & 0x400) != 0) {\n        *(undefined *)(param_2 + 9) = 8;\n      }\n    }\n  }\n  else {\n    sVar1 = *(short *)(param_1 + 0x260);\n    if (bVar7 != 3) {\n      if ((sVar1 != 0) && ((uVar2 & 0x2000000) != 0)) {\n        bVar7 = bVar7 | 4;\n        *(byte *)((long)param_2 + 0x25) = bVar7;\n      }\n      bVar6 = *(byte *)(param_2 + 9);\n      if (bVar6 < 8) {\n        *(undefined *)(param_2 + 9) = 8;\n        bVar6 = 8;\n      }\n      *(undefined2 *)((long)param_2 + 0x22) = 0;\n      if ((uVar2 & 0x80) == 0) goto LAB_00116233;\nLAB_00116344:\n      *(undefined8 *)((long)param_2 + 0xca) = *(undefined8 *)(param_1 + 0x27c);\n      *(undefined2 *)((long)param_2 + 0xd2) = *(undefined2 *)(param_1 + 0x284);\n      param_2[0xd] = *(uint *)(param_1 + 0x4a0);\n      goto joined_r0x00116370;\n    }\n    *(undefined *)(param_2 + 9) = 8;\n    *(undefined2 *)((long)param_2 + 0x22) = 0;\n    bVar7 = (-(sVar1 == 0) & 0xfcU) + 6;\n    lVar4 = *(long *)(param_1 + 0x250);\n    *(byte *)((long)param_2 + 0x25) = bVar7;\n    if (lVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Palette is NULL in indexed image\");\n    }\n    if ((uVar2 & 0x80) != 0) {\n      bVar6 = 8;\n      goto LAB_00116344;\n    }\n    param_2[0xd] = *(uint *)(param_1 + 0x4a0);\n  }\n  if ((uVar2 & 0x4000) != 0) {\n    bVar7 = bVar7 | 2;\n    *(byte *)((long)param_2 + 0x25) = bVar7;\n  }\n  if ((uVar2 & 0x600000) == 0) {\n    if ((((uVar2 & 0x40) == 0) || ((bVar7 & 0xfb) != 2)) || (*(long *)(param_1 + 0x378) == 0))\n    goto LAB_0011626b;\n    if (*(char *)(param_2 + 9) == '\\b') {\n      *(undefined *)((long)param_2 + 0x25) = 3;\n      goto LAB_001163d7;\n    }\nLAB_00116279:\n    if (((uVar2 & 4) != 0) && (*(byte *)(param_2 + 9) < 8)) {\n      *(undefined *)(param_2 + 9) = 8;\n    }\n    if (bVar7 != 3) goto LAB_0011629a;\nLAB_001163d7:\n    *(undefined *)((long)param_2 + 0x29) = 1;\n    if ((uVar2 & 0x40000) == 0) goto LAB_001162c3;\n    bVar7 = 3;\nLAB_001163e9:\n    bVar7 = bVar7 & 0xfb;\n    *(byte *)((long)param_2 + 0x25) = bVar7;\n    *(undefined2 *)((long)param_2 + 0x22) = 0;\nLAB_001163f5:\n    if ((((uVar2 & 0x8000) == 0) || ((bVar7 & 0xfd) != 0)) ||\n       (*(char *)((long)param_2 + 0x29) = *(char *)((long)param_2 + 0x29) + '\\x01',\n       (uVar2 & 0x1000000) == 0)) goto LAB_001162c3;\n    *(byte *)((long)param_2 + 0x25) = bVar7 | 4;\n    if ((uVar2 & 0x100000) != 0) goto LAB_00116430;\nLAB_001162ce:\n    cVar8 = *(char *)((long)param_2 + 0x29);\n    cVar3 = *(char *)(param_2 + 9);\n  }\n  else {\n    bVar7 = bVar7 & 0xfd;\n    *(byte *)((long)param_2 + 0x25) = bVar7;\nLAB_0011626b:\n    if (((uVar2 & 0x200) == 0) || (*(char *)(param_2 + 9) != '\\b')) goto LAB_00116279;\n    if (bVar7 == 3) goto LAB_001163d7;\n    *(undefined *)(param_2 + 9) = 0x10;\nLAB_0011629a:\n    *(byte *)((long)param_2 + 0x29) = (-((bVar7 & 2) == 0) & 0xfeU) + 3;\n    if ((uVar2 & 0x40000) != 0) goto LAB_001163e9;\n    if ((bVar7 & 4) == 0) goto LAB_001163f5;\n    *(char *)((long)param_2 + 0x29) = *(char *)((long)param_2 + 0x29) + '\\x01';\nLAB_001162c3:\n    if ((uVar2 & 0x100000) == 0) goto LAB_001162ce;\nLAB_00116430:\n    cVar3 = *(char *)(param_1 + 0x128);\n    if (cVar3 == '\\0') {\n      cVar3 = *(char *)(param_2 + 9);\n    }\n    else {\n      *(char *)(param_2 + 9) = cVar3;\n    }\n    cVar8 = *(char *)(param_1 + 0x129);\n    if (cVar8 == '\\0') {\n      bVar7 = cVar3 * *(char *)((long)param_2 + 0x29);\n      uVar2 = *param_2;\n      *(byte *)((long)param_2 + 0x2a) = bVar7;\n      goto joined_r0x00116458;\n    }\n    *(char *)((long)param_2 + 0x29) = cVar8;\n  }\n  bVar7 = cVar3 * cVar8;\n  uVar2 = *param_2;\n  *(byte *)((long)param_2 + 0x2a) = bVar7;\njoined_r0x00116458:\n  if (bVar7 < 8) {\n    uVar5 = (ulong)bVar7 * (ulong)uVar2 + 7 >> 3;\n    *(ulong *)(param_2 + 4) = uVar5;\n    *(ulong *)(param_1 + 0x240) = uVar5;\n    return;\n  }\n  lVar4 = (ulong)(bVar7 >> 3) * (ulong)uVar2;\n  *(long *)(param_2 + 4) = lVar4;\n  *(long *)(param_1 + 0x240) = lVar4;\n  return;\n}\n\n", "FUN_00116510": "\nvoid FUN_00116510(long param_1,uint *param_2)\n\n{\n  int *piVar1;\n  int *piVar2;\n  byte bVar3;\n  undefined uVar4;\n  undefined4 uVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  bool bVar10;\n  char cVar11;\n  short sVar12;\n  ulong uVar13;\n  undefined *puVar14;\n  long lVar15;\n  undefined *puVar16;\n  undefined *puVar17;\n  byte *pbVar18;\n  byte *pbVar19;\n  byte bVar20;\n  byte bVar21;\n  int iVar22;\n  uint uVar23;\n  undefined uVar29;\n  undefined *puVar24;\n  long lVar25;\n  ushort *puVar26;\n  ushort *puVar27;\n  undefined *puVar28;\n  char cVar30;\n  int iVar31;\n  int *piVar32;\n  ushort *puVar33;\n  int iVar34;\n  long lVar35;\n  byte *pbVar36;\n  byte *pbVar37;\n  uint uVar38;\n  ushort *puVar39;\n  undefined uVar40;\n  uint uVar41;\n  undefined2 uVar42;\n  uint uVar43;\n  byte bVar44;\n  uint uVar45;\n  uint uVar46;\n  ushort uVar47;\n  long in_FS_OFFSET;\n  bool bVar48;\n  int local_58 [6];\n  long local_40;\n  \n  lVar15 = *(long *)(param_1 + 0x228);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (lVar15 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"NULL row buffer\");\n  }\n  if ((*(uint *)(param_1 + 0x130) & 0x4040) == 0x4000) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Uninitialized row\");\n  }\n  uVar43 = *(uint *)(param_1 + 0x134);\n  if ((uVar43 & 0x1000) == 0) {\nLAB_001165a5:\n    if (((uVar43 & 0x40080) == 0x40000) && ((*(byte *)(param_2 + 4) & 0xfd) == 4)) {\nLAB_0011717f:\n      FUN_001214d0(param_2,*(long *)(param_1 + 0x228) + 1,0);\n      uVar43 = *(uint *)(param_1 + 0x134);\n    }\n  }\n  else {\n    uVar47 = *(ushort *)(param_1 + 0x260);\n    lVar25 = lVar15 + 1;\n    if (*(char *)(param_2 + 4) != '\\x03') {\n      if ((uVar47 == 0) || ((uVar43 & 0x2000000) == 0)) {\n        FUN_001139d0(param_2,lVar25,0);\n        uVar43 = *(uint *)(param_1 + 0x134);\n      }\n      else {\n        FUN_001139d0(param_2,lVar25,param_1 + 0x2f0);\n        uVar43 = *(uint *)(param_1 + 0x134);\n      }\n      goto LAB_001165a5;\n    }\n    bVar20 = *(byte *)((long)param_2 + 0x11);\n    lVar35 = *(long *)(param_1 + 0x2e8);\n    uVar23 = *param_2;\n    uVar13 = (ulong)uVar23;\n    lVar6 = *(long *)(param_1 + 0x250);\n    if (bVar20 < 8) {\n      pbVar18 = (byte *)(lVar15 + uVar13);\n      if (bVar20 == 2) {\n        pbVar36 = (byte *)(lVar25 + (ulong)(uVar23 - 1 >> 2));\n        uVar43 = (uVar23 * 2 + 6 ^ 0xfffffffe) & 6;\n        if (uVar23 != 0) {\n          pbVar37 = pbVar18 + ~(ulong)(uVar23 - 1);\n          do {\n            *pbVar18 = (byte)((int)(uint)*pbVar36 >> ((byte)uVar43 & 0x1f)) & 3;\n            if (uVar43 == 6) {\n              pbVar36 = pbVar36 + -1;\n              uVar43 = 0;\n            }\n            else {\n              uVar43 = uVar43 + 2;\n            }\n            pbVar18 = pbVar18 + -1;\n          } while (pbVar18 != pbVar37);\n        }\n      }\n      else if (bVar20 == 4) {\n        pbVar36 = (byte *)(lVar25 + (ulong)(uVar23 - 1 >> 1));\n        uVar43 = uVar23 * 4 & 4;\n        if (uVar23 != 0) {\n          pbVar37 = pbVar18 + ~(ulong)(uVar23 - 1);\n          do {\n            *pbVar18 = (byte)((int)(uint)*pbVar36 >> ((byte)uVar43 & 0x1f)) & 0xf;\n            if (uVar43 == 4) {\n              pbVar36 = pbVar36 + -1;\n              uVar43 = 0;\n            }\n            else {\n              uVar43 = uVar43 + 4;\n            }\n            pbVar18 = pbVar18 + -1;\n          } while (pbVar18 != pbVar37);\n        }\n      }\n      else if (bVar20 == 1) {\n        pbVar36 = (byte *)(lVar25 + (ulong)(uVar23 - 1 >> 3));\n        uVar43 = ~(uVar23 + 7) & 7;\n        if (uVar23 != 0) {\n          pbVar37 = pbVar18 + ~(ulong)(uVar23 - 1);\n          do {\n            *pbVar18 = (byte)((int)(uint)*pbVar36 >> ((byte)uVar43 & 0x1f)) & 1;\n            if (uVar43 == 7) {\n              pbVar36 = pbVar36 + -1;\n              uVar43 = 0;\n            }\n            else {\n              uVar43 = uVar43 + 1;\n            }\n            pbVar18 = pbVar18 + -1;\n          } while (pbVar18 != pbVar37);\n        }\n      }\n      *(undefined *)((long)param_2 + 0x11) = 8;\n      *(undefined *)((long)param_2 + 0x13) = 8;\n      *(ulong *)(param_2 + 2) = uVar13;\nLAB_0011764c:\n      pbVar18 = (byte *)(lVar15 + uVar13);\n      if (uVar47 == 0) {\n        if (uVar23 != 0) {\n          puVar16 = (undefined *)(lVar15 + (ulong)(uVar23 * 3));\n          pbVar36 = pbVar18;\n          do {\n            pbVar37 = pbVar36 + -1;\n            *puVar16 = *(undefined *)(lVar6 + 2 + (ulong)*pbVar36 * 3);\n            puVar16[-1] = *(undefined *)(lVar6 + 1 + (ulong)*pbVar36 * 3);\n            puVar16[-2] = *(undefined *)(lVar6 + (ulong)*pbVar36 * 3);\n            puVar16 = puVar16 + -3;\n            pbVar36 = pbVar37;\n          } while (pbVar37 != pbVar18 + ~(ulong)(uVar23 - 1));\n        }\n        *(ulong *)(param_2 + 2) = (ulong)(uVar23 * 3);\n        param_2[4] = 0x18030802;\n        uVar43 = *(uint *)(param_1 + 0x134);\n        goto LAB_001165b7;\n      }\n      if (uVar23 != 0) {\n        puVar16 = (undefined *)(lVar15 + uVar13 * 4);\n        pbVar36 = pbVar18;\n        do {\n          uVar29 = 0xff;\n          if (*pbVar36 < uVar47) {\n            uVar29 = *(undefined *)(lVar35 + (ulong)*pbVar36);\n          }\n          *puVar16 = uVar29;\n          pbVar37 = pbVar36 + -1;\n          puVar16[-1] = *(undefined *)(lVar6 + 2 + (ulong)*pbVar36 * 3);\n          puVar16[-2] = *(undefined *)(lVar6 + 1 + (ulong)*pbVar36 * 3);\n          puVar16[-3] = *(undefined *)(lVar6 + (ulong)*pbVar36 * 3);\n          puVar16 = puVar16 + -4;\n          pbVar36 = pbVar37;\n        } while (pbVar37 != pbVar18 + ~(ulong)(uVar23 - 1));\n      }\n      uVar43 = *(uint *)(param_1 + 0x134);\n      param_2[4] = 0x20040806;\n      *(ulong *)(param_2 + 2) = (ulong)(uVar23 * 4);\n      if ((uVar43 & 0x40080) != 0x40000) goto LAB_001165b7;\n      goto LAB_0011717f;\n    }\n    if (bVar20 == 8) goto LAB_0011764c;\n  }\nLAB_001165b7:\n  if (((uVar43 & 0x600000) != 0) && (bVar20 = *(byte *)(param_2 + 4), (bVar20 & 3) == 2)) {\n    uVar23 = *param_2;\n    uVar47 = *(ushort *)(param_1 + 0x3d4);\n    bVar44 = bVar20 & 4;\n    puVar33 = (ushort *)(*(long *)(param_1 + 0x228) + 1);\n    uVar38 = (uint)*(ushort *)(param_1 + 0x3d2);\n    iVar22 = 0x8000 - (uVar38 + uVar47);\n    cVar11 = *(char *)((long)param_2 + 0x11);\n    uVar41 = (uint)uVar47;\n    if (cVar11 == '\\b') {\n      lVar15 = *(long *)(param_1 + 0x2b8);\n      if ((lVar15 == 0) || (lVar25 = *(long *)(param_1 + 0x2c0), lVar25 == 0)) {\n        uVar45 = 0;\n        if (uVar23 != 0) {\n          bVar48 = false;\n          puVar26 = puVar33;\n          do {\n            bVar20 = *(byte *)puVar33;\n            puVar27 = (ushort *)((long)puVar26 + 1);\n            if ((bVar20 != *(byte *)((long)puVar33 + 1)) || (bVar20 != *(byte *)(puVar33 + 1))) {\n              bVar48 = true;\n              bVar20 = (byte)((uint)*(byte *)(puVar33 + 1) * iVar22 +\n                              bVar20 * uVar38 + *(byte *)((long)puVar33 + 1) * uVar41 >> 0xf);\n            }\n            *(byte *)puVar26 = bVar20;\n            if (bVar44 == 0) {\n              puVar33 = (ushort *)((long)puVar33 + 3);\n            }\n            else {\n              pbVar18 = (byte *)((long)puVar33 + 3);\n              puVar27 = puVar26 + 1;\n              puVar33 = puVar33 + 2;\n              *(byte *)((long)puVar26 + 1) = *pbVar18;\n            }\n            uVar45 = uVar45 + 1;\n            puVar26 = puVar27;\n          } while (uVar23 != uVar45);\n          uVar43 = *(uint *)(param_1 + 0x134);\n          bVar20 = *(byte *)(param_2 + 4);\n          cVar11 = *(char *)((long)param_2 + 0x11);\n          goto LAB_001182d7;\n        }\n      }\n      else if (uVar23 != 0) {\n        bVar48 = false;\n        uVar43 = 0;\n        puVar26 = puVar33;\n        do {\n          bVar20 = *(byte *)puVar33;\n          puVar27 = (ushort *)((long)puVar26 + 1);\n          if ((bVar20 == *(byte *)((long)puVar33 + 1)) && (bVar20 == *(byte *)(puVar33 + 1))) {\n            if (*(long *)(param_1 + 0x2a8) != 0) {\n              bVar20 = *(byte *)(*(long *)(param_1 + 0x2a8) + (ulong)bVar20);\n            }\n            *(byte *)puVar26 = bVar20;\n          }\n          else {\n            bVar48 = true;\n            *(byte *)puVar26 =\n                 *(byte *)(lVar15 + (ulong)((uint)*(byte *)(lVar25 + (ulong)*(byte *)(puVar33 + 1))\n                                            * iVar22 +\n                                            *(byte *)(lVar25 + (ulong)bVar20) * uVar38 + 0x4000 +\n                                            (uint)*(byte *)(lVar25 + (ulong)*(byte *)((long)puVar33\n                                                                                     + 1)) *\n                                            (uint)uVar47 >> 0xf));\n          }\n          if (bVar44 == 0) {\n            puVar33 = (ushort *)((long)puVar33 + 3);\n          }\n          else {\n            pbVar18 = (byte *)((long)puVar33 + 3);\n            puVar27 = puVar26 + 1;\n            puVar33 = puVar33 + 2;\n            *(byte *)((long)puVar26 + 1) = *pbVar18;\n          }\n          uVar43 = uVar43 + 1;\n          puVar26 = puVar27;\n        } while (uVar23 != uVar43);\n        goto LAB_001182c4;\n      }\nLAB_00118fb7:\n      bVar48 = false;\n    }\n    else {\n      lVar15 = *(long *)(param_1 + 0x2d0);\n      if ((lVar15 == 0) || (lVar25 = *(long *)(param_1 + 0x2c8), lVar25 == 0)) {\n        bVar48 = false;\n        uVar45 = 0;\n        puVar26 = puVar33;\n        if (uVar23 == 0) goto LAB_00118fb7;\n        do {\n          sVar12 = CONCAT11(*(byte *)puVar33,*(byte *)((long)puVar33 + 1));\n          if ((sVar12 != CONCAT11(*(byte *)(puVar33 + 1),*(byte *)((long)puVar33 + 3))) ||\n             (sVar12 != CONCAT11(*(byte *)(puVar33 + 2),*(byte *)((long)puVar33 + 5)))) {\n            bVar48 = true;\n          }\n          uVar47 = (ushort)((uint)CONCAT11(*(byte *)(puVar33 + 2),*(byte *)((long)puVar33 + 5)) *\n                            iVar22 + CONCAT11(*(byte *)puVar33,*(byte *)((long)puVar33 + 1)) *\n                                     uVar38 + 0x4000 +\n                                     CONCAT11(*(byte *)(puVar33 + 1),*(byte *)((long)puVar33 + 3)) *\n                                     uVar41 >> 0xf);\n          *puVar26 = uVar47 << 8 | uVar47 >> 8;\n          if (bVar44 == 0) {\n            puVar27 = puVar33 + 3;\n            puVar39 = puVar26 + 1;\n          }\n          else {\n            puVar39 = puVar26 + 2;\n            puVar27 = puVar33 + 4;\n            *(byte *)(puVar26 + 1) = *(byte *)(puVar33 + 3);\n            *(byte *)((long)puVar26 + 3) = *(byte *)((long)puVar33 + 7);\n          }\n          uVar45 = uVar45 + 1;\n          puVar33 = puVar27;\n          puVar26 = puVar39;\n        } while (uVar23 != uVar45);\n        uVar43 = *(uint *)(param_1 + 0x134);\n        bVar20 = *(byte *)(param_2 + 4);\n        cVar11 = *(char *)((long)param_2 + 0x11);\n      }\n      else {\n        if (uVar23 == 0) goto LAB_00118fb7;\n        bVar48 = false;\n        uVar43 = 0;\n        puVar26 = puVar33;\n        do {\n          bVar20 = *(byte *)puVar33;\n          bVar3 = *(byte *)((long)puVar33 + 1);\n          sVar12 = CONCAT11(bVar20,bVar3);\n          if ((sVar12 == CONCAT11(*(byte *)(puVar33 + 1),*(byte *)((long)puVar33 + 3))) &&\n             (sVar12 == CONCAT11(*(byte *)(puVar33 + 2),*(byte *)((long)puVar33 + 5)))) {\n            if (*(long *)(param_1 + 0x2b0) != 0) {\n              sVar12 = *(short *)(*(long *)(*(long *)(param_1 + 0x2b0) +\n                                           (long)((int)(uint)bVar3 >>\n                                                 ((byte)*(undefined4 *)(param_1 + 0x2a0) & 0x1f)) *\n                                           8) + (ulong)bVar20 * 2);\n              bVar20 = (byte)((ushort)sVar12 >> 8);\n            }\n          }\n          else {\n            bVar21 = (byte)*(undefined4 *)(param_1 + 0x2a0);\n            bVar48 = true;\n            uVar45 = *(ushort *)\n                      (*(long *)(lVar15 + (long)((int)(uint)*(byte *)((long)puVar33 + 3) >>\n                                                (bVar21 & 0x1f)) * 8) +\n                      (ulong)*(byte *)(puVar33 + 1) * 2) * uVar41 + 0x4000 +\n                     *(ushort *)\n                      (*(long *)(lVar15 + (long)((int)(uint)bVar3 >> (bVar21 & 0x1f)) * 8) +\n                      (ulong)bVar20 * 2) * uVar38 +\n                     (uint)*(ushort *)\n                            (*(long *)(lVar15 + (long)((int)(uint)*(byte *)((long)puVar33 + 5) >>\n                                                      (bVar21 & 0x1f)) * 8) +\n                            (ulong)*(byte *)(puVar33 + 2) * 2) * iVar22;\n            sVar12 = *(short *)(*(long *)(lVar25 + (long)((int)(uVar45 >> 0xf & 0xff) >>\n                                                         (bVar21 & 0x1f)) * 8) +\n                               (ulong)(uVar45 >> 0x17 & 0xff) * 2);\n            bVar20 = (byte)((ushort)sVar12 >> 8);\n          }\n          *(byte *)puVar26 = bVar20;\n          *(byte *)((long)puVar26 + 1) = (byte)sVar12;\n          if (bVar44 == 0) {\n            puVar27 = puVar33 + 3;\n            puVar39 = puVar26 + 1;\n          }\n          else {\n            puVar39 = puVar26 + 2;\n            puVar27 = puVar33 + 4;\n            *(byte *)(puVar26 + 1) = *(byte *)(puVar33 + 3);\n            *(byte *)((long)puVar26 + 3) = *(byte *)((long)puVar33 + 7);\n          }\n          uVar43 = uVar43 + 1;\n          puVar33 = puVar27;\n          puVar26 = puVar39;\n        } while (uVar23 != uVar43);\nLAB_001182c4:\n        uVar43 = *(uint *)(param_1 + 0x134);\n        bVar20 = *(byte *)(param_2 + 4);\n        cVar11 = *(char *)((long)param_2 + 0x11);\n      }\n    }\nLAB_001182d7:\n    *(byte *)(param_2 + 4) = bVar20 & 0xfd;\n    cVar30 = *(char *)((long)param_2 + 0x12) + -2;\n    *(char *)((long)param_2 + 0x12) = cVar30;\n    bVar20 = cVar30 * cVar11;\n    *(byte *)((long)param_2 + 0x13) = bVar20;\n    if (bVar20 < 8) {\n      uVar13 = (ulong)bVar20 * (ulong)uVar23 + 7 >> 3;\n    }\n    else {\n      uVar13 = (ulong)(bVar20 >> 3) * (ulong)uVar23;\n    }\n    *(ulong *)(param_2 + 2) = uVar13;\n    if (bVar48) {\n      *(undefined *)(param_1 + 0x3d0) = 1;\n      uVar23 = uVar43 & 0x600000;\n      if (uVar23 == 0x400000) {\n        png_warning();\n        uVar43 = *(uint *)(param_1 + 0x134);\n        uVar23 = uVar43 & 0x600000;\n      }\n      if (uVar23 == 0x200000) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"png_do_rgb_to_gray found nongray pixel\");\n      }\n    }\n  }\n  if (((uVar43 & 0x4000) == 0) || ((*(byte *)(param_1 + 0x12d) & 8) != 0)) {\n    if ((uVar43 & 0x80) == 0) goto LAB_001165d9;\nLAB_00116b50:\n    lVar15 = *(long *)(param_1 + 0x228);\n    bVar20 = *(byte *)(param_2 + 4);\n    lVar25 = *(long *)(param_1 + 0x2a8);\n    lVar35 = *(long *)(param_1 + 0x2b8);\n    lVar6 = *(long *)(param_1 + 0x2c0);\n    pbVar18 = (byte *)(lVar15 + 1);\n    uVar38 = *(uint *)(param_1 + 0x130) & 0x2000;\n    lVar7 = *(long *)(param_1 + 0x2b0);\n    lVar8 = *(long *)(param_1 + 0x2c8);\n    lVar9 = *(long *)(param_1 + 0x2d0);\n    uVar23 = *param_2;\n    bVar44 = (byte)*(undefined4 *)(param_1 + 0x2a0);\n    if (bVar20 == 4) {\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        if ((lVar6 == 0 || lVar35 == 0) || (lVar25 == 0)) {\n          if (uVar23 != 0) {\n            do {\n              bVar20 = pbVar18[1];\n              if (bVar20 == 0) {\n                *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x284);\n              }\n              else if (bVar20 != 0xff) {\n                uVar43 = (uint)*(ushort *)(param_1 + 0x284) * (0xff - (uint)bVar20) + 0x80 +\n                         (uint)(ushort)((ushort)bVar20 * (ushort)*pbVar18);\n                *pbVar18 = (byte)(uVar43 + (uVar43 >> 8 & 0xff) >> 8);\n              }\n              pbVar18 = pbVar18 + 2;\n            } while (pbVar18 != (byte *)(lVar15 + 3 + (ulong)(uVar23 - 1) * 2));\n            goto LAB_00118190;\n          }\n        }\n        else if (uVar23 != 0) {\n          do {\n            bVar20 = pbVar18[1];\n            if (bVar20 == 0xff) {\n              *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n            }\n            else if (bVar20 == 0) {\n              *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x284);\n            }\n            else {\n              uVar43 = (ushort)((ushort)bVar20 * (ushort)*(byte *)(lVar6 + (ulong)*pbVar18)) + 0x80\n                       + (uint)*(ushort *)(param_1 + 0x28e) * (0xff - (uint)bVar20);\n              uVar43 = uVar43 + (uVar43 >> 8 & 0xff) >> 8 & 0xff;\n              bVar20 = (byte)uVar43;\n              if (uVar38 == 0) {\n                bVar20 = *(byte *)(lVar35 + (ulong)uVar43);\n              }\n              *pbVar18 = bVar20;\n            }\n            pbVar18 = pbVar18 + 2;\n          } while (pbVar18 != (byte *)(lVar15 + 3 + (ulong)(uVar23 - 1) * 2));\n          goto LAB_00118190;\n        }\n      }\n      else if ((lVar8 == 0 || lVar7 == 0) || (lVar9 == 0)) {\n        if (uVar23 != 0) {\n          do {\n            uVar47 = (ushort)pbVar18[2] * 0x100 + (ushort)pbVar18[3];\n            if (uVar47 == 0) {\n              uVar42 = *(undefined2 *)(param_1 + 0x284);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n            }\n            else if (uVar47 != 0xffff) {\n              uVar43 = ((uint)*pbVar18 * 0x100 + (uint)pbVar18[1] & 0xffff) * (uint)uVar47 + 0x8000\n                       + (0xffff - (uint)uVar47) * (uint)*(ushort *)(param_1 + 0x284);\n              iVar22 = (uVar43 >> 0x10) + uVar43;\n              *pbVar18 = (byte)((uint)iVar22 >> 0x18);\n              pbVar18[1] = (byte)((uint)iVar22 >> 0x10);\n            }\n            pbVar18 = pbVar18 + 4;\n          } while (pbVar18 != (byte *)(lVar15 + 5 + (ulong)(uVar23 - 1) * 4));\n          goto LAB_00118190;\n        }\n      }\n      else if (uVar23 != 0) {\n        do {\n          uVar47 = (ushort)pbVar18[2] * 0x100 + (ushort)pbVar18[3];\n          if (uVar47 == 0xffff) {\n            uVar42 = *(undefined2 *)\n                      (*(long *)(lVar7 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8) +\n                      (ulong)*pbVar18 * 2);\n            pbVar18[1] = (byte)uVar42;\n            *pbVar18 = (byte)((ushort)uVar42 >> 8);\n          }\n          else if (uVar47 == 0) {\n            uVar42 = *(undefined2 *)(param_1 + 0x284);\n            pbVar18[1] = (byte)uVar42;\n            *pbVar18 = (byte)((ushort)uVar42 >> 8);\n          }\n          else {\n            uVar43 = (uint)*(ushort *)\n                            (*(long *)(lVar9 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8)\n                            + (ulong)*pbVar18 * 2) * (uint)uVar47 + 0x8000 +\n                     (0xffff - (uint)uVar47) * (uint)*(ushort *)(param_1 + 0x28e);\n            uVar43 = (uVar43 >> 0x10) + uVar43;\n            bVar20 = (byte)(uVar43 >> 0x10);\n            uVar47 = (ushort)(uVar43 >> 0x18);\n            if (uVar38 == 0) {\n              uVar47 = *(ushort *)\n                        (*(long *)(lVar8 + (long)((int)(uVar43 >> 0x10 & 0xff) >> (bVar44 & 0x1f)) *\n                                           8) + (ulong)uVar47 * 2);\n              bVar20 = (byte)uVar47;\n              uVar47 = uVar47 >> 8;\n            }\n            *pbVar18 = (byte)uVar47;\n            pbVar18[1] = bVar20;\n          }\n          pbVar18 = pbVar18 + 4;\n        } while (pbVar18 != (byte *)(lVar15 + 5 + (ulong)(uVar23 - 1) * 4));\nLAB_00118190:\n        uVar43 = *(uint *)(param_1 + 0x134);\n        goto switchD_001173f4_caseD_0;\n      }\n      goto LAB_00117588;\n    }\n    if (4 < bVar20) {\n      if (bVar20 == 6) {\n        if (*(char *)((long)param_2 + 0x11) == '\\b') {\n          if ((lVar6 == 0 || lVar35 == 0) || (lVar25 == 0)) {\n            if (uVar23 != 0) {\n              do {\n                bVar20 = pbVar18[3];\n                if (bVar20 == 0) {\n                  *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x27e);\n                  pbVar18[1] = (byte)*(undefined2 *)(param_1 + 0x280);\n                  pbVar18[2] = (byte)*(undefined2 *)(param_1 + 0x282);\n                }\n                else if (bVar20 != 0xff) {\n                  iVar22 = 0xff - (uint)bVar20;\n                  uVar43 = (ushort)((ushort)bVar20 * (ushort)*pbVar18) + 0x80 +\n                           (uint)*(ushort *)(param_1 + 0x27e) * iVar22;\n                  *pbVar18 = (byte)(uVar43 + (uVar43 >> 8 & 0xff) >> 8);\n                  uVar43 = (ushort)((ushort)bVar20 * (ushort)pbVar18[1]) + 0x80 +\n                           (uint)*(ushort *)(param_1 + 0x280) * iVar22;\n                  pbVar18[1] = (byte)(uVar43 + (uVar43 >> 8 & 0xff) >> 8);\n                  uVar43 = (ushort)((ushort)bVar20 * (ushort)pbVar18[2]) + 0x80 +\n                           (uint)(ushort)((short)iVar22 * *(short *)(param_1 + 0x282));\n                  pbVar18[2] = (byte)(uVar43 + (uVar43 >> 8 & 0xff) >> 8);\n                }\n                pbVar18 = pbVar18 + 4;\n              } while (pbVar18 != (byte *)(lVar15 + 5 + (ulong)(uVar23 - 1) * 4));\n              goto LAB_00118c38;\n            }\n          }\n          else if (uVar23 != 0) {\n            do {\n              bVar20 = pbVar18[3];\n              if (bVar20 == 0xff) {\n                *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                pbVar18[1] = *(byte *)(lVar25 + (ulong)pbVar18[1]);\n                pbVar18[2] = *(byte *)(lVar25 + (ulong)pbVar18[2]);\n              }\n              else if (bVar20 == 0) {\n                *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x27e);\n                pbVar18[1] = (byte)*(undefined2 *)(param_1 + 0x280);\n                pbVar18[2] = (byte)*(undefined2 *)(param_1 + 0x282);\n              }\n              else {\n                iVar22 = 0xff - (uint)bVar20;\n                uVar43 = (ushort)((ushort)bVar20 * (ushort)*(byte *)(lVar6 + (ulong)*pbVar18)) +\n                         0x80 + (uint)*(ushort *)(param_1 + 0x288) * iVar22;\n                uVar43 = uVar43 + (uVar43 >> 8 & 0xff) >> 8 & 0xff;\n                bVar44 = (byte)uVar43;\n                if (uVar38 == 0) {\n                  bVar44 = *(byte *)(lVar35 + (ulong)uVar43);\n                }\n                *pbVar18 = bVar44;\n                uVar43 = (ushort)((ushort)bVar20 * (ushort)*(byte *)(lVar6 + (ulong)pbVar18[1])) +\n                         0x80 + (uint)*(ushort *)(param_1 + 0x28a) * iVar22;\n                uVar43 = uVar43 + (uVar43 >> 8 & 0xff) >> 8 & 0xff;\n                bVar44 = (byte)uVar43;\n                if (uVar38 == 0) {\n                  bVar44 = *(byte *)(lVar35 + (ulong)uVar43);\n                }\n                pbVar18[1] = bVar44;\n                uVar43 = (ushort)((ushort)bVar20 * (ushort)*(byte *)(lVar6 + (ulong)pbVar18[2])) +\n                         0x80 + (uint)(ushort)((short)iVar22 * *(short *)(param_1 + 0x28c));\n                uVar43 = uVar43 + (uVar43 >> 8 & 0xff) >> 8 & 0xff;\n                bVar20 = (byte)uVar43;\n                if (uVar38 == 0) {\n                  bVar20 = *(byte *)(lVar35 + (ulong)uVar43);\n                }\n                pbVar18[2] = bVar20;\n              }\n              pbVar18 = pbVar18 + 4;\n            } while (pbVar18 != (byte *)(lVar15 + 5 + (ulong)(uVar23 - 1) * 4));\nLAB_00118c38:\n            uVar43 = *(uint *)(param_1 + 0x134);\n            goto switchD_001173f4_caseD_0;\n          }\n        }\n        else if ((lVar8 == 0 || lVar7 == 0) || (lVar9 == 0)) {\n          if (uVar23 != 0) {\n            do {\n              uVar47 = (ushort)pbVar18[6] * 0x100 + (ushort)pbVar18[7];\n              if (uVar47 == 0) {\n                uVar42 = *(undefined2 *)(param_1 + 0x27e);\n                pbVar18[1] = (byte)uVar42;\n                *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                uVar42 = *(undefined2 *)(param_1 + 0x280);\n                pbVar18[3] = (byte)uVar42;\n                pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n                uVar42 = *(undefined2 *)(param_1 + 0x282);\n                pbVar18[5] = (byte)uVar42;\n                pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n              }\n              else if (uVar47 != 0xffff) {\n                iVar34 = 0xffff - (uint)uVar47;\n                uVar43 = ((uint)*pbVar18 * 0x100 + (uint)pbVar18[1] & 0xffff) * (uint)uVar47 +\n                         0x8000 + (uint)*(ushort *)(param_1 + 0x27e) * iVar34;\n                iVar22 = (uVar43 >> 0x10) + uVar43;\n                *pbVar18 = (byte)((uint)iVar22 >> 0x18);\n                pbVar18[1] = (byte)((uint)iVar22 >> 0x10);\n                uVar43 = (uint)*(ushort *)(param_1 + 0x280) * iVar34 + 0x8000 +\n                         ((uint)pbVar18[2] * 0x100 + (uint)pbVar18[3] & 0xffff) * (uint)uVar47;\n                iVar22 = (uVar43 >> 0x10) + uVar43;\n                pbVar18[2] = (byte)((uint)iVar22 >> 0x18);\n                pbVar18[3] = (byte)((uint)iVar22 >> 0x10);\n                uVar43 = iVar34 * (uint)*(ushort *)(param_1 + 0x282) + 0x8000 +\n                         (uint)uVar47 * ((uint)pbVar18[4] * 0x100 + (uint)pbVar18[5] & 0xffff);\n                iVar22 = (uVar43 >> 0x10) + uVar43;\n                pbVar18[4] = (byte)((uint)iVar22 >> 0x18);\n                pbVar18[5] = (byte)((uint)iVar22 >> 0x10);\n              }\n              pbVar18 = pbVar18 + 8;\n            } while (pbVar18 != (byte *)(lVar15 + 9 + (ulong)(uVar23 - 1) * 8));\n            goto LAB_00118190;\n          }\n        }\n        else if (uVar23 != 0) {\n          do {\n            uVar47 = (ushort)pbVar18[6] * 0x100 + (ushort)pbVar18[7];\n            if (uVar47 == 0xffff) {\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)*pbVar18 * 2);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[3] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)pbVar18[2] * 2);\n              pbVar18[3] = (byte)uVar42;\n              pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[5] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)pbVar18[4] * 2);\n              pbVar18[5] = (byte)uVar42;\n              pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n            }\n            else if (uVar47 == 0) {\n              uVar42 = *(undefined2 *)(param_1 + 0x27e);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)(param_1 + 0x280);\n              pbVar18[3] = (byte)uVar42;\n              pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)(param_1 + 0x282);\n              pbVar18[5] = (byte)uVar42;\n              pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n            }\n            else {\n              uVar41 = (uint)uVar47;\n              iVar22 = 0xffff - uVar41;\n              uVar43 = *(ushort *)\n                        (*(long *)(lVar9 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)*pbVar18 * 2) * uVar41 + 0x8000 +\n                       (uint)*(ushort *)(param_1 + 0x288) * iVar22;\n              uVar43 = (uVar43 >> 0x10) + uVar43;\n              bVar20 = (byte)(uVar43 >> 0x10);\n              uVar47 = (ushort)(uVar43 >> 0x18);\n              if (uVar38 == 0) {\n                uVar47 = *(ushort *)\n                          (*(long *)(lVar8 + (long)((int)(uVar43 >> 0x10 & 0xff) >> (bVar44 & 0x1f))\n                                             * 8) + (ulong)uVar47 * 2);\n                bVar20 = (byte)uVar47;\n                uVar47 = uVar47 >> 8;\n              }\n              *pbVar18 = (byte)uVar47;\n              pbVar18[1] = bVar20;\n              uVar43 = *(ushort *)\n                        (*(long *)(lVar9 + (long)((int)(uint)pbVar18[3] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)pbVar18[2] * 2) * uVar41 + 0x8000 +\n                       (uint)*(ushort *)(param_1 + 0x28a) * iVar22;\n              uVar43 = (uVar43 >> 0x10) + uVar43;\n              uVar42 = (undefined2)(uVar43 >> 0x10);\n              if (uVar38 == 0) {\n                uVar42 = *(undefined2 *)\n                          (*(long *)(lVar8 + (long)((int)(uVar43 >> 0x10 & 0xff) >> (bVar44 & 0x1f))\n                                             * 8) + (ulong)(uVar43 >> 0x18) * 2);\n              }\n              pbVar18[3] = (byte)uVar42;\n              pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n              uVar43 = uVar41 * *(ushort *)\n                                 (*(long *)(lVar9 + (long)((int)(uint)pbVar18[5] >> (bVar44 & 0x1f))\n                                                    * 8) + (ulong)pbVar18[4] * 2) + 0x8000 +\n                       iVar22 * (uint)*(ushort *)(param_1 + 0x28c);\n              uVar43 = (uVar43 >> 0x10) + uVar43;\n              uVar42 = (undefined2)(uVar43 >> 0x10);\n              if (uVar38 == 0) {\n                uVar42 = *(undefined2 *)\n                          (*(long *)(lVar8 + (long)((int)(uVar43 >> 0x10 & 0xff) >> (bVar44 & 0x1f))\n                                             * 8) + (ulong)(uVar43 >> 0x18) * 2);\n              }\n              pbVar18[5] = (byte)uVar42;\n              pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n            }\n            pbVar18 = pbVar18 + 8;\n          } while (pbVar18 != (byte *)(lVar15 + 9 + (ulong)(uVar23 - 1) * 8));\n          uVar43 = *(uint *)(param_1 + 0x134);\n          goto switchD_001173f4_caseD_0;\n        }\n      }\n      goto LAB_00117588;\n    }\n    if (bVar20 != 0) {\n      if (bVar20 == 2) {\n        if (*(char *)((long)param_2 + 0x11) == '\\b') {\n          if (lVar25 == 0) {\n            if (uVar23 != 0) {\n              uVar47 = *(ushort *)(param_1 + 0x2f2);\n              do {\n                if (((*pbVar18 == uVar47) && ((ushort)pbVar18[1] == *(ushort *)(param_1 + 0x2f4)))\n                   && ((ushort)pbVar18[2] == *(ushort *)(param_1 + 0x2f6))) {\n                  *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x27e);\n                  pbVar18[1] = (byte)*(undefined2 *)(param_1 + 0x280);\n                  pbVar18[2] = (byte)*(undefined2 *)(param_1 + 0x282);\n                }\n                pbVar18 = pbVar18 + 3;\n              } while (pbVar18 != (byte *)(lVar15 + (ulong)(uVar23 - 1) * 3 + 4));\n              goto LAB_00118190;\n            }\n          }\n          else if (uVar23 != 0) {\n            uVar47 = *(ushort *)(param_1 + 0x2f2);\n            do {\n              if (((*pbVar18 == uVar47) && ((ushort)pbVar18[1] == *(ushort *)(param_1 + 0x2f4))) &&\n                 ((ushort)pbVar18[2] == *(ushort *)(param_1 + 0x2f6))) {\n                *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x27e);\n                pbVar18[1] = (byte)*(undefined2 *)(param_1 + 0x280);\n                pbVar18[2] = (byte)*(undefined2 *)(param_1 + 0x282);\n              }\n              else {\n                *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                pbVar18[1] = *(byte *)(lVar25 + (ulong)pbVar18[1]);\n                pbVar18[2] = *(byte *)(lVar25 + (ulong)pbVar18[2]);\n              }\n              pbVar18 = pbVar18 + 3;\n            } while (pbVar18 != (byte *)(lVar15 + (ulong)(uVar23 - 1) * 3 + 4));\n            goto LAB_00118190;\n          }\n        }\n        else if (lVar7 == 0) {\n          if (uVar23 != 0) {\n            sVar12 = *(short *)(param_1 + 0x2f2);\n            do {\n              if ((((ushort)((ushort)*pbVar18 * 0x100 + (ushort)pbVar18[1]) == sVar12) &&\n                  ((ushort)((ushort)pbVar18[2] * 0x100 + (ushort)pbVar18[3]) ==\n                   *(short *)(param_1 + 0x2f4))) &&\n                 ((ushort)((ushort)pbVar18[4] * 0x100 + (ushort)pbVar18[5]) ==\n                  *(short *)(param_1 + 0x2f6))) {\n                uVar42 = *(undefined2 *)(param_1 + 0x27e);\n                pbVar18[1] = (byte)uVar42;\n                *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                uVar42 = *(undefined2 *)(param_1 + 0x280);\n                pbVar18[3] = (byte)uVar42;\n                pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n                uVar42 = *(undefined2 *)(param_1 + 0x282);\n                pbVar18[5] = (byte)uVar42;\n                pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n              }\n              pbVar18 = pbVar18 + 6;\n            } while (pbVar18 != (byte *)(lVar15 + 7 + (ulong)(uVar23 - 1) * 6));\n            goto LAB_00118190;\n          }\n        }\n        else if (uVar23 != 0) {\n          sVar12 = *(short *)(param_1 + 0x2f2);\n          do {\n            if ((((ushort)((ushort)*pbVar18 * 0x100 + (ushort)pbVar18[1]) == sVar12) &&\n                ((ushort)((ushort)pbVar18[2] * 0x100 + (ushort)pbVar18[3]) ==\n                 *(short *)(param_1 + 0x2f4))) &&\n               ((ushort)((ushort)pbVar18[4] * 0x100 + (ushort)pbVar18[5]) ==\n                *(short *)(param_1 + 0x2f6))) {\n              uVar42 = *(undefined2 *)(param_1 + 0x27e);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)(param_1 + 0x280);\n              pbVar18[3] = (byte)uVar42;\n              pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)(param_1 + 0x282);\n              pbVar18[5] = (byte)uVar42;\n              pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n            }\n            else {\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)*pbVar18 * 2);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[3] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)pbVar18[2] * 2);\n              pbVar18[3] = (byte)uVar42;\n              pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n              uVar42 = *(undefined2 *)\n                        (*(long *)(lVar7 + (long)((int)(uint)pbVar18[5] >> (bVar44 & 0x1f)) * 8) +\n                        (ulong)pbVar18[4] * 2);\n              pbVar18[5] = (byte)uVar42;\n              pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n            }\n            pbVar18 = pbVar18 + 6;\n          } while (pbVar18 != (byte *)(lVar15 + 7 + (ulong)(uVar23 - 1) * 6));\n          goto LAB_00118190;\n        }\n      }\n      goto LAB_00117588;\n    }\n    switch(*(undefined *)((long)param_2 + 0x11)) {\n    default:\nswitchD_001173f4_caseD_0:\n      if ((uVar43 & 0x602000) != 0x2000) goto LAB_001165eb;\n      if ((uVar43 & 0x80) == 0) goto LAB_00117250;\n      goto LAB_0011750e;\n    case 1:\n      if (uVar23 != 0) {\n        uVar47 = *(ushort *)(param_1 + 0x2f8);\n        uVar43 = 0;\n        iVar22 = 7;\n        do {\n          bVar20 = (byte)iVar22;\n          if (((int)(uint)*pbVar18 >> (bVar20 & 0x1f) & 1U) == (uint)uVar47) {\n            *pbVar18 = (char)*(undefined2 *)(param_1 + 0x284) << (bVar20 & 0x1f) |\n                       *pbVar18 & (byte)(0x7f7f >> (7 - bVar20 & 0x1f));\n          }\n          if (iVar22 == 0) {\n            pbVar18 = pbVar18 + 1;\n            iVar22 = 7;\n          }\n          else {\n            iVar22 = iVar22 + -1;\n          }\n          uVar43 = uVar43 + 1;\n        } while (uVar23 != uVar43);\n        goto LAB_00118190;\n      }\n      break;\n    case 2:\n      if (lVar25 == 0) {\n        if (uVar23 != 0) {\n          uVar47 = *(ushort *)(param_1 + 0x2f8);\n          uVar43 = 0;\n          iVar22 = 6;\n          do {\n            bVar20 = (byte)iVar22;\n            if (((int)(uint)*pbVar18 >> (bVar20 & 0x1f) & 3U) == (uint)uVar47) {\n              *pbVar18 = (char)*(undefined2 *)(param_1 + 0x284) << (bVar20 & 0x1f) |\n                         *pbVar18 & (byte)(0x3f3f >> (6 - bVar20 & 0x1f));\n            }\n            if (iVar22 == 0) {\n              pbVar18 = pbVar18 + 1;\n              iVar22 = 6;\n            }\n            else {\n              iVar22 = iVar22 + -2;\n            }\n            uVar43 = uVar43 + 1;\n          } while (uVar23 != uVar43);\n          goto LAB_00118190;\n        }\n      }\n      else if (uVar23 != 0) {\n        uVar47 = *(ushort *)(param_1 + 0x2f8);\n        uVar43 = 0;\n        iVar22 = 6;\n        do {\n          bVar20 = (byte)iVar22;\n          uVar38 = (int)(uint)*pbVar18 >> (bVar20 & 0x1f) & 3;\n          if (uVar38 == uVar47) {\n            bVar44 = (char)*(undefined2 *)(param_1 + 0x284) << (bVar20 & 0x1f);\n          }\n          else {\n            bVar44 = (*(byte *)(lVar25 + (ulong)(uVar38 * 4 | uVar38 << 4 | uVar38 | uVar38 << 6))\n                     >> 6) << (bVar20 & 0x1f);\n          }\n          *pbVar18 = bVar44 | *pbVar18 & (byte)(0x3f3f >> (6 - bVar20 & 0x1f));\n          if (iVar22 == 0) {\n            pbVar18 = pbVar18 + 1;\n            iVar22 = 6;\n          }\n          else {\n            iVar22 = iVar22 + -2;\n          }\n          uVar43 = uVar43 + 1;\n        } while (uVar23 != uVar43);\n        goto LAB_00118190;\n      }\n      break;\n    case 4:\n      if (lVar25 == 0) {\n        if (uVar23 != 0) {\n          uVar47 = *(ushort *)(param_1 + 0x2f8);\n          uVar43 = 0;\n          iVar22 = 4;\n          do {\n            bVar20 = (byte)iVar22;\n            if (((int)(uint)*pbVar18 >> (bVar20 & 0x1f) & 0xfU) == (uint)uVar47) {\n              *pbVar18 = (char)*(undefined2 *)(param_1 + 0x284) << (bVar20 & 0x1f) |\n                         *pbVar18 & (byte)(0xf0f >> (4 - bVar20 & 0x1f));\n            }\n            if (iVar22 == 0) {\n              pbVar18 = pbVar18 + 1;\n              iVar22 = 4;\n            }\n            else {\n              iVar22 = iVar22 + -4;\n            }\n            uVar43 = uVar43 + 1;\n          } while (uVar23 != uVar43);\n          goto LAB_00118190;\n        }\n      }\n      else if (uVar23 != 0) {\n        uVar47 = *(ushort *)(param_1 + 0x2f8);\n        uVar43 = 0;\n        iVar22 = 4;\n        do {\n          bVar20 = (byte)iVar22;\n          uVar38 = (int)(uint)*pbVar18 >> (bVar20 & 0x1f) & 0xf;\n          if (uVar38 == uVar47) {\n            bVar44 = (char)*(undefined2 *)(param_1 + 0x284) << (bVar20 & 0x1f);\n          }\n          else {\n            bVar44 = (*(byte *)(lVar25 + (ulong)(uVar38 | uVar38 << 4)) >> 4) << (bVar20 & 0x1f);\n          }\n          *pbVar18 = bVar44 | *pbVar18 & (byte)(0xf0f >> (4 - bVar20 & 0x1f));\n          if (iVar22 == 0) {\n            pbVar18 = pbVar18 + 1;\n            iVar22 = 4;\n          }\n          else {\n            iVar22 = iVar22 + -4;\n          }\n          uVar43 = uVar43 + 1;\n        } while (uVar23 != uVar43);\n        goto LAB_00118190;\n      }\n      break;\n    case 8:\n      if (lVar25 == 0) {\n        if (uVar23 != 0) {\n          uVar47 = *(ushort *)(param_1 + 0x2f8);\n          do {\n            if (*pbVar18 == uVar47) {\n              *pbVar18 = (byte)*(undefined2 *)(param_1 + 0x284);\n            }\n            pbVar18 = pbVar18 + 1;\n          } while (pbVar18 != (byte *)(lVar15 + 2 + (ulong)(uVar23 - 1)));\n          goto LAB_00118190;\n        }\n      }\n      else if (uVar23 != 0) {\n        uVar47 = *(ushort *)(param_1 + 0x2f8);\n        do {\n          if (*pbVar18 == uVar47) {\n            bVar20 = *(byte *)(param_1 + 0x284);\n          }\n          else {\n            bVar20 = *(byte *)(lVar25 + (ulong)*pbVar18);\n          }\n          *pbVar18 = bVar20;\n          pbVar18 = pbVar18 + 1;\n        } while (pbVar18 != (byte *)(lVar15 + 2 + (ulong)(uVar23 - 1)));\n        goto LAB_00118190;\n      }\n      break;\n    case 0x10:\n      if (lVar7 == 0) {\n        if (uVar23 != 0) {\n          sVar12 = *(short *)(param_1 + 0x2f8);\n          do {\n            if ((ushort)((ushort)*pbVar18 * 0x100 + (ushort)pbVar18[1]) == sVar12) {\n              uVar42 = *(undefined2 *)(param_1 + 0x284);\n              pbVar18[1] = (byte)uVar42;\n              *pbVar18 = (byte)((ushort)uVar42 >> 8);\n            }\n            pbVar18 = pbVar18 + 2;\n          } while (pbVar18 != (byte *)(lVar15 + 3 + (ulong)(uVar23 - 1) * 2));\n          goto LAB_00118190;\n        }\n      }\n      else if (uVar23 != 0) {\n        sVar12 = *(short *)(param_1 + 0x2f8);\n        do {\n          if ((ushort)((ushort)*pbVar18 * 0x100 + (ushort)pbVar18[1]) == sVar12) {\n            uVar42 = *(undefined2 *)(param_1 + 0x284);\n            pbVar18[1] = (byte)uVar42;\n            *pbVar18 = (byte)((ushort)uVar42 >> 8);\n          }\n          else {\n            uVar42 = *(undefined2 *)\n                      (*(long *)(lVar7 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8) +\n                      (ulong)*pbVar18 * 2);\n            pbVar18[1] = (byte)uVar42;\n            *pbVar18 = (byte)((ushort)uVar42 >> 8);\n          }\n          pbVar18 = pbVar18 + 2;\n        } while (pbVar18 != (byte *)(lVar15 + 3 + (ulong)(uVar23 - 1) * 2));\n        goto LAB_00118190;\n      }\n    }\nLAB_00117588:\n    if ((uVar43 & 0x602000) == 0x2000) {\nLAB_0011750e:\n      if ((*(short *)(param_1 + 0x260) == 0) &&\n         (bVar20 = *(byte *)(param_1 + 0x267), (bVar20 & 4) == 0)) {\nLAB_00117257:\n        if (bVar20 != 3) {\n          lVar15 = *(long *)(param_1 + 0x228);\n          bVar20 = *(byte *)((long)param_2 + 0x11);\n          lVar25 = *(long *)(param_1 + 0x2a8);\n          lVar35 = *(long *)(param_1 + 0x2b0);\n          uVar43 = *param_2;\n          pbVar18 = (byte *)(lVar15 + 1);\n          bVar44 = (byte)*(undefined4 *)(param_1 + 0x2a0);\n          if (bVar20 < 9) {\n            if (lVar25 != 0) {\n              bVar3 = *(byte *)(param_2 + 4);\n              if (bVar3 == 2) {\n                if (bVar20 == 8) {\n                  if (uVar43 != 0) {\n                    do {\n                      pbVar36 = pbVar18 + 3;\n                      *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                      pbVar18[1] = *(byte *)(lVar25 + (ulong)pbVar18[1]);\n                      pbVar18[2] = *(byte *)(lVar25 + (ulong)pbVar18[2]);\n                      pbVar18 = pbVar36;\n                    } while (pbVar36 != (byte *)(lVar15 + (ulong)(uVar43 - 1) * 3 + 4));\n                  }\n                }\n                else {\nLAB_00117912:\n                  if (uVar43 != 0) {\n                    do {\n                      pbVar36 = pbVar18 + 6;\n                      uVar42 = *(undefined2 *)\n                                (*(long *)(lVar35 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f))\n                                                    * 8) + (ulong)*pbVar18 * 2);\n                      pbVar18[1] = (byte)uVar42;\n                      *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                      uVar42 = *(undefined2 *)\n                                (*(long *)(lVar35 + (long)((int)(uint)pbVar18[3] >> (bVar44 & 0x1f))\n                                                    * 8) + (ulong)pbVar18[2] * 2);\n                      pbVar18[3] = (byte)uVar42;\n                      pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n                      uVar42 = *(undefined2 *)\n                                (*(long *)(lVar35 + (long)((int)(uint)pbVar18[5] >> (bVar44 & 0x1f))\n                                                    * 8) + (ulong)pbVar18[4] * 2);\n                      pbVar18[5] = (byte)uVar42;\n                      pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n                      pbVar18 = pbVar36;\n                    } while (pbVar36 != (byte *)(lVar15 + 7 + (ulong)(uVar43 - 1) * 6));\n                  }\n                }\n              }\n              else if (bVar3 < 3) {\n                if (bVar3 == 0) {\n                  if (bVar20 == 2) {\n                    if (uVar43 != 0) {\n                      uVar23 = 0;\n                      pbVar36 = pbVar18;\n                      do {\n                        bVar20 = *pbVar36;\n                        uVar38 = bVar20 & 3;\n                        uVar46 = bVar20 & 0xc0;\n                        uVar45 = bVar20 & 0x30;\n                        uVar41 = bVar20 & 0xc;\n                        uVar23 = uVar23 + 4;\n                        *pbVar36 = *(byte *)(lVar25 + (int)((int)uVar46 >> 6 |\n                                                           (int)uVar46 >> 2 | (int)uVar46 >> 4 |\n                                                           uVar46)) & 0xc0 |\n                                   *(byte *)(lVar25 + (int)(uVar38 << 2 |\n                                                           uVar38 << 6 | uVar38 << 4 | uVar38)) >> 6\n                                   | *(byte *)(lVar25 + (int)((int)uVar45 >> 4 |\n                                                             uVar45 * 4 | (int)uVar45 >> 2 | uVar45)\n                                              ) >> 2 & 0x30 |\n                                   *(byte *)(lVar25 + (int)((int)uVar41 >> 2 |\n                                                           uVar41 << 4 | uVar41 * 4 | uVar41)) >> 4\n                                   & 0xc;\n                        pbVar36 = pbVar36 + 1;\n                      } while (uVar23 < uVar43);\n                      cVar11 = *(char *)((long)param_2 + 0x11);\n                      if (cVar11 == '\\x04') goto LAB_001187fd;\n                      if (cVar11 == '\\b') goto LAB_001195c4;\n                      if (cVar11 == '\\x10') goto LAB_0011943b;\n                    }\n                  }\n                  else if (bVar20 == 4) {\n                    if (uVar43 != 0) {\nLAB_001187fd:\n                      uVar23 = 0;\n                      do {\n                        uVar23 = uVar23 + 2;\n                        uVar41 = *pbVar18 & 0xf0;\n                        uVar38 = *pbVar18 & 0xf;\n                        *pbVar18 = *(byte *)(lVar25 + (int)((int)uVar41 >> 4 | uVar41)) & 0xf0 |\n                                   *(byte *)(lVar25 + (int)(uVar38 << 4 | uVar38)) >> 4;\n                        pbVar18 = pbVar18 + 1;\n                      } while (uVar23 < uVar43);\n                    }\n                  }\n                  else if (bVar20 == 8) {\n                    if (uVar43 != 0) {\nLAB_001195c4:\n                      do {\n                        pbVar36 = pbVar18 + 1;\n                        *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                        pbVar18 = pbVar36;\n                      } while (pbVar36 != (byte *)(lVar15 + 2 + (ulong)(uVar43 - 1)));\n                    }\n                  }\n                  else if (bVar20 == 0x10) goto LAB_001195f2;\n                }\n              }\n              else if (bVar3 == 4) {\n                if (bVar20 != 8) goto LAB_00119070;\n                if (uVar43 != 0) {\n                  do {\n                    pbVar36 = pbVar18 + 2;\n                    *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                    pbVar18 = pbVar36;\n                  } while (pbVar36 != (byte *)(lVar15 + 3 + (ulong)(uVar43 - 1) * 2));\n                }\n              }\n              else if (bVar3 == 6) {\n                if (bVar20 != 8) goto LAB_00118d58;\n                if (uVar43 != 0) {\n                  do {\n                    pbVar36 = pbVar18 + 4;\n                    *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n                    pbVar18[1] = *(byte *)(lVar25 + (ulong)pbVar18[1]);\n                    pbVar18[2] = *(byte *)(lVar25 + (ulong)pbVar18[2]);\n                    pbVar18 = pbVar36;\n                  } while (pbVar36 != (byte *)(lVar15 + 5 + (ulong)(uVar43 - 1) * 4));\n                }\n              }\n            }\n          }\n          else if ((bVar20 == 0x10) && (lVar35 != 0)) {\n            bVar20 = *(byte *)(param_2 + 4);\n            if (bVar20 == 4) {\nLAB_00119070:\n              if (uVar43 != 0) {\n                do {\n                  pbVar36 = pbVar18 + 4;\n                  uVar42 = *(undefined2 *)\n                            (*(long *)(lVar35 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8\n                                      ) + (ulong)*pbVar18 * 2);\n                  pbVar18[1] = (byte)uVar42;\n                  *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                  pbVar18 = pbVar36;\n                } while (pbVar36 != (byte *)(lVar15 + 5 + (ulong)(uVar43 - 1) * 4));\n              }\n            }\n            else if (bVar20 < 5) {\n              if (bVar20 == 0) {\nLAB_001195f2:\n                if (uVar43 != 0) {\nLAB_0011943b:\n                  do {\n                    pbVar36 = pbVar18 + 2;\n                    uVar42 = *(undefined2 *)\n                              (*(long *)(lVar35 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) *\n                                                  8) + (ulong)*pbVar18 * 2);\n                    pbVar18[1] = (byte)uVar42;\n                    *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                    pbVar18 = pbVar36;\n                  } while (pbVar36 != (byte *)(lVar15 + 3 + (ulong)(uVar43 - 1) * 2));\n                }\n              }\n              else if (bVar20 == 2) goto LAB_00117912;\n            }\n            else if (bVar20 == 6) {\nLAB_00118d58:\n              if (uVar43 != 0) {\n                do {\n                  pbVar36 = pbVar18 + 8;\n                  uVar42 = *(undefined2 *)\n                            (*(long *)(lVar35 + (long)((int)(uint)pbVar18[1] >> (bVar44 & 0x1f)) * 8\n                                      ) + (ulong)*pbVar18 * 2);\n                  pbVar18[1] = (byte)uVar42;\n                  *pbVar18 = (byte)((ushort)uVar42 >> 8);\n                  uVar42 = *(undefined2 *)\n                            (*(long *)(lVar35 + (long)((int)(uint)pbVar18[3] >> (bVar44 & 0x1f)) * 8\n                                      ) + (ulong)pbVar18[2] * 2);\n                  pbVar18[3] = (byte)uVar42;\n                  pbVar18[2] = (byte)((ushort)uVar42 >> 8);\n                  uVar42 = *(undefined2 *)\n                            (*(long *)(lVar35 + (long)((int)(uint)pbVar18[5] >> (bVar44 & 0x1f)) * 8\n                                      ) + (ulong)pbVar18[4] * 2);\n                  pbVar18[5] = (byte)uVar42;\n                  pbVar18[4] = (byte)((ushort)uVar42 >> 8);\n                  pbVar18 = pbVar36;\n                } while (pbVar36 != (byte *)(lVar15 + 9 + (ulong)(uVar43 - 1) * 8));\n              }\n            }\n          }\n        }\n      }\n      uVar43 = *(uint *)(param_1 + 0x134);\n    }\n  }\n  else {\n    FUN_001137d0();\n    uVar43 = *(uint *)(param_1 + 0x134);\n    if ((uVar43 & 0x80) != 0) goto LAB_00116b50;\nLAB_001165d9:\n    if ((uVar43 & 0x602000) == 0x2000) {\nLAB_00117250:\n      bVar20 = *(byte *)(param_1 + 0x267);\n      goto LAB_00117257;\n    }\n  }\nLAB_001165eb:\n  if (((uVar43 & 0x40080) == 0x40080) && ((*(byte *)(param_2 + 4) & 0xfd) == 4)) {\n    FUN_001214d0(param_2,*(long *)(param_1 + 0x228) + 1,0);\n    uVar43 = *(uint *)(param_1 + 0x134);\n  }\n  if (((uVar43 & 0x800000) == 0) || (bVar20 = *(byte *)(param_2 + 4), (bVar20 & 4) == 0)) {\nLAB_00116609:\n    if ((uVar43 & 0x4000000) == 0) goto LAB_00116615;\nLAB_00116a00:\n    if (*(char *)((long)param_2 + 0x11) == '\\x10') {\n      pbVar18 = (byte *)(*(long *)(param_1 + 0x228) + 1);\n      pbVar37 = pbVar18 + *(long *)(param_2 + 2);\n      pbVar36 = pbVar18;\n      if (pbVar18 < pbVar37) {\n        do {\n          bVar20 = *pbVar18;\n          pbVar19 = pbVar18 + 1;\n          pbVar18 = pbVar18 + 2;\n          *pbVar36 = (char)((((uint)*pbVar19 - (uint)bVar20) + 0x80) * 0xffff >> 0x18) + bVar20;\n          pbVar36 = pbVar36 + 1;\n        } while (pbVar18 < pbVar37);\n        uVar43 = *(uint *)(param_1 + 0x134);\n      }\n      *(undefined *)((long)param_2 + 0x11) = 8;\n      *(byte *)((long)param_2 + 0x13) = *(byte *)((long)param_2 + 0x12) * '\\b';\n      *(ulong *)(param_2 + 2) = (ulong)((uint)*(byte *)((long)param_2 + 0x12) * *param_2);\n    }\njoined_r0x00116a75:\n    if ((uVar43 & 0x40) != 0) {\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        lVar15 = *(long *)(param_1 + 0x228);\n        lVar25 = *(long *)(param_1 + 0x380);\n        lVar35 = *(long *)(param_1 + 0x378);\n        uVar23 = *param_2;\n        goto LAB_001177e1;\n      }\n      goto LAB_00116a8a;\n    }\njoined_r0x00116aa3:\n    if (((uVar43 & 0x200) != 0) && (*(char *)((long)param_2 + 0x11) == '\\b')) {\nLAB_00116ab3:\n      if (*(char *)(param_2 + 4) != '\\x03') {\n        lVar15 = *(long *)(param_2 + 2);\n        puVar24 = (undefined *)(*(long *)(param_1 + 0x228) + 1 + lVar15);\n        puVar16 = puVar24 + lVar15;\n        if (puVar24 < puVar16) {\n          do {\n            uVar29 = puVar24[-1];\n            puVar24 = puVar24 + -1;\n            puVar17 = puVar16 + -2;\n            puVar16[-1] = uVar29;\n            *puVar17 = uVar29;\n            puVar16 = puVar17;\n          } while (puVar24 < puVar17);\n          lVar15 = *(long *)(param_2 + 2);\n          uVar43 = *(uint *)(param_1 + 0x134);\n        }\n        *(undefined *)((long)param_2 + 0x11) = 0x10;\n        *(long *)(param_2 + 2) = lVar15 * 2;\n        *(char *)((long)param_2 + 0x13) = *(char *)((long)param_2 + 0x12) << 4;\n      }\n    }\n  }\n  else {\n    pbVar18 = *(byte **)(param_1 + 0x228);\n    uVar23 = *param_2;\n    if (*(char *)((long)param_2 + 0x11) == '\\b') {\n      lVar15 = *(long *)(param_1 + 0x2b8);\n      if (lVar15 == 0) goto LAB_001169db;\n      if (uVar23 != 0) {\n        do {\n          pbVar18 = pbVar18 + (-(ulong)((bVar20 & 2) == 0) & 0xfffffffffffffffe) + 4;\n          *pbVar18 = *(byte *)(lVar15 + (ulong)*pbVar18);\n          uVar23 = uVar23 - 1;\n        } while (uVar23 != 0);\n        goto LAB_001169ea;\n      }\n      goto LAB_00116609;\n    }\n    if ((*(char *)((long)param_2 + 0x11) == '\\x10') &&\n       (lVar15 = *(long *)(param_1 + 0x2c8), lVar15 != 0)) {\n      pbVar18 = pbVar18 + (-(ulong)((bVar20 & 2) == 0) & 0xfffffffffffffffc) + 7;\n      if (uVar23 == 0) goto LAB_00116609;\n      uVar5 = *(undefined4 *)(param_1 + 0x2a0);\n      do {\n        uVar42 = *(undefined2 *)\n                  (*(long *)(lVar15 + (long)((int)(uint)pbVar18[1] >> ((byte)uVar5 & 0x1f)) * 8) +\n                  (ulong)*pbVar18 * 2);\n        pbVar18[1] = (byte)uVar42;\n        *pbVar18 = (byte)((ushort)uVar42 >> 8);\n        pbVar18 = pbVar18 + (-(ulong)((bVar20 & 2) == 0) & 0xfffffffffffffffc) + 8;\n        uVar23 = uVar23 - 1;\n      } while (uVar23 != 0);\n    }\n    else {\nLAB_001169db:\n      png_warning();\n    }\nLAB_001169ea:\n    uVar43 = *(uint *)(param_1 + 0x134);\n    if ((uVar43 & 0x4000000) != 0) goto LAB_00116a00;\nLAB_00116615:\n    if (((uVar43 & 0x400) == 0) || (*(char *)((long)param_2 + 0x11) != '\\x10'))\n    goto joined_r0x00116a75;\n    puVar16 = (undefined *)(*(long *)(param_1 + 0x228) + 1);\n    puVar17 = puVar16 + *(long *)(param_2 + 2);\n    puVar24 = puVar16;\n    if (puVar16 < puVar17) {\n      do {\n        uVar29 = *puVar16;\n        puVar16 = puVar16 + 2;\n        *puVar24 = uVar29;\n        puVar24 = puVar24 + 1;\n      } while (puVar16 < puVar17);\n      uVar43 = *(uint *)(param_1 + 0x134);\n    }\n    uVar23 = *param_2;\n    *(undefined *)((long)param_2 + 0x11) = 8;\n    *(byte *)((long)param_2 + 0x13) = *(byte *)((long)param_2 + 0x12) * '\\b';\n    *(ulong *)(param_2 + 2) = (ulong)(*(byte *)((long)param_2 + 0x12) * uVar23);\n    if ((uVar43 & 0x40) != 0) {\n      lVar15 = *(long *)(param_1 + 0x228);\n      lVar25 = *(long *)(param_1 + 0x380);\n      lVar35 = *(long *)(param_1 + 0x378);\nLAB_001177e1:\n      pbVar18 = (byte *)(lVar15 + 1);\n      cVar11 = *(char *)(param_2 + 4);\n      if (cVar11 == '\\x02') {\n        if (lVar35 == 0) goto LAB_00116a8a;\n        if (uVar23 != 0) {\n          pbVar36 = pbVar18;\n          pbVar37 = pbVar18;\n          do {\n            pbVar19 = pbVar36 + 3;\n            *pbVar37 = *(byte *)(lVar35 + (((int)(uint)*pbVar36 >> 3) << 10 |\n                                           ((int)(uint)pbVar36[1] >> 3) << 5 |\n                                          (int)(uint)pbVar36[2] >> 3));\n            pbVar36 = pbVar19;\n            pbVar37 = pbVar37 + 1;\n          } while (pbVar19 != pbVar18 + (ulong)(uVar23 - 1) * 3 + 3);\n        }\nLAB_00117a0e:\n        bVar20 = *(byte *)((long)param_2 + 0x11);\n        *(undefined *)(param_2 + 4) = 3;\n        *(undefined *)((long)param_2 + 0x12) = 1;\n        *(byte *)((long)param_2 + 0x13) = bVar20;\n        if (bVar20 < 8) {\n          uVar13 = (ulong)bVar20 * (ulong)uVar23 + 7 >> 3;\n        }\n        else {\n          uVar13 = (ulong)(bVar20 >> 3) * (ulong)uVar23;\n        }\n        *(ulong *)(param_2 + 2) = uVar13;\n      }\n      else {\n        if (cVar11 == '\\x06') {\n          if (lVar35 != 0) {\n            uVar13 = 0;\n            if (uVar23 != 0) {\n              do {\n                pbVar18[uVar13] =\n                     *(byte *)(lVar35 + (((int)(uint)pbVar18[uVar13 * 4] >> 3) << 10 |\n                                         ((int)(uint)*(byte *)(lVar15 + 2 + uVar13 * 4) >> 3) << 5 |\n                                        (int)(uint)*(byte *)(lVar15 + 3 + uVar13 * 4) >> 3));\n                bVar48 = uVar23 - 1 != uVar13;\n                uVar13 = uVar13 + 1;\n              } while (bVar48);\n            }\n            goto LAB_00117a0e;\n          }\n        }\n        else if (((lVar25 != 0) && (cVar11 == '\\x03')) && (uVar23 != 0)) {\n          do {\n            pbVar36 = pbVar18 + 1;\n            *pbVar18 = *(byte *)(lVar25 + (ulong)*pbVar18);\n            pbVar18 = pbVar36;\n          } while (pbVar36 != (byte *)(lVar15 + 2 + (ulong)(uVar23 - 1)));\n        }\nLAB_00116a8a:\n        uVar13 = *(ulong *)(param_2 + 2);\n      }\n      if (uVar13 == 0) {\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"png_do_quantize returned rowbytes=0\");\n      }\n      uVar43 = *(uint *)(param_1 + 0x134);\n      goto joined_r0x00116aa3;\n    }\n    if ((uVar43 & 0x200) != 0) goto LAB_00116ab3;\n  }\n  if (((uVar43 & 0x4000) == 0) || ((*(byte *)(param_1 + 0x12d) & 8) == 0)) {\n    if ((uVar43 & 0x20) == 0) goto LAB_0011664d;\nLAB_00116770:\n    FUN_00121390();\n    uVar43 = *(uint *)(param_1 + 0x134);\n    if ((uVar43 & 0x80000) == 0) goto joined_r0x00116800;\nLAB_00116795:\n    lVar15 = *(long *)(param_1 + 0x228);\n    bVar20 = *(byte *)(param_2 + 4);\n    uVar23 = *param_2;\n    pbVar18 = (byte *)(lVar15 + 1);\n    if (bVar20 == 6) {\n      lVar25 = *(long *)(param_2 + 2);\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        if (uVar23 == 0) goto LAB_0011746a;\n        pbVar36 = pbVar18 + lVar25 + -1;\n        do {\n          *pbVar36 = ~*pbVar36;\n          pbVar36 = pbVar36 + -4;\n        } while (pbVar18 + (ulong)(uVar23 - 1) * -4 + lVar25 + -5 != pbVar36);\nLAB_001167f6:\n        uVar43 = *(uint *)(param_1 + 0x134);\n        goto joined_r0x00116800;\n      }\n      if (uVar23 != 0) {\n        pbVar36 = pbVar18 + lVar25 + -2;\n        do {\n          pbVar36[1] = ~pbVar36[1];\n          *pbVar36 = ~*pbVar36;\n          pbVar36 = pbVar36 + -8;\n        } while (pbVar18 + (ulong)(uVar23 - 1) * -8 + lVar25 + -10 != pbVar36);\n        goto LAB_001167f6;\n      }\nLAB_0011746a:\n      if ((uVar43 & 8) == 0) goto joined_r0x00116666;\n      uVar43 = (uint)*(byte *)((long)param_2 + 0x11);\nLAB_00117480:\n      local_58[0] = uVar43 - *(byte *)(param_1 + 0x2dd);\n      local_58[1] = uVar43 - *(byte *)(param_1 + 0x2de);\n      iVar22 = 3;\n      local_58[2] = uVar43 - *(byte *)(param_1 + 0x2df);\n      goto LAB_00116851;\n    }\n    if (bVar20 != 4) goto joined_r0x00116800;\n    lVar25 = *(long *)(param_2 + 2);\n    if (*(char *)((long)param_2 + 0x11) == '\\b') {\n      if (uVar23 != 0) {\n        pbVar36 = pbVar18 + lVar25 + -1;\n        do {\n          *pbVar36 = ~*pbVar36;\n          pbVar36 = pbVar36 + -2;\n        } while (pbVar18 + (ulong)(uVar23 - 1) * -2 + lVar25 + -3 != pbVar36);\n        goto LAB_001167f6;\n      }\n    }\n    else if (uVar23 != 0) {\n      pbVar36 = pbVar18 + lVar25 + -2;\n      do {\n        pbVar36[1] = ~pbVar36[1];\n        *pbVar36 = ~*pbVar36;\n        pbVar36 = pbVar36 + -4;\n      } while (pbVar18 + (ulong)(uVar23 - 1) * -4 + lVar25 + -6 != pbVar36);\n      goto LAB_001167f6;\n    }\n    if ((uVar43 & 8) != 0) {\n      uVar43 = (uint)*(byte *)((long)param_2 + 0x11);\n      goto LAB_0011683b;\n    }\njoined_r0x00116666:\n    if ((uVar43 & 4) == 0) {\nLAB_0011666c:\n      cVar11 = *(char *)(param_2 + 4);\n    }\n    else {\n      lVar15 = *(long *)(param_1 + 0x228);\n      pbVar18 = (byte *)(lVar15 + 1);\nLAB_0011693b:\n      uVar43 = (uint)*(byte *)((long)param_2 + 0x11);\nLAB_00116940:\n      bVar20 = (byte)uVar43;\n      if (7 < bVar20) goto LAB_0011666c;\n      uVar43 = *param_2;\n      if (bVar20 == 2) {\n        pbVar18 = pbVar18 + (uVar43 - 1 >> 2);\n        pbVar36 = (byte *)((ulong)uVar43 + lVar15);\n        uVar23 = (uVar43 * 2 + 6 ^ 0xfffffffe) & 6;\n        if (uVar43 != 0) {\n          pbVar37 = pbVar36 + ~(ulong)(uVar43 - 1);\n          do {\n            *pbVar36 = (byte)((int)(uint)*pbVar18 >> ((byte)uVar23 & 0x1f)) & 3;\n            if (uVar23 == 6) {\n              pbVar18 = pbVar18 + -1;\n              uVar23 = 0;\n            }\n            else {\n              uVar23 = uVar23 + 2;\n            }\n            pbVar36 = pbVar36 + -1;\n          } while (pbVar36 != pbVar37);\n        }\n      }\n      else if (bVar20 == 4) {\n        pbVar18 = pbVar18 + (uVar43 - 1 >> 1);\n        pbVar37 = (byte *)((ulong)uVar43 + lVar15);\n        pbVar36 = pbVar37 + ~(ulong)(uVar43 - 1);\n        iVar22 = (uVar43 & 1) << 2;\n        if (uVar43 != 0) {\n          do {\n            *pbVar37 = (byte)((int)(uint)*pbVar18 >> (sbyte)iVar22) & 0xf;\n            if (iVar22 == 4) {\n              pbVar18 = pbVar18 + -1;\n              iVar22 = 0;\n            }\n            else {\n              iVar22 = 4;\n            }\n            pbVar37 = pbVar37 + -1;\n          } while (pbVar37 != pbVar36);\n        }\n      }\n      else if (bVar20 == 1) {\n        pbVar18 = pbVar18 + (uVar43 - 1 >> 3);\n        pbVar37 = (byte *)((ulong)uVar43 + lVar15);\n        pbVar36 = pbVar37 + ~(ulong)(uVar43 - 1);\n        uVar23 = ~(uVar43 + 7) & 7;\n        if (uVar43 != 0) {\n          do {\n            *pbVar37 = (byte)((int)(uint)*pbVar18 >> ((byte)uVar23 & 0x1f)) & 1;\n            if (uVar23 == 7) {\n              pbVar18 = pbVar18 + -1;\n              uVar23 = 0;\n            }\n            else {\n              uVar23 = uVar23 + 1;\n            }\n            pbVar37 = pbVar37 + -1;\n          } while (pbVar37 != pbVar36);\n        }\n      }\n      *(undefined *)((long)param_2 + 0x11) = 8;\n      cVar11 = *(char *)(param_2 + 4);\n      *(byte *)((long)param_2 + 0x13) = *(byte *)((long)param_2 + 0x12) * '\\b';\n      *(ulong *)(param_2 + 2) = (ulong)(uVar43 * *(byte *)((long)param_2 + 0x12));\n    }\n    if (cVar11 == '\\x03') {\nLAB_00116990:\n      if (-1 < *(int *)(param_1 + 0x25c)) {\n        FUN_00121800(param_1);\n      }\n    }\n    uVar23 = *(uint *)(param_1 + 0x134);\n  }\n  else {\n    FUN_001137d0();\n    uVar43 = *(uint *)(param_1 + 0x134);\n    if ((uVar43 & 0x20) != 0) goto LAB_00116770;\nLAB_0011664d:\n    if ((uVar43 & 0x80000) != 0) goto LAB_00116795;\njoined_r0x00116800:\n    if ((uVar43 & 8) == 0) goto joined_r0x00116666;\n    lVar15 = *(long *)(param_1 + 0x228);\n    bVar20 = *(byte *)(param_2 + 4);\n    pbVar18 = (byte *)(lVar15 + 1);\n    if (bVar20 == 3) {\n      if ((uVar43 & 4) != 0) goto LAB_0011693b;\n      goto LAB_00116990;\n    }\n    uVar43 = (uint)*(byte *)((long)param_2 + 0x11);\n    if ((bVar20 & 2) != 0) goto LAB_00117480;\nLAB_0011683b:\n    local_58[0] = uVar43 - *(byte *)(param_1 + 0x2e0);\n    iVar22 = 1;\nLAB_00116851:\n    if ((bVar20 & 4) != 0) {\n      lVar25 = (long)iVar22;\n      iVar22 = iVar22 + 1;\n      local_58[lVar25] = uVar43 - *(byte *)(param_1 + 0x2e1);\n    }\n    piVar32 = local_58;\n    bVar48 = false;\n    piVar2 = piVar32 + (iVar22 - 1);\n    if ((local_58[0] < (int)uVar43) && (0 < local_58[0])) goto LAB_001168aa;\n    while (*piVar32 = 0, bVar10 = bVar48, piVar2 != piVar32) {\n      while( true ) {\n        bVar48 = bVar10;\n        piVar1 = piVar32 + 1;\n        piVar32 = piVar32 + 1;\n        if (((int)uVar43 <= *piVar1) || (*piVar1 < 1)) break;\nLAB_001168aa:\n        bVar48 = true;\n        bVar10 = true;\n        if (piVar2 == piVar32) goto LAB_001168b5;\n      }\n    }\nLAB_001168b5:\n    if (bVar48) {\n      bVar20 = (byte)uVar43;\n      if (bVar20 == 8) {\n        lVar15 = *(long *)(param_2 + 2);\n        if (pbVar18 < pbVar18 + lVar15) {\n          iVar34 = 0;\n          pbVar36 = pbVar18;\n          do {\n            lVar25 = (long)iVar34;\n            iVar34 = iVar34 + 1;\n            if (iVar22 <= iVar34) {\n              iVar34 = 0;\n            }\n            pbVar37 = pbVar36 + 1;\n            *pbVar36 = (byte)((int)(uint)*pbVar36 >> ((byte)local_58[lVar25] & 0x1f));\n            pbVar36 = pbVar37;\n          } while (pbVar18 + lVar15 != pbVar37);\n        }\n      }\n      else if (bVar20 < 9) {\n        if (bVar20 == 2) {\n          lVar15 = *(long *)(param_2 + 2);\n          pbVar36 = pbVar18;\n          if (pbVar18 < pbVar18 + lVar15) {\n            do {\n              pbVar37 = pbVar36 + 1;\n              *pbVar36 = *pbVar36 >> 1 & 0x55;\n              pbVar36 = pbVar37;\n            } while (pbVar18 + lVar15 != pbVar37);\n          }\n        }\n        else if (bVar20 == 4) {\n          lVar15 = *(long *)(param_2 + 2);\n          iVar22 = 0xf >> ((byte)local_58[0] & 0x1f);\n          pbVar36 = pbVar18;\n          if (pbVar18 < pbVar18 + lVar15) {\n            do {\n              pbVar37 = pbVar36 + 1;\n              *pbVar36 = (byte)((int)(uint)*pbVar36 >> ((byte)local_58[0] & 0x1f)) &\n                         ((byte)iVar22 | (byte)(iVar22 << 4));\n              pbVar36 = pbVar37;\n            } while (pbVar18 + lVar15 != pbVar37);\n          }\n        }\n      }\n      else if ((bVar20 == 0x10) && (lVar15 = *(long *)(param_2 + 2), pbVar18 < pbVar18 + lVar15)) {\n        iVar34 = 0;\n        pbVar36 = pbVar18;\n        do {\n          lVar25 = (long)iVar34;\n          iVar34 = iVar34 + 1;\n          iVar31 = (int)((uint)*pbVar36 * 0x100 + (uint)pbVar36[1]) >>\n                   ((byte)local_58[lVar25] & 0x1f);\n          *pbVar36 = (byte)((uint)iVar31 >> 8);\n          if (iVar22 <= iVar34) {\n            iVar34 = 0;\n          }\n          pbVar37 = pbVar36 + 2;\n          pbVar36[1] = (byte)iVar31;\n          pbVar36 = pbVar37;\n        } while (pbVar37 < pbVar18 + lVar15);\n      }\n      uVar43 = *(uint *)(param_1 + 0x134);\n      goto joined_r0x00116666;\n    }\n    uVar23 = *(uint *)(param_1 + 0x134);\n    if ((uVar23 & 4) != 0) {\n      pbVar18 = (byte *)(lVar15 + 1);\n      goto LAB_00116940;\n    }\n  }\n  if ((uVar23 & 1) != 0) {\n    FUN_00121700(param_2);\n    uVar23 = *(uint *)(param_1 + 0x134);\n  }\n  if ((uVar23 & 0x10000) != 0) {\n    FUN_00121460(param_2);\n    uVar23 = *(uint *)(param_1 + 0x134);\n  }\n  if ((uVar23 & 0x8000) != 0) {\n    uVar43 = *(uint *)(param_1 + 0x130);\n    uVar38 = *param_2;\n    lVar15 = *(long *)(param_1 + 0x228) + 1;\n    uVar29 = (undefined)((ulong)*(ushort *)(param_1 + 0x272) >> 8);\n    uVar40 = (undefined)*(ushort *)(param_1 + 0x272);\n    if (*(char *)(param_2 + 4) == '\\0') {\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        lVar15 = lVar15 + (ulong)uVar38;\n        lVar25 = (ulong)uVar38 + lVar15;\n        if ((uVar43 & 0x80) == 0) {\n          if (uVar38 != 0) {\n            uVar13 = 0;\n            do {\n              uVar29 = *(undefined *)(lVar15 + -1 + uVar13);\n              *(undefined *)(lVar25 + -2 + uVar13 * 2) = uVar40;\n              *(undefined *)(lVar25 + -1 + uVar13 * 2) = uVar29;\n              uVar13 = uVar13 - 1;\n            } while (~(ulong)(uVar38 - 1) != uVar13);\n            uVar23 = *(uint *)(param_1 + 0x134);\n          }\n          *(undefined2 *)((long)param_2 + 0x12) = 0x1002;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 2);\n        }\n        else {\n          if (1 < uVar38) {\n            uVar13 = 0;\n            do {\n              *(undefined *)(lVar25 + -1 + uVar13 * 2) = uVar40;\n              *(undefined *)(lVar25 + -2 + uVar13 * 2) = *(undefined *)(lVar15 + -1 + uVar13);\n              uVar13 = uVar13 - 1;\n            } while (~(ulong)(uVar38 - 2) != uVar13);\n            lVar25 = lVar25 + ~(ulong)(uVar38 - 2) * 2;\n          }\n          *(undefined *)(lVar25 + -1) = uVar40;\n          uVar23 = *(uint *)(param_1 + 0x134);\n          *(undefined2 *)((long)param_2 + 0x12) = 0x1002;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 2);\n        }\n      }\n      else {\n        if (*(char *)((long)param_2 + 0x11) != '\\x10') goto LAB_001166a6;\n        puVar16 = (undefined *)(lVar15 + (ulong)uVar38 * 2);\n        puVar24 = puVar16 + (ulong)uVar38 * 2;\n        if ((uVar43 & 0x80) == 0) {\n          if (uVar38 != 0) {\n            puVar17 = puVar16 + ~(ulong)(uVar38 - 1) * 2;\n            do {\n              puVar28 = puVar16 + -1;\n              puVar16 = puVar16 + -2;\n              puVar24[-1] = *puVar28;\n              uVar4 = *puVar16;\n              puVar24[-3] = uVar40;\n              puVar24[-2] = uVar4;\n              puVar24[-4] = uVar29;\n              puVar24 = puVar24 + -4;\n            } while (puVar16 != puVar17);\n            uVar23 = *(uint *)(param_1 + 0x134);\n          }\n          *(undefined2 *)((long)param_2 + 0x12) = 0x2002;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 4);\n        }\n        else {\n          if (1 < uVar38) {\n            puVar17 = puVar16;\n            puVar28 = puVar24;\n            do {\n              puVar28[-1] = uVar40;\n              puVar14 = puVar17 + -2;\n              puVar28[-2] = uVar29;\n              puVar28[-3] = puVar17[-1];\n              puVar28[-4] = *puVar14;\n              puVar17 = puVar14;\n              puVar28 = puVar28 + -4;\n            } while (puVar14 != puVar16 + ~(ulong)(uVar38 - 2) * 2);\n            puVar24 = puVar24 + ((ulong)(uVar38 - 2) + 1) * -4;\n          }\n          puVar24[-1] = uVar40;\n          puVar24[-2] = uVar29;\n          uVar23 = *(uint *)(param_1 + 0x134);\n          *(undefined2 *)((long)param_2 + 0x12) = 0x2002;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 4);\n        }\n      }\n    }\n    else if (*(char *)(param_2 + 4) == '\\x02') {\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        puVar24 = (undefined *)(lVar15 + (ulong)uVar38 * 3);\n        puVar16 = puVar24 + uVar38;\n        if ((uVar43 & 0x80) == 0) {\n          if (uVar38 != 0) {\n            puVar17 = puVar24;\n            do {\n              puVar28 = puVar17 + -3;\n              puVar16[-1] = puVar17[-1];\n              puVar16[-2] = puVar17[-2];\n              puVar16[-3] = *puVar28;\n              puVar16[-4] = uVar40;\n              puVar16 = puVar16 + -4;\n              puVar17 = puVar28;\n            } while (puVar28 != puVar24 + ((ulong)(uVar38 - 1) + 1) * -3);\n            uVar23 = *(uint *)(param_1 + 0x134);\n          }\n          *(undefined2 *)((long)param_2 + 0x12) = 0x2004;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 4);\n        }\n        else {\n          if (1 < uVar38) {\n            puVar17 = puVar16 + ~(ulong)(uVar38 - 2) * 4;\n            puVar28 = puVar16;\n            do {\n              puVar28[-1] = uVar40;\n              puVar16 = puVar28 + -4;\n              puVar28[-2] = puVar24[-1];\n              puVar28[-3] = puVar24[-2];\n              *puVar16 = puVar24[-3];\n              puVar28 = puVar16;\n              puVar24 = puVar24 + -3;\n            } while (puVar16 != puVar17);\n          }\n          puVar16[-1] = uVar40;\n          uVar23 = *(uint *)(param_1 + 0x134);\n          *(undefined2 *)((long)param_2 + 0x12) = 0x2004;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 4);\n        }\n      }\n      else {\n        if (*(char *)((long)param_2 + 0x11) != '\\x10') goto LAB_001166a6;\n        puVar16 = (undefined *)(lVar15 + (ulong)uVar38 * 6);\n        puVar24 = puVar16 + (ulong)uVar38 * 2;\n        if ((uVar43 & 0x80) == 0) {\n          if (uVar38 != 0) {\n            puVar17 = puVar16;\n            do {\n              puVar28 = puVar17 + -6;\n              puVar24[-1] = puVar17[-1];\n              puVar24[-2] = puVar17[-2];\n              puVar24[-3] = puVar17[-3];\n              puVar24[-4] = puVar17[-4];\n              puVar24[-5] = puVar17[-5];\n              uVar4 = *puVar28;\n              puVar24[-7] = uVar40;\n              puVar24[-6] = uVar4;\n              puVar24[-8] = uVar29;\n              puVar17 = puVar28;\n              puVar24 = puVar24 + -8;\n            } while (puVar28 != puVar16 + ((ulong)(uVar38 - 1) + 1) * -6);\n            uVar23 = *(uint *)(param_1 + 0x134);\n          }\n          *(undefined2 *)((long)param_2 + 0x12) = 0x4004;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 8);\n        }\n        else {\n          if (1 < uVar38) {\n            puVar17 = puVar24 + ~(ulong)(uVar38 - 2) * 8;\n            puVar28 = puVar24;\n            do {\n              puVar28[-1] = uVar40;\n              puVar24 = puVar28 + -8;\n              puVar28[-2] = uVar29;\n              puVar28[-3] = puVar16[-1];\n              puVar28[-4] = puVar16[-2];\n              puVar28[-5] = puVar16[-3];\n              puVar28[-6] = puVar16[-4];\n              puVar28[-7] = puVar16[-5];\n              *puVar24 = puVar16[-6];\n              puVar16 = puVar16 + -6;\n              puVar28 = puVar24;\n            } while (puVar24 != puVar17);\n          }\n          puVar24[-1] = uVar40;\n          puVar24[-2] = uVar29;\n          uVar23 = *(uint *)(param_1 + 0x134);\n          *(undefined2 *)((long)param_2 + 0x12) = 0x4004;\n          *(ulong *)(param_2 + 2) = (ulong)(uVar38 * 8);\n        }\n      }\n    }\n  }\n  if ((uVar23 & 0x20000) != 0) {\n    uVar43 = *param_2;\n    lVar15 = *(long *)(param_1 + 0x228) + 1;\n    if (*(char *)(param_2 + 4) == '\\x06') {\n      puVar16 = (undefined *)(lVar15 + *(long *)(param_2 + 2));\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        if (uVar43 == 0) goto LAB_001166a6;\n        puVar24 = puVar16;\n        do {\n          uVar29 = puVar24[-1];\n          puVar17 = puVar24 + -4;\n          puVar24[-1] = puVar24[-2];\n          puVar24[-2] = puVar24[-3];\n          uVar40 = *puVar17;\n          *puVar17 = uVar29;\n          puVar24[-3] = uVar40;\n          puVar24 = puVar17;\n        } while (puVar16 + ~(ulong)(uVar43 - 1) * 4 != puVar17);\n      }\n      else {\n        if (uVar43 == 0) goto LAB_001166a6;\n        puVar24 = puVar16;\n        do {\n          uVar29 = puVar24[-1];\n          puVar17 = puVar24 + -8;\n          uVar40 = puVar24[-2];\n          puVar24[-1] = puVar24[-3];\n          puVar24[-2] = puVar24[-4];\n          puVar24[-3] = puVar24[-5];\n          puVar24[-4] = puVar24[-6];\n          puVar24[-5] = puVar24[-7];\n          puVar24[-7] = uVar29;\n          puVar24[-6] = *puVar17;\n          *puVar17 = uVar40;\n          puVar24 = puVar17;\n        } while (puVar16 + ~(ulong)(uVar43 - 1) * 8 != puVar17);\n      }\n    }\n    else {\n      if (*(char *)(param_2 + 4) != '\\x04') goto LAB_001166a6;\n      puVar16 = (undefined *)(lVar15 + *(long *)(param_2 + 2));\n      if (*(char *)((long)param_2 + 0x11) == '\\b') {\n        if (uVar43 == 0) goto LAB_001166a6;\n        puVar24 = puVar16;\n        do {\n          uVar29 = puVar24[-1];\n          puVar17 = puVar24 + -2;\n          puVar24[-1] = puVar24[-2];\n          *puVar17 = uVar29;\n          puVar24 = puVar17;\n        } while (puVar17 != puVar16 + ~(ulong)(uVar43 - 1) * 2);\n      }\n      else {\n        if (uVar43 == 0) goto LAB_001166a6;\n        puVar24 = puVar16;\n        do {\n          uVar29 = puVar24[-1];\n          puVar17 = puVar24 + -4;\n          uVar40 = puVar24[-2];\n          puVar24[-1] = puVar24[-3];\n          puVar24[-3] = uVar29;\n          puVar24[-2] = *puVar17;\n          *puVar17 = uVar40;\n          puVar24 = puVar17;\n        } while (puVar17 != puVar16 + ~(ulong)(uVar43 - 1) * 4);\n      }\n    }\n    uVar23 = *(uint *)(param_1 + 0x134);\n  }\nLAB_001166a6:\n  if ((uVar23 & 0x10) != 0) {\n    FUN_00121420(param_2,*(long *)(param_1 + 0x228) + 1);\n    uVar23 = *(uint *)(param_1 + 0x134);\n  }\n  if ((uVar23 & 0x100000) != 0) {\n    if (*(code **)(param_1 + 0x110) != (code *)0x0) {\n      (**(code **)(param_1 + 0x110))(param_1,param_2,*(long *)(param_1 + 0x228) + 1);\n    }\n    cVar11 = *(char *)(param_1 + 0x128);\n    if (cVar11 == '\\0') {\n      cVar11 = *(char *)((long)param_2 + 0x11);\n    }\n    else {\n      *(char *)((long)param_2 + 0x11) = cVar11;\n    }\n    cVar30 = *(char *)(param_1 + 0x129);\n    if (cVar30 == '\\0') {\n      cVar30 = *(char *)((long)param_2 + 0x12);\n    }\n    else {\n      *(char *)((long)param_2 + 0x12) = cVar30;\n    }\n    bVar20 = cVar11 * cVar30;\n    *(byte *)((long)param_2 + 0x13) = bVar20;\n    if (bVar20 < 8) {\n      uVar13 = (ulong)bVar20 * (ulong)*param_2 + 7 >> 3;\n    }\n    else {\n      uVar13 = (ulong)(bVar20 >> 3) * (ulong)*param_2;\n    }\n    *(ulong *)(param_2 + 2) = uVar13;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00119630": "\nvoid FUN_00119630(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  ulong uVar3;\n  \n  uVar1 = *(ulong *)(param_1 + 8);\n  uVar3 = (ulong)((int)(*(byte *)(param_1 + 0x13) + 7) >> 3);\n  pcVar2 = (char *)(param_2 + uVar3);\n  if (uVar3 < uVar1) {\n    do {\n      *pcVar2 = *pcVar2 + pcVar2[-uVar3];\n      pcVar2 = pcVar2 + 1;\n    } while (pcVar2 != (char *)(param_2 + uVar1));\n  }\n  return;\n}\n\n", "FUN_00119670": "\nvoid FUN_00119670(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  lVar1 = *(long *)(param_1 + 8);\n  if (lVar1 != 0) {\n    lVar2 = 0;\n    do {\n      *(char *)(param_2 + lVar2) = *(char *)(param_2 + lVar2) + *(char *)(param_3 + lVar2);\n      lVar2 = lVar2 + 1;\n    } while (lVar1 != lVar2);\n  }\n  return;\n}\n\n", "FUN_001196a0": "\nvoid FUN_001196a0(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  \n  lVar1 = *(long *)(param_1 + 8);\n  iVar2 = (int)(*(byte *)(param_1 + 0x13) + 7) >> 3;\n  lVar4 = (long)iVar2;\n  if (iVar2 != 0) {\n    lVar3 = 0;\n    do {\n      *(char *)(param_2 + lVar3) = *(char *)(param_2 + lVar3) + (*(byte *)(param_3 + lVar3) >> 1);\n      lVar3 = lVar3 + 1;\n    } while (lVar4 != lVar3);\n    param_3 = param_3 + lVar4;\n    param_2 = param_2 + lVar4;\n  }\n  lVar3 = 0;\n  if (lVar1 != lVar4) {\n    do {\n      *(char *)(param_2 + lVar3) =\n           *(char *)(param_2 + lVar3) +\n           (char)((int)((uint)*(byte *)((param_2 - lVar4) + lVar3) +\n                       (uint)*(byte *)(param_3 + lVar3)) >> 1);\n      lVar3 = lVar3 + 1;\n    } while (lVar1 - lVar4 != lVar3);\n  }\n  return;\n}\n\n", "FUN_00119710": "\nvoid FUN_00119710(long param_1,byte *param_2,byte *param_3)\n\n{\n  byte bVar1;\n  long lVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  byte *pbVar13;\n  \n  bVar1 = *param_3;\n  lVar2 = *(long *)(param_1 + 8);\n  uVar5 = (uint)*param_2 + (uint)bVar1;\n  *param_2 = bVar1 + *param_2;\n  pbVar7 = param_2 + 1;\n  pbVar13 = param_3 + 1;\n  uVar11 = (uint)bVar1;\n  if (param_2 + 1 < param_2 + lVar2) {\n    do {\n      uVar12 = (uint)*pbVar13;\n      uVar9 = (uVar5 & 0xff) - uVar11;\n      uVar3 = uVar12 - uVar11;\n      iVar4 = ((int)uVar3 >> 0x1f ^ uVar3) - ((int)uVar3 >> 0x1f);\n      uVar10 = (int)(uVar3 + uVar9) >> 0x1f;\n      iVar6 = ((int)uVar9 >> 0x1f ^ uVar9) - ((int)uVar9 >> 0x1f);\n      uVar5 = uVar5 & 0xff;\n      if (iVar6 < iVar4) {\n        uVar5 = uVar12;\n        iVar4 = iVar6;\n      }\n      if ((int)((uVar3 + uVar9 ^ uVar10) - uVar10) < iVar4) {\n        uVar5 = uVar11;\n      }\n      pbVar8 = pbVar7 + 1;\n      uVar5 = uVar5 + *pbVar7;\n      *pbVar7 = (byte)uVar5;\n      pbVar7 = pbVar8;\n      pbVar13 = pbVar13 + 1;\n      uVar11 = uVar12;\n    } while (param_2 + lVar2 != pbVar8);\n  }\n  return;\n}\n\n", "FUN_001197b0": "\nvoid FUN_001197b0(long param_1,char *param_2,byte *param_3)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte bVar3;\n  uint uVar4;\n  char *pcVar5;\n  byte *pbVar6;\n  byte *pbVar8;\n  int iVar9;\n  int iVar10;\n  char *pcVar11;\n  uint uVar12;\n  uint uVar13;\n  long lVar14;\n  byte *pbVar7;\n  \n  lVar14 = (long)((int)(*(byte *)(param_1 + 0x13) + 7) >> 3);\n  pcVar11 = param_2;\n  if (param_2 < param_2 + lVar14) {\n    pbVar8 = param_3 + lVar14;\n    pcVar5 = param_2;\n    pbVar7 = param_3;\n    do {\n      pbVar6 = pbVar7 + 1;\n      *pcVar5 = *pcVar5 + *pbVar7;\n      pcVar5 = pcVar5 + 1;\n      param_3 = pbVar8;\n      pbVar7 = pbVar6;\n      pcVar11 = param_2 + lVar14;\n    } while (pbVar6 != pbVar8);\n  }\n  pbVar8 = param_3 + ((long)(param_2 + *(long *)(param_1 + 8)) - (long)pcVar11);\n  if (pcVar11 < param_2 + *(long *)(param_1 + 8)) {\n    do {\n      bVar1 = param_3[-lVar14];\n      bVar2 = *param_3;\n      param_3 = param_3 + 1;\n      uVar4 = (uint)bVar2 - (uint)bVar1;\n      uVar12 = (uint)(byte)pcVar11[-lVar14] - (uint)bVar1;\n      iVar9 = ((int)uVar4 >> 0x1f ^ uVar4) - ((int)uVar4 >> 0x1f);\n      uVar13 = (int)(uVar4 + uVar12) >> 0x1f;\n      iVar10 = ((int)uVar12 >> 0x1f ^ uVar12) - ((int)uVar12 >> 0x1f);\n      bVar3 = pcVar11[-lVar14];\n      if (iVar10 < iVar9) {\n        iVar9 = iVar10;\n        bVar3 = bVar2;\n      }\n      if ((int)((uVar4 + uVar12 ^ uVar13) - uVar13) < iVar9) {\n        bVar3 = bVar1;\n      }\n      *pcVar11 = bVar3 + *pcVar11;\n      pcVar11 = pcVar11 + 1;\n    } while (param_3 != pbVar8);\n  }\n  return;\n}\n\n", "FUN_00119890": "\nint FUN_00119890(long param_1,undefined4 param_2)\n\n{\n  long lVar1;\n  uint uVar2;\n  int iVar3;\n  undefined8 uVar4;\n  long in_FS_OFFSET;\n  bool bVar5;\n  uint local_78 [18];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *(uint *)(param_1 + 0x138);\n  if (*(int *)(param_1 + 0x138) != 0) {\n    local_78[0] = uVar2 >> 0x18 | (uVar2 & 0xff0000) >> 8 | (uVar2 & 0xff00) << 8 | uVar2 << 0x18;\n    FUN_0010adb0(local_78,0x40,4,\" using zstream\");\n    png_chunk_warning(param_1,local_78);\n    *(undefined4 *)(param_1 + 0x138) = 0;\n  }\n  *(undefined8 *)(param_1 + 0x140) = 0;\n  lVar1 = param_1 + 0x140;\n  *(undefined4 *)(param_1 + 0x148) = 0;\n  *(undefined8 *)(param_1 + 0x158) = 0;\n  *(undefined4 *)(param_1 + 0x160) = 0;\n  bVar5 = (*(uint *)(param_1 + 0x388) >> 2 & 3) != 3;\n  uVar4 = 0xf;\n  if (bVar5) {\n    uVar4 = 0;\n  }\n  *(bool *)(param_1 + 0x270) = bVar5;\n  if ((*(byte *)(param_1 + 0x130) & 2) == 0) {\n    iVar3 = inflateInit2_(lVar1,uVar4,\"1.2.11\",0x70);\n    if (iVar3 != 0) {\n      if ((((byte)((uint)*(undefined4 *)(param_1 + 0x388) >> 8) ^ 3) & 3) == 0) goto LAB_001199a0;\n      goto LAB_001199c6;\n    }\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 2;\n    if ((((byte)((uint)*(undefined4 *)(param_1 + 0x388) >> 8) ^ 3) & 3) == 0) {\nLAB_001199a0:\n      iVar3 = inflateValidate(lVar1,0);\n      goto joined_r0x001199b0;\n    }\n  }\n  else {\n    iVar3 = inflateReset2(lVar1);\n    if ((((byte)((uint)*(undefined4 *)(param_1 + 0x388) >> 8) ^ 3) & 3) == 0) goto LAB_001199a0;\njoined_r0x001199b0:\n    if (iVar3 != 0) {\nLAB_001199c6:\n      FUN_00107840(param_1,iVar3);\n      goto LAB_0011994d;\n    }\n  }\n  *(undefined4 *)(param_1 + 0x138) = param_2;\n  iVar3 = 0;\nLAB_0011994d:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", "FUN_00119a20": "\nvoid * FUN_00119a20(long param_1,ulong param_2,int param_3)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = *(void **)(param_1 + 0x460);\n  if (pvVar1 != (void *)0x0) {\n    if (param_2 <= *(ulong *)(param_1 + 0x468)) {\n      return pvVar1;\n    }\n    *(undefined8 *)(param_1 + 0x460) = 0;\n    *(undefined8 *)(param_1 + 0x468) = 0;\n    png_free(param_1,pvVar1);\n  }\n  pvVar1 = (void *)FUN_0010cbb0(param_1);\n  if (pvVar1 == (void *)0x0) {\n    if (param_3 != 2) {\n      if (param_3 == 0) {\n                    /* WARNING: Subroutine does not return */\n        png_chunk_error(param_1,\"insufficient memory to read chunk\");\n      }\n      png_chunk_warning();\n    }\n    return (void *)0x0;\n  }\n  memset(pvVar1,0,param_2);\n  *(void **)(param_1 + 0x460) = pvVar1;\n  *(ulong *)(param_1 + 0x468) = param_2;\n  return pvVar1;\n}\n\n", "FUN_00119ae0": "\nint FUN_00119ae0(byte *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (uint)param_1[2] * 0x100 +\n          (uint)param_1[3] + (uint)param_1[1] * 0x10000 + (uint)*param_1 * 0x1000000;\n  if (iVar1 < 0) {\n    iVar1 = -1;\n  }\n  return iVar1;\n}\n\n", "png_get_uint_32": "\nint png_get_uint_32(byte *param_1)\n\n{\n  return (uint)param_1[2] * 0x100 +\n         (uint)param_1[3] + (uint)param_1[1] * 0x10000 + (uint)*param_1 * 0x1000000;\n}\n\n", "png_get_int_32": "\nint png_get_int_32(byte *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = (uint)param_1[2] * 0x100 +\n          (uint)param_1[3] + (uint)param_1[1] * 0x10000 + (uint)*param_1 * 0x1000000;\n  if (iVar1 == -0x80000000) {\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n", "png_get_uint_16": "\nint png_get_uint_16(byte *param_1)\n\n{\n  return (uint)*param_1 * 0x100 + (uint)param_1[1];\n}\n\n", "FUN_00119be0": "\nvoid FUN_00119be0(long param_1,long param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  ulong uVar3;\n  \n  bVar1 = *(byte *)(param_1 + 0x26d);\n  if (bVar1 < 8) {\n    uVar3 = (ulong)bVar1;\n    *(undefined4 *)(param_1 + 0x474) = 0x11;\n    FUN_00113740(param_1,param_2 + 0x2c + uVar3,8 - uVar3);\n    *(undefined *)(param_1 + 0x26d) = 8;\n    iVar2 = png_sig_cmp(param_2 + 0x2c,uVar3,8 - uVar3);\n    if (iVar2 != 0) {\n      if (bVar1 < 4) {\n        iVar2 = png_sig_cmp(param_2 + 0x2c,uVar3,4 - uVar3);\n        if (iVar2 != 0) {\n                    /* WARNING: Subroutine does not return */\n          png_error(param_1,\"Not a PNG file\");\n        }\n      }\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"PNG file corrupted by ASCII conversion\");\n    }\n    if (bVar1 < 3) {\n      *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x1000;\n      return;\n    }\n  }\n  return;\n}\n\n", "FUN_00119cb0": "\nvoid FUN_00119cb0(long param_1,undefined8 param_2,undefined4 param_3)\n\n{\n  if (param_1 != 0) {\n    FUN_00113740(param_1,param_2,param_3);\n    FUN_001068d0(param_1,param_2,param_3);\n    return;\n  }\n  return;\n}\n\n", "FUN_00119cf0": "\nbool FUN_00119cf0(long param_1)\n\n{\n  long in_FS_OFFSET;\n  bool bVar1;\n  byte local_14;\n  byte local_13;\n  byte local_12;\n  byte local_11;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(param_1 + 0x21b) & 0x20) == 0) {\n    if ((*(uint *)(param_1 + 0x130) & 0x800) != 0) goto LAB_00119d95;\n  }\n  else if ((*(uint *)(param_1 + 0x130) & 0x300) == 0x300) {\nLAB_00119d95:\n    *(undefined4 *)(param_1 + 0x474) = 0x81;\n    FUN_00113740(param_1,&local_14,4);\n    bVar1 = false;\n    goto LAB_00119d74;\n  }\n  *(undefined4 *)(param_1 + 0x474) = 0x81;\n  FUN_00113740(param_1,&local_14,4);\n  bVar1 = (uint)local_12 * 0x100 +\n          (uint)local_11 + (uint)local_13 * 0x10000 + (uint)local_14 * 0x1000000 !=\n          *(int *)(param_1 + 0x24c);\nLAB_00119d74:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00119dc0": "\nundefined8 FUN_00119dc0(long param_1,uint param_2)\n\n{\n  byte bVar1;\n  undefined8 uVar2;\n  uint uVar3;\n  long in_FS_OFFSET;\n  undefined auStack1080 [1032];\n  long local_30;\n  \n  uVar3 = param_2 & 0x3ff;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0) {\n    do {\n      if (param_2 == uVar3) {\n        FUN_00119cb0(param_1,auStack1080,param_2);\n        break;\n      }\n      param_2 = param_2 - 0x400;\n      FUN_00119cb0(param_1,auStack1080,0x400);\n    } while (param_2 != 0);\n  }\n  uVar2 = FUN_00119cf0(param_1);\n  if ((int)uVar2 != 0) {\n    if ((*(byte *)(param_1 + 0x21b) & 0x20) == 0) {\n      bVar1 = (byte)(*(uint *)(param_1 + 0x130) >> 10);\n    }\n    else {\n      bVar1 = (byte)(*(uint *)(param_1 + 0x130) >> 9) ^ 1;\n    }\n    if ((bVar1 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error(param_1,\"CRC error\");\n    }\n    png_chunk_warning();\n    uVar2 = 1;\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", "FUN_00119eb0": "\nundefined8 FUN_00119eb0(long param_1,uint param_2)\n\n{\n  uint uVar1;\n  long lVar2;\n  \n  if (*(long *)(param_1 + 0x440) != 0) {\n    png_free();\n    *(undefined8 *)(param_1 + 0x440) = 0;\n  }\n  if ((*(ulong *)(param_1 + 0x430) - 1 < 0xfffffffffffffffe) &&\n     (*(ulong *)(param_1 + 0x430) < (ulong)param_2)) {\n    lVar2 = *(long *)(param_1 + 0x440);\n    if (lVar2 == 0) {\n      if (param_2 != 0) {\nLAB_00119f87:\n        FUN_00119dc0(param_1,param_2);\n        png_chunk_benign_error(param_1,\"unknown chunk exceeds memory limits\");\n        return 0;\n      }\n      goto LAB_00119f25;\n    }\n    if (param_2 == 0) goto LAB_00119f25;\n  }\n  else {\n    uVar1 = *(uint *)(param_1 + 0x218);\n    *(undefined *)(param_1 + 0x43c) = 0;\n    *(ulong *)(param_1 + 0x448) = (ulong)param_2;\n    *(uint *)(param_1 + 0x438) =\n         uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n    *(char *)(param_1 + 0x450) = (char)*(undefined4 *)(param_1 + 300);\n    if (param_2 == 0) {\n      *(undefined8 *)(param_1 + 0x440) = 0;\n      goto LAB_00119f25;\n    }\n    lVar2 = png_malloc_warn(param_1);\n    *(long *)(param_1 + 0x440) = lVar2;\n    if (lVar2 == 0) goto LAB_00119f87;\n  }\n  FUN_00119cb0(param_1,lVar2,param_2);\nLAB_00119f25:\n  FUN_00119dc0(param_1,0);\n  return 1;\n}\n\n", "FUN_00119fb0": "\nundefined8 FUN_00119fb0(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  if ((*(char *)(param_1 + 0x270) != '\\0') && (*(int *)(param_1 + 0x148) != 0)) {\n    if (**(char **)(param_1 + 0x140) < '\\0') {\n      *(char **)(param_1 + 0x170) = \"invalid window size (libpng)\";\n      return 0xfffffffd;\n    }\n    *(undefined *)(param_1 + 0x270) = 0;\n  }\n  uVar1 = inflate(param_1 + 0x140);\n  return uVar1;\n}\n\n", "FUN_0011a000": "\nint FUN_0011a000(long param_1,undefined8 param_2,uint *param_3,ulong *param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  ulong uVar3;\n  ulong uVar4;\n  uint uVar5;\n  \n  uVar5 = 0x400;\n  while( true ) {\n    uVar1 = *param_3;\n    if (*(int *)(param_1 + 0x148) == 0) {\n      if (uVar1 < uVar5) {\n        uVar5 = uVar1;\n      }\n      *param_3 = uVar1 - uVar5;\n      if (uVar5 != 0) {\n        FUN_00119cb0(param_1,param_2,uVar5);\n      }\n      *(undefined8 *)(param_1 + 0x140) = param_2;\n      *(uint *)(param_1 + 0x148) = uVar5;\n    }\n    if (*(int *)(param_1 + 0x160) == 0) {\n      uVar3 = *param_4;\n      uVar4 = 0;\n      if (0xfffffffe < uVar3) {\n        uVar4 = uVar3 - 0xffffffff;\n        uVar3 = 0xffffffff;\n      }\n      *param_4 = uVar4;\n      *(int *)(param_1 + 0x160) = (int)uVar3;\n    }\n    iVar2 = FUN_00119fb0(param_1);\n    if (iVar2 != 0) break;\n    if ((*param_4 == 0) && (uVar1 = *(uint *)(param_1 + 0x160), uVar1 == 0)) {\nLAB_0011a0ce:\n      *param_4 = *param_4 + (ulong)uVar1;\n      *(undefined4 *)(param_1 + 0x160) = 0;\n      FUN_00107840(param_1,iVar2);\n      return iVar2;\n    }\n  }\n  uVar1 = *(uint *)(param_1 + 0x160);\n  goto LAB_0011a0ce;\n}\n\n", "FUN_0011a130": "\nint FUN_0011a130(long param_1,int param_2,undefined8 param_3,int *param_4,long param_5,long *param_6\n                )\n\n{\n  uint uVar1;\n  int iVar2;\n  ulong uVar3;\n  uint uVar4;\n  int iVar5;\n  long lVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined local_448 [1032];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*(int *)(param_1 + 0x138) == param_2) {\n    lVar6 = *param_6;\n    iVar2 = *param_4;\n    *(undefined8 *)(param_1 + 0x140) = param_3;\n    if (param_5 != 0) {\n      *(long *)(param_1 + 0x158) = param_5;\n    }\n    uVar7 = 0;\n    iVar5 = 0;\n    uVar1 = (-(uint)(param_5 == 0) & 0x401) - 1;\n    while( true ) {\n      uVar7 = lVar6 + uVar7;\n      *(int *)(param_1 + 0x148) = iVar2 + iVar5;\n      if (param_5 == 0) {\n        *(undefined **)(param_1 + 0x158) = local_448;\n      }\n      uVar3 = (ulong)uVar1;\n      uVar4 = uVar1;\n      if (uVar7 < uVar1) {\n        uVar3 = uVar7;\n        uVar4 = (uint)uVar7;\n      }\n      *(uint *)(param_1 + 0x160) = uVar4;\n      lVar6 = uVar7 - uVar3;\n      iVar2 = FUN_00119fb0(param_1,(ulong)(lVar6 == 0) << 2);\n      if (iVar2 != 0) break;\n      iVar5 = *(int *)(param_1 + 0x148);\n      uVar7 = (ulong)*(uint *)(param_1 + 0x160);\n      iVar2 = 0;\n    }\n    if (param_5 == 0) {\n      *(undefined8 *)(param_1 + 0x158) = 0;\n    }\n    iVar5 = *(int *)(param_1 + 0x148);\n    lVar6 = lVar6 + (ulong)*(uint *)(param_1 + 0x160);\n    if (lVar6 != 0) {\n      *param_6 = *param_6 - lVar6;\n    }\n    if (iVar5 != 0) {\n      *param_4 = *param_4 - iVar5;\n    }\n    FUN_00107840(param_1,iVar2);\n  }\n  else {\n    *(char **)(param_1 + 0x170) = \"zstream unclaimed\";\n    iVar2 = -2;\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar2;\n}\n\n", "FUN_0011a2b0": "\nint FUN_0011a2b0(long param_1,int param_2,uint param_3,long *param_4)\n\n{\n  size_t __n;\n  void *__src;\n  int iVar1;\n  ulong uVar2;\n  long lVar3;\n  void *pvVar4;\n  long in_FS_OFFSET;\n  int local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *(ulong *)(param_1 + 0x430);\n  if (uVar2 - 1 < 0xfffffffffffffffe) {\n    if (uVar2 < param_3 + 1) {\n      FUN_00107840(param_1,0xfffffffc);\n      iVar1 = -4;\n      goto LAB_0011a31e;\n    }\n  }\n  else {\n    uVar2 = 0xffffffffffffffff;\n  }\n  lVar3 = uVar2 - (param_3 + 1);\n  if (lVar3 != -1) {\n    *param_4 = lVar3;\n  }\n  iVar1 = FUN_00119890(param_1,*(undefined4 *)(param_1 + 0x218));\n  if (iVar1 != 0) {\n    if (iVar1 == 1) {\n      iVar1 = -7;\n    }\n    goto LAB_0011a31e;\n  }\n  uVar2 = (ulong)param_3;\n  local_44 = param_2 - param_3;\n  iVar1 = FUN_0011a130(param_1,*(undefined4 *)(param_1 + 0x218),*(long *)(param_1 + 0x460) + uVar2,\n                       &local_44,0,param_4);\n  if (iVar1 == 1) {\n    iVar1 = inflateReset(param_1 + 0x140);\n    if (iVar1 == 0) {\n      lVar3 = *param_4;\n      __n = uVar2 + 1 + lVar3;\n      pvVar4 = (void *)FUN_0010cbb0(param_1);\n      if (pvVar4 == (void *)0x0) {\n        FUN_00107840(param_1,0xfffffffc);\n        iVar1 = -4;\n      }\n      else {\n        pvVar4 = memset(pvVar4,0,__n);\n        iVar1 = FUN_0011a130(param_1,*(undefined4 *)(param_1 + 0x218),\n                             *(long *)(param_1 + 0x460) + uVar2,&local_44);\n        if (iVar1 == 1) {\n          if (lVar3 != *param_4) goto LAB_0011a490;\n          __src = *(void **)(param_1 + 0x460);\n          *(undefined *)((long)pvVar4 + lVar3 + uVar2) = 0;\n          if (param_3 != 0) {\n            pvVar4 = memcpy(pvVar4,__src,uVar2);\n          }\n          *(void **)(param_1 + 0x460) = pvVar4;\n          *(size_t *)(param_1 + 0x468) = __n;\n          png_free(param_1,__src);\n          if (param_2 - param_3 != local_44) {\n            png_chunk_benign_error(param_1,\"extra compressed data\");\n          }\n        }\n        else if (iVar1 == 0) {\nLAB_0011a490:\n          png_free(param_1,pvVar4);\n          iVar1 = -7;\n        }\n        else {\n          png_free(param_1,pvVar4);\n        }\n      }\n    }\n    else {\n      FUN_00107840(param_1,1);\n      iVar1 = -7;\n    }\n  }\n  else if (iVar1 == 0) {\n    iVar1 = -7;\n  }\n  *(undefined4 *)(param_1 + 0x138) = 0;\nLAB_0011a31e:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011a560": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_0011a560(long param_1,undefined8 param_2,int param_3)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  byte bVar3;\n  uint uVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  undefined local_4d [8];\n  undefined2 local_45;\n  undefined local_43;\n  undefined local_42;\n  undefined local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"out of place\");\n  }\n  if (param_3 == 0xd) {\n    *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 1;\n    FUN_00119cb0(param_1,local_4d,0xd);\n    FUN_00119dc0(param_1,0);\n    uVar1 = png_get_uint_31(param_1,local_4d);\n    uVar2 = png_get_uint_31();\n    uVar5 = (ulong)(byte)local_45;\n    *(uint *)(param_1 + 0x1f8) = uVar1;\n    *(undefined4 *)(param_1 + 0x1fc) = uVar2;\n    *(undefined *)(param_1 + 0x264) = local_41;\n    *(ushort *)(param_1 + 0x267) = local_45 << 8 | local_45 >> 8;\n    *(undefined *)(param_1 + 0x3e4) = local_42;\n    *(undefined *)(param_1 + 0x420) = local_43;\n    if (local_45._1_1_ == '\\x04') {\n      uVar5 = (ulong)((uint)(byte)local_45 * 2);\n      *(undefined *)(param_1 + 0x26b) = 2;\n      bVar3 = (byte)((uint)(byte)local_45 * 2);\n      *(byte *)(param_1 + 0x26a) = bVar3;\n    }\n    else if (local_45._1_1_ == '\\x06') {\n      bVar3 = (byte)local_45 << 2;\n      uVar5 = (ulong)(byte)local_45 << 2;\n      *(undefined *)(param_1 + 0x26b) = 4;\n      *(byte *)(param_1 + 0x26a) = bVar3;\n    }\n    else if (local_45._1_1_ == '\\x02') {\n      uVar4 = (uint)(byte)local_45 + (uint)(byte)local_45 * 2;\n      uVar5 = (ulong)uVar4;\n      *(undefined *)(param_1 + 0x26b) = 3;\n      bVar3 = (byte)uVar4;\n      *(byte *)(param_1 + 0x26a) = bVar3;\n    }\n    else {\n      *(undefined *)(param_1 + 0x26b) = 1;\n      *(byte *)(param_1 + 0x26a) = (byte)local_45;\n      bVar3 = (byte)local_45;\n    }\n    if (bVar3 < 8) {\n      uVar5 = (uVar5 & 0xff) * (ulong)uVar1 + 7 >> 3;\n    }\n    else {\n      uVar5 = (ulong)((byte)(uVar5 >> 3) & 0x1f) * (ulong)uVar1;\n    }\n    *(ulong *)(param_1 + 0x208) = uVar5;\n    png_set_IHDR(param_1,param_2,uVar1);\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n                    /* WARNING: Subroutine does not return */\n  png_chunk_error(param_1,\"invalid\");\n}\n\n", "FUN_0011a760": "\nvoid FUN_0011a760(long param_1,long param_2,uint param_3)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  char *pcVar3;\n  uint uVar4;\n  long in_FS_OFFSET;\n  undefined *local_350;\n  undefined local_348 [773];\n  undefined local_43;\n  undefined local_42;\n  undefined local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = *(uint *)(param_1 + 300);\n  if ((uVar4 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar4 & 2) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"duplicate\");\n  }\n  if ((uVar4 & 4) != 0) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n    goto LAB_0011a91f;\n  }\n  *(uint *)(param_1 + 300) = uVar4 | 2;\n  if ((*(byte *)(param_1 + 0x267) & 2) == 0) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"ignored in grayscale PNG\");\n    goto LAB_0011a91f;\n  }\n  if ((param_3 < 0x301) && (param_3 * -0x55555555 < 0x55555556)) {\n    uVar4 = 0x100;\n    if (*(byte *)(param_1 + 0x267) == 3) {\n      uVar4 = 1 << (*(byte *)(param_1 + 0x268) & 0x1f);\n    }\n    if ((int)(param_3 / 3) < (int)uVar4) {\n      uVar4 = param_3 / 3;\n    }\n    if (0 < (int)uVar4) {\n      puVar1 = local_348;\n      do {\n        puVar2 = puVar1 + 3;\n        FUN_00119cb0(param_1,&local_43,3);\n        *puVar1 = local_43;\n        puVar1[1] = local_42;\n        puVar1[2] = local_41;\n        puVar1 = puVar2;\n      } while (puVar2 != local_348 + (ulong)(uVar4 - 1) * 3 + 3);\n    }\n    local_350 = local_348;\n    FUN_00119dc0(param_1,param_3 + uVar4 * -3);\n    png_set_PLTE(param_1,param_2,local_350,uVar4);\n    if (*(short *)(param_1 + 0x260) == 0) {\n      if (param_2 == 0) goto LAB_0011a91f;\n      uVar4 = *(uint *)(param_2 + 8);\n      if ((uVar4 & 0x10) != 0) goto LAB_0011a8bb;\n    }\n    else {\n      *(undefined2 *)(param_1 + 0x260) = 0;\n      if (param_2 == 0) {\n        pcVar3 = \"tRNS must be after\";\n        goto LAB_0011a91a;\n      }\nLAB_0011a8bb:\n      *(undefined2 *)(param_2 + 0x22) = 0;\n      png_chunk_benign_error(param_1,\"tRNS must be after\");\n      uVar4 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar4 & 0x40) != 0) {\n      png_chunk_benign_error(param_1,\"hIST must be after\");\n      uVar4 = *(uint *)(param_2 + 8);\n    }\n    if ((uVar4 & 0x20) != 0) {\n      png_chunk_benign_error(param_1,\"bKGD must be after\");\n    }\n  }\n  else {\n    FUN_00119dc0(param_1,param_3);\n    pcVar3 = \"invalid\";\n    if (*(char *)(param_1 + 0x267) == '\\x03') {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error(param_1,\"invalid\");\n    }\nLAB_0011a91a:\n    png_chunk_benign_error(param_1,pcVar3);\n  }\nLAB_0011a91f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011aa40": "\nvoid FUN_0011aa40(long param_1,undefined8 param_2,int param_3)\n\n{\n  if ((*(uint *)(param_1 + 300) & 5) != 5) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"out of place\");\n  }\n  *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x18;\n  FUN_00119dc0(param_1,param_3);\n  if (param_3 == 0) {\n    return;\n  }\n  png_chunk_benign_error(param_1,\"invalid\");\n  return;\n}\n\n", "FUN_0011aab0": "\nvoid FUN_0011aab0(long param_1,undefined8 param_2,int param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  long in_FS_OFFSET;\n  undefined local_24 [4];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 6) == 0) {\n    if (param_3 == 4) {\n      FUN_00119cb0(param_1,local_24,4);\n      iVar1 = FUN_00119dc0(param_1,0);\n      if (iVar1 == 0) {\n        uVar2 = FUN_00119ae0(local_24);\n        FUN_00109a40(param_1,param_1 + 0x4a0,uVar2);\n        FUN_00107970(param_1,param_2);\n      }\n    }\n    else {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"invalid\");\n    }\n  }\n  else {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011aba0": "\nvoid FUN_0011aba0(long param_1,long param_2,uint param_3)\n\n{\n  int iVar1;\n  byte *pbVar2;\n  byte bVar3;\n  uint uVar4;\n  long in_FS_OFFSET;\n  byte local_44 [4];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 6) != 0) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n    goto LAB_0011aca0;\n  }\n  if ((param_2 != 0) && ((*(byte *)(param_2 + 8) & 2) != 0)) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"duplicate\");\n    goto LAB_0011aca0;\n  }\n  if (*(char *)(param_1 + 0x267) == '\\x03') {\n    uVar4 = 3;\n    bVar3 = 8;\n    if (param_3 == 3) goto LAB_0011ac16;\n  }\n  else {\n    uVar4 = (uint)*(byte *)(param_1 + 0x26b);\n    bVar3 = *(byte *)(param_1 + 0x268);\n    if (*(byte *)(param_1 + 0x26b) == param_3) {\nLAB_0011ac16:\n      if (param_3 < 5) {\n        pbVar2 = local_44;\n        local_44[0] = bVar3;\n        local_44[1] = bVar3;\n        local_44[2] = bVar3;\n        local_44[3] = bVar3;\n        FUN_00119cb0(param_1,pbVar2,uVar4);\n        iVar1 = FUN_00119dc0(param_1,0);\n        if (iVar1 == 0) {\n          if (uVar4 != 0) {\n            do {\n              if ((*pbVar2 == 0) || (bVar3 < *pbVar2)) {\n                png_chunk_benign_error(param_1,\"invalid\");\n                goto LAB_0011aca0;\n              }\n              pbVar2 = pbVar2 + 1;\n            } while (local_44 + (ulong)(uVar4 - 1) + 1 != pbVar2);\n          }\n          if ((*(byte *)(param_1 + 0x267) & 2) == 0) {\n            *(byte *)(param_1 + 0x2db) = local_44[0];\n            *(byte *)(param_1 + 0x2d8) = local_44[0];\n            *(byte *)(param_1 + 0x2d9) = local_44[0];\n            *(byte *)(param_1 + 0x2da) = local_44[0];\n            *(byte *)(param_1 + 0x2dc) = local_44[1];\n          }\n          else {\n            *(byte *)(param_1 + 0x2d8) = local_44[0];\n            *(byte *)(param_1 + 0x2d9) = local_44[1];\n            *(byte *)(param_1 + 0x2da) = local_44[2];\n            *(byte *)(param_1 + 0x2dc) = local_44[3];\n          }\n          png_set_sBIT(param_1,param_2,param_1 + 0x2d8);\n        }\n        goto LAB_0011aca0;\n      }\n    }\n  }\n  png_chunk_benign_error(param_1,\"invalid\");\n  FUN_00119dc0(param_1,param_3);\nLAB_0011aca0:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011add0": "\nvoid FUN_0011add0(long param_1,undefined8 param_2,int param_3)\n\n{\n  ushort uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  long in_FS_OFFSET;\n  int local_78;\n  int local_74;\n  int local_70;\n  int local_6c;\n  int local_68;\n  int local_64;\n  int local_60;\n  int local_5c;\n  undefined local_58 [4];\n  undefined local_54 [4];\n  undefined local_50 [4];\n  undefined local_4c [4];\n  undefined local_48 [4];\n  undefined local_44 [4];\n  undefined local_40 [4];\n  undefined local_3c [12];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 6) == 0) {\n    if (param_3 == 0x20) {\n      FUN_00119cb0(param_1,local_58,0x20);\n      iVar2 = FUN_00119dc0(param_1);\n      if (iVar2 == 0) {\n        iVar2 = FUN_00119ae0(local_58);\n        local_60 = iVar2;\n        iVar3 = FUN_00119ae0(local_54);\n        local_5c = iVar3;\n        iVar4 = FUN_00119ae0(local_50);\n        local_78 = iVar4;\n        iVar5 = FUN_00119ae0(local_4c);\n        local_74 = iVar5;\n        iVar6 = FUN_00119ae0(local_48);\n        local_70 = iVar6;\n        iVar7 = FUN_00119ae0(local_44);\n        local_6c = iVar7;\n        iVar8 = FUN_00119ae0(local_40);\n        local_68 = iVar8;\n        local_64 = FUN_00119ae0(local_3c);\n        if (((((((iVar2 == -1 || iVar3 == -1) || iVar4 == -1) || iVar5 == -1) || iVar6 == -1) ||\n             iVar7 == -1) || iVar8 == -1) || (local_64 == -1)) {\n          png_chunk_benign_error(param_1,\"invalid values\");\n        }\n        else {\n          uVar1 = *(ushort *)(param_1 + 0x4ea);\n          if (-1 < (short)uVar1) {\n            if ((uVar1 & 0x10) == 0) {\n              *(ushort *)(param_1 + 0x4ea) = uVar1 | 0x10;\n              FUN_001098a0(param_1,param_1 + 0x4a0,&local_78,1);\n              FUN_00107970(param_1,param_2);\n            }\n            else {\n              *(ushort *)(param_1 + 0x4ea) = uVar1 | 0x8000;\n              FUN_00107970(param_1,param_2);\n              png_chunk_benign_error(param_1,\"duplicate\");\n            }\n          }\n        }\n      }\n    }\n    else {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"invalid\");\n    }\n  }\n  else {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011aff0": "\nvoid FUN_0011aff0(long param_1,undefined8 param_2,int param_3)\n\n{\n  ushort uVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  undefined local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 6) == 0) {\n    if (param_3 == 1) {\n      FUN_00119cb0(param_1,&local_21,1);\n      iVar2 = FUN_00119dc0(param_1,0);\n      if ((iVar2 == 0) && (uVar1 = *(ushort *)(param_1 + 0x4ea), -1 < (short)uVar1)) {\n        if ((uVar1 & 4) == 0) {\n          FUN_00109ad0(param_1,param_1 + 0x4a0,local_21);\n          FUN_00107970(param_1,param_2);\n        }\n        else {\n          *(ushort *)(param_1 + 0x4ea) = uVar1 | 0x8000;\n          FUN_00107970(param_1,param_2);\n          png_chunk_benign_error(param_1,\"too many profiles\");\n        }\n      }\n    }\n    else {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"invalid\");\n    }\n  }\n  else {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011b110": "\nvoid FUN_0011b110(long param_1,long param_2,uint param_3)\n\n{\n  long lVar1;\n  uint uVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  long lVar5;\n  ulong uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 *puVar10;\n  char *pcVar11;\n  undefined4 *puVar12;\n  ulong uVar13;\n  uint uVar14;\n  char *pcVar15;\n  long in_FS_OFFSET;\n  byte bVar16;\n  uint local_54c [3];\n  ulong local_540;\n  char local_538 [96];\n  undefined local_4d8 [16];\n  undefined local_4c8 [16];\n  undefined local_4b8 [16];\n  undefined local_4a8 [16];\n  undefined local_498 [16];\n  undefined local_488 [16];\n  undefined local_478 [16];\n  undefined local_468 [16];\n  uint local_458;\n  undefined local_448 [1032];\n  long local_40;\n  \n  bVar16 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_54c[0] = param_3;\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  uVar7 = *(uint *)(param_1 + 300) & 6;\n  if (uVar7 != 0) {\n    FUN_00119dc0();\n    png_chunk_benign_error(param_1,\"out of place\");\n    goto LAB_0011b367;\n  }\n  if (param_3 < 0xe) {\nLAB_0011b350:\n    FUN_00119dc0(param_1);\n    png_chunk_benign_error(param_1,\"too short\");\n    goto LAB_0011b367;\n  }\n  if ((short)*(ushort *)(param_1 + 0x4ea) < 0) {\n    FUN_00119dc0();\n    goto LAB_0011b367;\n  }\n  if ((*(ushort *)(param_1 + 0x4ea) & 4) != 0) {\n    pcVar15 = \"too many profiles\";\n    goto LAB_0011b3b7;\n  }\n  uVar14 = 0x51;\n  if (param_3 < 0x51) {\n    uVar14 = param_3;\n  }\n  FUN_00119cb0(param_1,local_538,uVar14);\n  local_54c[0] = local_54c[0] - uVar14;\n  pcVar15 = local_538;\n  if (local_54c[0] < 0xb) goto LAB_0011b350;\n  while (uVar8 = uVar7, *pcVar15 != '\\0') {\n    uVar7 = uVar8 + 1;\n    pcVar15 = pcVar15 + 1;\n    uVar9 = uVar8;\n    if ((0x4f < uVar7) || (uVar14 <= uVar7)) goto LAB_0011b1e1;\n  }\n  uVar9 = uVar8 - 1;\n  uVar7 = uVar8;\nLAB_0011b1e1:\n  if (uVar9 < 0x4f) {\n    pcVar15 = \"bad compression method\";\n    if (uVar14 <= uVar7 + 1) goto LAB_0011b3b7;\n    uVar6 = (ulong)(uVar7 + 1);\n    pcVar15 = \"bad compression method\";\n    if (local_538[uVar6] != '\\0') goto LAB_0011b3b7;\n    iVar3 = FUN_00119890(param_1,0x69434350);\n    if (iVar3 == 0) {\n      local_4d8 = (undefined  [16])0x0;\n      *(uint *)(param_1 + 0x148) = (uVar14 - 2) - uVar7;\n      *(char **)(param_1 + 0x140) = local_538 + (uVar7 + 2);\n      local_458 = 0;\n      local_540 = 0x84;\n      local_4c8 = (undefined  [16])0x0;\n      local_4b8 = (undefined  [16])0x0;\n      local_4a8 = (undefined  [16])0x0;\n      local_498 = (undefined  [16])0x0;\n      local_488 = (undefined  [16])0x0;\n      local_478 = (undefined  [16])0x0;\n      local_468 = (undefined  [16])0x0;\n      if (*(int *)(param_1 + 0x138) != *(int *)(param_1 + 0x218)) {\n        *(char **)(param_1 + 0x170) = \"zstream unclaimed\";\nLAB_0011b30a:\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        pcVar15 = *(char **)(param_1 + 0x170);\n        goto LAB_0011b320;\n      }\n      *(undefined **)(param_1 + 0x158) = local_4d8;\n      *(undefined4 *)(param_1 + 0x160) = 0;\n      FUN_0011a000(0,param_1,local_448,local_54c,&local_540,0);\n      if (local_540 != 0) goto LAB_0011b30a;\n      lVar1 = param_1 + 0x4a0;\n      uVar7 = (uint)local_4d8[0] * 0x1000000 + (uint)local_4d8[1] * 0x10000 + (uint)local_4d8[3] +\n              (uint)local_4d8[2] * 0x100;\n      iVar3 = FUN_001079d0(param_1,lVar1,local_538);\n      if ((iVar3 == 0) ||\n         (iVar3 = FUN_00107a60(param_1,lVar1,local_538,uVar7,local_4d8,\n                               *(undefined *)(param_1 + 0x267)), uVar14 = local_458, iVar3 == 0)) {\nLAB_0011b46a:\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        FUN_00119dc0(param_1,local_54c[0]);\n        *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 0x8000;\n        FUN_00107970(param_1,param_2);\n        goto LAB_0011b367;\n      }\n      uVar8 = local_458 >> 8;\n      uVar2 = local_458 >> 0x10;\n      uVar9 = local_458 >> 0x18;\n      puVar4 = (undefined4 *)FUN_00119a20(param_1,(ulong)uVar7,2);\n      if (puVar4 == (undefined4 *)0x0) {\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        pcVar15 = \"out of memory\";\n        goto LAB_0011b3b7;\n      }\n      puVar10 = (undefined4 *)local_4d8;\n      puVar12 = puVar4;\n      for (lVar5 = 0x21; lVar5 != 0; lVar5 = lVar5 + -1) {\n        *puVar12 = *puVar10;\n        puVar10 = puVar10 + (ulong)bVar16 * -2 + 1;\n        puVar12 = puVar12 + (ulong)bVar16 * -2 + 1;\n      }\n      uVar13 = (ulong)((uVar14 * 0x1000000 + (uVar8 & 0xff) * 0x10000 + uVar9 +\n                       (uVar2 & 0xff) * 0x100) * 0xc);\n      local_540 = uVar13;\n      if (*(int *)(param_1 + 0x138) == *(int *)(param_1 + 0x218)) {\n        *(undefined4 **)(param_1 + 0x158) = puVar4 + 0x21;\n        *(undefined4 *)(param_1 + 0x160) = 0;\n        FUN_0011a000(param_1,local_448,local_54c,&local_540,0);\n      }\n      else {\n        *(char **)(param_1 + 0x170) = \"zstream unclaimed\";\n      }\n      if (local_540 != 0) goto LAB_0011b30a;\n      iVar3 = FUN_00107e00(param_1,lVar1,local_538);\n      if (iVar3 == 0) goto LAB_0011b46a;\n      local_540 = ((ulong)uVar7 - 0x84) - uVar13;\n      if (*(int *)(param_1 + 0x138) == *(int *)(param_1 + 0x218)) {\n        *(ulong *)(param_1 + 0x158) = (long)puVar4 + uVar13 + 0x84;\n        *(undefined4 *)(param_1 + 0x160) = 0;\n        FUN_0011a000(param_1,local_448,local_54c,&local_540);\n      }\n      else {\n        *(char **)(param_1 + 0x170) = \"zstream unclaimed\";\n      }\n      if (local_54c[0] == 0) {\n        if (local_540 != 0) {\nLAB_0011b779:\n          *(undefined4 *)(param_1 + 0x138) = 0;\n          pcVar15 = *(char **)(param_1 + 0x170);\n          goto LAB_0011b320;\n        }\n      }\n      else {\n        if ((*(byte *)(param_1 + 0x132) & 0x10) == 0) {\n          *(undefined4 *)(param_1 + 0x138) = 0;\n          pcVar15 = \"extra compressed data\";\n          goto LAB_0011b3b7;\n        }\n        if (local_540 != 0) goto LAB_0011b779;\n        png_chunk_warning(param_1,\"extra compressed data\");\n      }\n      FUN_00119dc0(param_1,local_54c[0]);\n      FUN_00109c50(param_1,lVar1,puVar4,*(undefined8 *)(param_1 + 0x1a0));\n      if (param_2 == 0) {\nLAB_0011b76a:\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        goto LAB_0011b367;\n      }\n      png_free_data(param_1,param_2,0x10,0);\n      pcVar15 = (char *)FUN_0010cbb0(param_1,uVar6);\n      *(char **)(param_2 + 0x80) = pcVar15;\n      if (pcVar15 != (char *)0x0) {\n        *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x10;\n        *(uint *)(param_2 + 0x90) = uVar7;\n        pcVar11 = local_538;\n        for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n          *pcVar15 = *pcVar11;\n          pcVar11 = pcVar11 + (ulong)bVar16 * -2 + 1;\n          pcVar15 = pcVar15 + (ulong)bVar16 * -2 + 1;\n        }\n        *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x1000;\n        *(undefined4 **)(param_2 + 0x88) = puVar4;\n        *(undefined8 *)(param_1 + 0x460) = 0;\n        FUN_00107970(param_1,param_2);\n        goto LAB_0011b76a;\n      }\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 0x8000;\n      pcVar15 = \"out of memory\";\n      FUN_00107970(param_1,param_2);\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 0x8000;\n      *(undefined4 *)(param_1 + 0x138) = 0;\n      FUN_00107970(param_1,param_2);\n    }\n    else {\n      pcVar15 = *(char **)(param_1 + 0x170);\nLAB_0011b320:\n      FUN_00119dc0(param_1,local_54c[0]);\n      *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 0x8000;\n      FUN_00107970(param_1,param_2);\n      if (pcVar15 == (char *)0x0) goto LAB_0011b367;\n    }\n  }\n  else {\n    pcVar15 = \"bad keyword\";\nLAB_0011b3b7:\n    FUN_00119dc0(param_1,local_54c[0]);\n    *(ushort *)(param_1 + 0x4ea) = *(ushort *)(param_1 + 0x4ea) | 0x8000;\n    FUN_00107970(param_1,param_2);\n  }\n  png_chunk_benign_error(param_1,pcVar15);\nLAB_0011b367:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011b820": "\nvoid FUN_0011b820(long param_1,undefined8 param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  int iVar3;\n  char *pcVar4;\n  ushort *puVar5;\n  ushort *puVar6;\n  uint uVar7;\n  byte *pbVar8;\n  char *pcVar9;\n  byte *pbVar10;\n  uint uVar11;\n  long in_FS_OFFSET;\n  char *local_58;\n  char local_50;\n  ushort *local_48;\n  int local_40;\n  long local_30;\n  \n  param_3 = param_3 & 0xffffffff;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar3 = *(int *)(param_1 + 0x42c);\n  if (iVar3 == 0) {\nLAB_0011b86e:\n    if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_chunk_error(param_1,\"missing IHDR\");\n    }\n    if ((*(uint *)(param_1 + 300) & 4) == 0) {\n      uVar11 = (uint)param_3;\n      pcVar4 = (char *)FUN_00119a20(param_1,uVar11 + 1,2);\n      if (pcVar4 == (char *)0x0) {\n        FUN_00119dc0(param_1,param_3);\n        png_chunk_benign_error(param_1,\"out of memory\");\n      }\n      else {\n        FUN_00119cb0(param_1,pcVar4,param_3);\n        iVar3 = FUN_00119dc0(param_1,0);\n        if (iVar3 == 0) {\n          pcVar4[param_3] = '\\0';\n          cVar1 = *pcVar4;\n          pcVar9 = pcVar4;\n          while (cVar1 != '\\0') {\n            pcVar9 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n          }\n          if ((uVar11 < 2) || (pcVar4 + (uVar11 - 2) < pcVar9 + 1)) {\n            png_warning(param_1,\"malformed sPLT chunk\");\n          }\n          else {\n            local_50 = pcVar9[1];\n            pbVar10 = (byte *)(pcVar9 + 2);\n            uVar11 = uVar11 - ((int)pbVar10 - (int)pcVar4);\n            uVar7 = (uint)(local_50 != '\\b') * 4 + 6;\n            uVar2 = (ulong)uVar11 / (ulong)uVar7;\n            if (uVar11 % uVar7 == 0) {\n              local_40 = (int)uVar2;\n              local_48 = (ushort *)png_malloc_warn(param_1,uVar2 * 10);\n              if (local_48 == (ushort *)0x0) {\n                png_warning(param_1,\"sPLT chunk requires too much memory\");\n              }\n              else {\n                if (0 < local_40) {\n                  puVar6 = local_48;\n                  do {\n                    if (local_50 == '\\b') {\n                      *puVar6 = (ushort)*pbVar10;\n                      pbVar8 = pbVar10 + 4;\n                      puVar6[1] = (ushort)pbVar10[1];\n                      puVar6[2] = (ushort)pbVar10[2];\n                      puVar6[3] = (ushort)pbVar10[3];\n                    }\n                    else {\n                      *puVar6 = (ushort)*pbVar10 * 0x100 + (ushort)pbVar10[1];\n                      puVar6[1] = (ushort)pbVar10[2] * 0x100 + (ushort)pbVar10[3];\n                      puVar6[2] = (ushort)pbVar10[4] * 0x100 + (ushort)pbVar10[5];\n                      pbVar8 = pbVar10 + 8;\n                      puVar6[3] = (ushort)pbVar10[6] * 0x100 + (ushort)pbVar10[7];\n                    }\n                    puVar5 = puVar6 + 5;\n                    pbVar10 = pbVar8 + 2;\n                    puVar6[4] = (ushort)*pbVar8 * 0x100 + (ushort)pbVar8[1];\n                    puVar6 = puVar5;\n                  } while (local_48 + (ulong)(local_40 - 1) * 5 + 5 != puVar5);\n                }\n                local_58 = pcVar4;\n                png_set_sPLT(param_1,param_2,&local_58,1);\n                png_free(param_1,local_48);\n              }\n            }\n            else {\n              png_warning(param_1,\"sPLT chunk has bad length\");\n            }\n          }\n        }\n      }\n    }\n    else {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"out of place\");\n    }\n  }\n  else {\n    if (iVar3 != 1) {\n      *(int *)(param_1 + 0x42c) = iVar3 + -1;\n      if (iVar3 + -1 != 1) goto LAB_0011b86e;\n      png_warning(param_1,\"No space in chunk cache for sPLT\");\n    }\n    FUN_00119dc0(param_1,param_3);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011bb10": "\nvoid FUN_0011bb10(long param_1,long param_2,uint param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  long in_FS_OFFSET;\n  byte local_138;\n  byte local_137;\n  byte local_136;\n  byte local_135;\n  byte local_134;\n  byte local_133;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *(uint *)(param_1 + 300);\n  if ((uVar2 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar2 & 4) != 0) {\nLAB_0011bc50:\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n    goto LAB_0011bbca;\n  }\n  if ((param_2 != 0) && ((*(byte *)(param_2 + 8) & 0x10) != 0)) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"duplicate\");\n    goto LAB_0011bbca;\n  }\n  cVar1 = *(char *)(param_1 + 0x267);\n  if (cVar1 == '\\0') {\n    if (param_3 == 2) {\n      FUN_00119cb0(param_1,&local_138,2);\n      *(undefined2 *)(param_1 + 0x260) = 1;\n      *(ushort *)(param_1 + 0x2f8) = (ushort)local_138 * 0x100 + (ushort)local_137;\nLAB_0011bc2a:\n      iVar3 = FUN_00119dc0(param_1,0);\n      if (iVar3 == 0) {\n        png_set_tRNS(param_1,param_2,&local_138,*(undefined2 *)(param_1 + 0x260),param_1 + 0x2f0);\n      }\n      else {\n        *(undefined2 *)(param_1 + 0x260) = 0;\n      }\n      goto LAB_0011bbca;\n    }\n  }\n  else if (cVar1 == '\\x02') {\n    if (param_3 == 6) {\n      FUN_00119cb0(param_1,&local_138,6);\n      *(undefined2 *)(param_1 + 0x260) = 1;\n      *(ushort *)(param_1 + 0x2f2) = (ushort)local_138 * 0x100 + (ushort)local_137;\n      *(ushort *)(param_1 + 0x2f4) = (ushort)local_136 * 0x100 + (ushort)local_135;\n      *(ushort *)(param_1 + 0x2f6) = (ushort)local_134 * 0x100 + (ushort)local_133;\n      goto LAB_0011bc2a;\n    }\n  }\n  else {\n    if (cVar1 != '\\x03') {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"invalid with alpha channel\");\n      goto LAB_0011bbca;\n    }\n    if ((uVar2 & 2) == 0) goto LAB_0011bc50;\n    if ((param_3 <= *(ushort *)(param_1 + 600)) && (param_3 - 1 < 0x100)) {\n      FUN_00119cb0(param_1,&local_138,param_3);\n      *(short *)(param_1 + 0x260) = (short)param_3;\n      goto LAB_0011bc2a;\n    }\n  }\n  FUN_00119dc0(param_1,param_3);\n  png_chunk_benign_error(param_1,\"invalid\");\nLAB_0011bbca:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011bd80": "\nvoid FUN_0011bd80(long param_1,long param_2,uint param_3)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int iVar3;\n  byte *pbVar4;\n  uint uVar5;\n  long in_FS_OFFSET;\n  byte local_30 [2];\n  uint local_2e;\n  ushort local_2a;\n  ushort local_28;\n  byte local_26;\n  byte local_25;\n  byte local_24;\n  byte local_23;\n  byte local_22;\n  byte local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *(uint *)(param_1 + 300);\n  uVar5 = uVar2 & 1;\n  if (uVar5 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar2 & 4) != 0) {\nLAB_0011bea4:\n    FUN_00119dc0(param_1);\n    png_chunk_benign_error(param_1,\"out of place\");\n    goto LAB_0011be06;\n  }\n  if (*(byte *)(param_1 + 0x267) == 3) {\n    if ((uVar2 & 2) == 0) goto LAB_0011bea4;\n    if ((param_2 != 0) && ((*(byte *)(param_2 + 8) & 0x20) != 0)) goto LAB_0011bed8;\n  }\n  else {\n    if ((param_2 != 0) && ((*(byte *)(param_2 + 8) & 0x20) != 0)) {\nLAB_0011bed8:\n      FUN_00119dc0(param_1);\n      png_chunk_benign_error(param_1,\"duplicate\");\n      goto LAB_0011be06;\n    }\n    uVar5 = (-(uint)((*(byte *)(param_1 + 0x267) & 2) == 0) & 0xfffffffc) + 6;\n  }\n  if (uVar5 != param_3) {\n    FUN_00119dc0(param_1);\n    png_chunk_benign_error(param_1,\"invalid\");\n    goto LAB_0011be06;\n  }\n  FUN_00119cb0(param_1);\n  iVar3 = FUN_00119dc0(param_1);\n  if (iVar3 != 0) goto LAB_0011be06;\n  if (*(byte *)(param_1 + 0x267) == 3) {\n    local_30[0] = local_26;\n    if ((param_2 == 0) || (*(ushort *)(param_2 + 0x20) == 0)) {\n      local_2e = 0;\n      local_2a = 0;\n    }\n    else {\n      if (*(ushort *)(param_2 + 0x20) <= (ushort)local_26) {\n        png_chunk_benign_error(param_1,\"invalid index\");\n        goto LAB_0011be06;\n      }\n      pbVar4 = (byte *)((ulong)local_26 * 3 + *(long *)(param_1 + 0x250));\n      local_2e = (uint)CONCAT12(pbVar4[1],(ushort)*pbVar4);\n      local_2a = (ushort)pbVar4[2];\n    }\nLAB_0011bf48:\n    local_28 = 0;\n  }\n  else {\n    bVar1 = *(byte *)(param_1 + 0x268);\n    if ((*(byte *)(param_1 + 0x267) & 2) != 0) {\n      if ((bVar1 < 9) && ((byte)(local_26 | local_24 | local_22) != 0)) {\n        png_chunk_benign_error(param_1,\"invalid color\");\n        goto LAB_0011be06;\n      }\n      local_30[0] = 0;\n      local_2e = CONCAT22((ushort)local_24 * 0x100 + (ushort)local_23,\n                          (ushort)local_26 * 0x100 + (ushort)local_25);\n      local_2a = (ushort)local_22 * 0x100 + (ushort)local_21;\n      goto LAB_0011bf48;\n    }\n    if ((bVar1 < 9) && ((local_26 != 0 || (local_25 >> (bVar1 & 0x1f) != 0)))) {\n      png_chunk_benign_error(param_1,\"invalid gray level\");\n      goto LAB_0011be06;\n    }\n    local_30[0] = 0;\n    local_2a = (ushort)local_26 * 0x100 + (ushort)local_25;\n    local_2e = CONCAT22(local_2a,local_2a);\n    local_28 = local_2a;\n  }\n  png_set_bKGD(param_1,param_2,local_30);\nLAB_0011be06:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011c040": "\nvoid FUN_0011c040(long param_1,long param_2,uint param_3)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  bool bVar4;\n  byte local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if (param_3 < 2) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"too short\");\n  }\n  else if ((param_2 == 0) || ((*(byte *)(param_2 + 10) & 1) != 0)) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"duplicate\");\n  }\n  else {\n    *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x8000;\n    lVar2 = png_malloc_warn(param_1,param_3);\n    *(long *)(param_2 + 0xf8) = lVar2;\n    if (lVar2 == 0) {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"out of memory\");\n    }\n    else {\n      FUN_00119cb0(param_1,&local_41,1);\n      **(byte **)(param_2 + 0xf8) = local_41;\n      uVar3 = 1;\n      do {\n        FUN_00119cb0(param_1,&local_41,1);\n        *(byte *)(*(long *)(param_2 + 0xf8) + uVar3) = local_41;\n        if ((uVar3 == 1) &&\n           (((local_41 & 0xfb) != 0x49 || (local_41 != **(byte **)(param_2 + 0xf8))))) {\n          FUN_00119dc0(param_1,param_3 - 2);\n          png_chunk_benign_error(param_1,\"incorrect byte-order specifier\");\n          png_free(param_1,*(undefined8 *)(param_2 + 0xf8));\n          *(undefined8 *)(param_2 + 0xf8) = 0;\n          goto LAB_0011c0a6;\n        }\n        bVar4 = uVar3 != param_3 - 1;\n        uVar3 = uVar3 + 1;\n      } while (bVar4);\n      iVar1 = FUN_00119dc0(param_1,0);\n      if (iVar1 == 0) {\n        png_set_eXIf_1(param_1,param_2,param_3,*(undefined8 *)(param_2 + 0xf8));\n      }\n      png_free(param_1,*(undefined8 *)(param_2 + 0xf8));\n      *(undefined8 *)(param_2 + 0xf8) = 0;\n    }\n  }\nLAB_0011c0a6:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011c240": "\nvoid FUN_0011c240(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  int iVar3;\n  short *psVar4;\n  short *psVar5;\n  long in_FS_OFFSET;\n  short local_238 [259];\n  byte local_32;\n  byte local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 6) == 2) {\n    if ((param_2 == 0) || ((*(byte *)(param_2 + 8) & 0x40) == 0)) {\n      if ((param_3 & 1) == 0) {\n        uVar1 = (param_3 & 0xffffffff) >> 1;\n        uVar2 = (uint)uVar1;\n        if ((*(ushort *)(param_1 + 600) == uVar2) && ((uint)(param_3 & 0xffffffff) < 0x202)) {\n          if (uVar1 != 0) {\n            psVar4 = local_238;\n            do {\n              psVar5 = psVar4 + 1;\n              FUN_00119cb0(param_1,&local_32,2);\n              *psVar4 = (ushort)local_32 * 0x100 + (ushort)local_31;\n              psVar4 = psVar5;\n            } while (psVar5 != local_238 + (ulong)(uVar2 - 1) + 1);\n          }\n          iVar3 = FUN_00119dc0(param_1,0);\n          if (iVar3 == 0) {\n            png_set_hIST(param_1,param_2,local_238);\n          }\n          goto LAB_0011c2c9;\n        }\n      }\n      FUN_00119dc0(param_1);\n      png_chunk_benign_error(param_1,\"invalid\");\n    }\n    else {\n      FUN_00119dc0();\n      png_chunk_benign_error(param_1,\"duplicate\");\n    }\n  }\n  else {\n    FUN_00119dc0();\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\nLAB_0011c2c9:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011c3c0": "\nvoid FUN_0011c3c0(long param_1,long param_2,int param_3)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  byte local_29;\n  byte local_28;\n  byte local_27;\n  byte local_26;\n  byte local_25;\n  byte local_24;\n  byte local_23;\n  byte local_22;\n  undefined local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 4) == 0) {\n    if ((param_2 == 0) || ((*(byte *)(param_2 + 8) & 0x80) == 0)) {\n      if (param_3 == 9) {\n        FUN_00119cb0(param_1,&local_29,9);\n        iVar1 = FUN_00119dc0(param_1,0);\n        if (iVar1 == 0) {\n          png_set_pHYs(param_1,param_2,\n                       (uint)local_27 * 0x100 +\n                       (uint)local_26 + (uint)local_28 * 0x10000 + (uint)local_29 * 0x1000000,\n                       (uint)local_23 * 0x100 +\n                       (uint)local_24 * 0x10000 + (uint)local_25 * 0x1000000 + (uint)local_22,\n                       local_21);\n        }\n      }\n      else {\n        FUN_00119dc0(param_1);\n        png_chunk_benign_error(param_1,\"invalid\");\n      }\n    }\n    else {\n      FUN_00119dc0();\n      png_chunk_benign_error(param_1,\"duplicate\");\n    }\n  }\n  else {\n    FUN_00119dc0();\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011c520": "\nvoid FUN_0011c520(long param_1,long param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  byte local_29;\n  byte local_28;\n  byte local_27;\n  byte local_26;\n  byte local_25;\n  byte local_24;\n  byte local_23;\n  byte local_22;\n  undefined local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((*(uint *)(param_1 + 300) & 4) == 0) {\n    if ((param_2 == 0) || ((*(byte *)(param_2 + 9) & 1) == 0)) {\n      if (param_3 == 9) {\n        FUN_00119cb0(param_1,&local_29,9);\n        iVar1 = FUN_00119dc0(param_1);\n        if (iVar1 == 0) {\n          iVar1 = (uint)local_27 * 0x100 +\n                  (uint)local_26 + (uint)local_28 * 0x10000 + (uint)local_29 * 0x1000000;\n          if ((char)local_29 < '\\0') {\n            iVar1 = -(-iVar1 & 0x7fffffffU);\n          }\n          iVar2 = (uint)local_23 * 0x100 +\n                  (uint)local_22 + (uint)local_24 * 0x10000 + (uint)local_25 * 0x1000000;\n          if ((char)local_25 < '\\0') {\n            iVar2 = -(-iVar2 & 0x7fffffffU);\n          }\n          png_set_oFFs(param_1,param_2,iVar1,iVar2,local_21);\n        }\n      }\n      else {\n        FUN_00119dc0(param_1);\n        png_chunk_benign_error(param_1,\"invalid\");\n      }\n    }\n    else {\n      FUN_00119dc0();\n      png_chunk_benign_error(param_1,\"duplicate\");\n    }\n  }\n  else {\n    FUN_00119dc0();\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011c6b0": "\nvoid FUN_0011c6b0(long param_1,long param_2,ulong param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  char **ppcVar4;\n  char **ppcVar5;\n  byte bVar6;\n  char *pcVar7;\n  char *pcVar8;\n  char *pcVar9;\n  int iVar10;\n  byte bVar11;\n  undefined8 uVar12;\n  \n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  param_3 = param_3 & 0xffffffff;\n  if ((*(uint *)(param_1 + 300) & 4) != 0) {\n    FUN_00119dc0(param_1,param_3);\n    pcVar9 = \"out of place\";\n    goto LAB_0011c7e8;\n  }\n  if ((param_2 != 0) && ((*(byte *)(param_2 + 9) & 4) != 0)) {\n    FUN_00119dc0(param_1,param_3);\n    pcVar9 = \"duplicate\";\n    goto LAB_0011c7e8;\n  }\n  pcVar3 = (char *)FUN_00119a20(param_1,(int)param_3 + 1,2);\n  if (pcVar3 == (char *)0x0) {\n    FUN_00119dc0(param_1,param_3);\n    pcVar9 = \"out of memory\";\n    goto LAB_0011c7e8;\n  }\n  FUN_00119cb0(param_1,pcVar3,param_3);\n  iVar2 = FUN_00119dc0(param_1,0);\n  if (iVar2 != 0) {\n    return;\n  }\n  pcVar8 = pcVar3 + param_3;\n  *pcVar8 = '\\0';\n  cVar1 = *pcVar3;\n  pcVar7 = pcVar3;\n  while (cVar1 != '\\0') {\n    pcVar7 = pcVar7 + 1;\n    cVar1 = *pcVar7;\n  }\n  pcVar9 = \"invalid\";\n  if ((long)pcVar8 - (long)pcVar7 < 0xd) goto LAB_0011c7e8;\n  iVar2 = (uint)(byte)pcVar7[3] * 0x100 +\n          (uint)(byte)pcVar7[2] * 0x10000 + (uint)(byte)pcVar7[1] * 0x1000000 +\n          (uint)(byte)pcVar7[4];\n  if (pcVar7[1] < '\\0') {\n    iVar2 = -(-iVar2 & 0x7fffffffU);\n  }\n  iVar10 = (uint)(byte)pcVar7[7] * 0x100 +\n           (uint)(byte)pcVar7[8] +\n           (uint)(byte)pcVar7[6] * 0x10000 + (uint)(byte)pcVar7[5] * 0x1000000;\n  if (pcVar7[5] < '\\0') {\n    bVar11 = pcVar7[9];\n    bVar6 = pcVar7[10];\n    iVar10 = -(-iVar10 & 0x7fffffffU);\n    if (bVar11 == 0) goto LAB_0011c7cb;\nLAB_0011c7d0:\n    if (((1 < (byte)(bVar11 - 1)) || (bVar6 == 3)) && ((bVar11 != 3 || (bVar6 == 4)))) {\n      if (3 < bVar11) {\n        png_chunk_benign_error(param_1);\n      }\n      cVar1 = pcVar7[0xb];\n      pcVar9 = pcVar7 + 0xb;\n      while (cVar1 != '\\0') {\n        pcVar9 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n      }\n      uVar12 = 0x11c8ab;\n      ppcVar4 = (char **)png_malloc_warn(param_1);\n      if (ppcVar4 != (char **)0x0) {\n        if (bVar6 != 0) {\n          ppcVar5 = ppcVar4;\n          do {\n            pcVar9 = pcVar9 + 1;\n            *ppcVar5 = pcVar9;\n            if (pcVar8 < pcVar9) {\nLAB_0011c9c0:\n              png_free(param_1,ppcVar4);\n              pcVar9 = \"invalid data\";\n              goto LAB_0011c7e8;\n            }\n            while (*pcVar9 != '\\0') {\n              pcVar9 = pcVar9 + 1;\n              if (pcVar8 + 1 == pcVar9) goto LAB_0011c9c0;\n            }\n            if (pcVar8 < pcVar9) goto LAB_0011c9c0;\n            ppcVar5 = ppcVar5 + 1;\n          } while (ppcVar4 + (ulong)(bVar6 - 1) + 1 != ppcVar5);\n        }\n        png_set_pCAL(param_1,param_2,pcVar3,iVar2,iVar10,bVar11,bVar6,pcVar7 + 0xb,ppcVar4,uVar12);\n        png_free(param_1,ppcVar4);\n        return;\n      }\n      pcVar9 = \"out of memory\";\n      goto LAB_0011c7e8;\n    }\n  }\n  else {\n    bVar11 = pcVar7[9];\n    bVar6 = pcVar7[10];\n    if (bVar11 != 0) goto LAB_0011c7d0;\nLAB_0011c7cb:\n    if (bVar6 == 2) goto LAB_0011c7d0;\n  }\n  pcVar9 = \"invalid parameter count\";\nLAB_0011c7e8:\n  png_chunk_benign_error(param_1,pcVar9);\n  return;\n}\n\n", "FUN_0011c9f0": "\nvoid FUN_0011c9f0(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  int iVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  uint local_4c;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(uint *)(param_1 + 300) & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  param_3 = param_3 & 0xffffffff;\n  if ((*(uint *)(param_1 + 300) & 4) == 0) {\n    if ((param_2 == 0) || ((*(byte *)(param_2 + 9) & 0x40) == 0)) {\n      if ((uint)param_3 < 4) {\n        FUN_00119dc0(param_1,param_3);\n        png_chunk_benign_error(param_1,\"invalid\");\n      }\n      else {\n        pcVar4 = (char *)FUN_00119a20(param_1,(uint)param_3 + 1,2);\n        if (pcVar4 == (char *)0x0) {\n          png_chunk_benign_error(param_1,\"out of memory\");\n          FUN_00119dc0(param_1,param_3);\n        }\n        else {\n          FUN_00119cb0(param_1,pcVar4,param_3);\n          pcVar4[param_3] = '\\0';\n          iVar3 = FUN_00119dc0(param_1,0);\n          if (iVar3 == 0) {\n            if ((byte)(*pcVar4 - 1U) < 2) {\n              local_48 = 1;\n              local_4c = 0;\n              iVar3 = FUN_00108240(pcVar4,param_3,&local_4c,&local_48);\n              if ((iVar3 != 0) && (local_48 < param_3)) {\n                uVar1 = local_48 + 1;\n                pcVar2 = pcVar4 + local_48;\n                local_48 = uVar1;\n                if (*pcVar2 == '\\0') {\n                  if ((local_4c & 0x188) == 0x108) {\n                    local_4c = 0;\n                    iVar3 = FUN_00108240(pcVar4,param_3,&local_4c,&local_48);\n                    if ((iVar3 == 0) || (param_3 != local_48)) {\n                      png_chunk_benign_error(param_1,\"bad height format\");\n                    }\n                    else if ((local_4c & 0x188) == 0x108) {\n                      png_set_sCAL_s(param_1,param_2,*pcVar4,pcVar4 + 1,pcVar4 + uVar1);\n                    }\n                    else {\n                      png_chunk_benign_error(param_1,\"non-positive height\");\n                    }\n                  }\n                  else {\n                    png_chunk_benign_error(param_1,\"non-positive width\");\n                  }\n                  goto LAB_0011cb32;\n                }\n              }\n              png_chunk_benign_error(param_1,\"bad width format\");\n            }\n            else {\n              png_chunk_benign_error(param_1,\"invalid unit\");\n            }\n          }\n        }\n      }\n    }\n    else {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"duplicate\");\n    }\n  }\n  else {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of place\");\n  }\nLAB_0011cb32:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011cc80": "\nvoid FUN_0011cc80(long param_1,long param_2,int param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  short local_30;\n  undefined4 local_2e;\n  undefined local_2a;\n  byte local_27;\n  byte local_26;\n  undefined4 local_25;\n  undefined local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = *(uint *)(param_1 + 300);\n  if ((uVar1 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((param_2 == 0) || ((*(byte *)(param_2 + 9) & 2) == 0)) {\n    if ((uVar1 & 4) != 0) {\n      *(uint *)(param_1 + 300) = uVar1 | 8;\n    }\n    if (param_3 == 7) {\n      FUN_00119cb0(param_1,&local_27,7);\n      iVar2 = FUN_00119dc0(param_1,0);\n      if (iVar2 == 0) {\n        local_2e = local_25;\n        local_2a = local_21;\n        local_30 = (ushort)local_27 * 0x100 + (ushort)local_26;\n        png_set_tIME(param_1,param_2,&local_30);\n      }\n    }\n    else {\n      FUN_00119dc0(param_1);\n      png_chunk_benign_error(param_1,\"invalid\");\n    }\n  }\n  else {\n    FUN_00119dc0();\n    png_chunk_benign_error(param_1,\"duplicate\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011cd90": "\nvoid FUN_0011cd90(long param_1,undefined8 param_2,ulong param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  undefined4 local_68 [2];\n  char *local_60;\n  char *local_58;\n  size_t local_50;\n  undefined8 local_48;\n  undefined8 local_40;\n  undefined8 local_38;\n  long local_30;\n  \n  param_3 = param_3 & 0xffffffff;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar3 = *(int *)(param_1 + 0x42c);\n  if (iVar3 != 0) {\n    if (iVar3 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      goto LAB_0011cea1;\n    }\n    *(int *)(param_1 + 0x42c) = iVar3 + -1;\n    if (iVar3 + -1 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"no space in chunk cache\");\n      goto LAB_0011cea1;\n    }\n  }\n  uVar2 = *(uint *)(param_1 + 300);\n  if ((uVar2 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar2 & 4) != 0) {\n    *(uint *)(param_1 + 300) = uVar2 | 8;\n  }\n  pcVar4 = (char *)FUN_00119a20(param_1,(int)param_3 + 1,1);\n  if (pcVar4 == (char *)0x0) {\n    png_chunk_benign_error(param_1,\"out of memory\");\n  }\n  else {\n    FUN_00119cb0(param_1,pcVar4,param_3);\n    iVar3 = FUN_00119dc0(param_1,0);\n    if (iVar3 == 0) {\n      pcVar4[param_3] = '\\0';\n      cVar1 = *pcVar4;\n      local_58 = pcVar4;\n      while (cVar1 != '\\0') {\n        local_58 = local_58 + 1;\n        cVar1 = *local_58;\n      }\n      local_68[0] = 0xffffffff;\n      local_40 = 0;\n      local_58 = local_58 + (pcVar4 + param_3 != local_58);\n      local_38 = 0;\n      local_48 = 0;\n      local_60 = pcVar4;\n      local_50 = strlen(local_58);\n      iVar3 = FUN_001200e0(param_1,param_2,local_68,1);\n      if (iVar3 != 0) {\n        png_warning(param_1,\"Insufficient memory to process text chunk\");\n      }\n    }\n  }\nLAB_0011cea1:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011cf40": "\nvoid FUN_0011cf40(long param_1,undefined8 param_2,uint param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  long lVar3;\n  ulong uVar4;\n  uint uVar5;\n  char *pcVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  bool bVar8;\n  long local_70;\n  undefined4 local_68 [2];\n  long local_60;\n  long local_58;\n  long local_50;\n  undefined8 local_48;\n  undefined8 local_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = *(int *)(param_1 + 0x42c);\n  if (iVar1 != 0) {\n    if (iVar1 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      goto LAB_0011d030;\n    }\n    *(int *)(param_1 + 0x42c) = iVar1 + -1;\n    if (iVar1 + -1 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"no space in chunk cache\");\n      goto LAB_0011d030;\n    }\n  }\n  uVar5 = *(uint *)(param_1 + 300);\n  if ((uVar5 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar5 & 4) != 0) {\n    *(uint *)(param_1 + 300) = uVar5 | 8;\n  }\n  lVar3 = FUN_00119a20(param_1,param_3,2);\n  if (lVar3 == 0) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of memory\");\n    goto LAB_0011d030;\n  }\n  FUN_00119cb0(param_1,lVar3,param_3);\n  iVar1 = FUN_00119dc0(param_1);\n  if (iVar1 != 0) goto LAB_0011d030;\n  if (param_3 == 0) {\nLAB_0011d070:\n    pcVar6 = \"bad keyword\";\n  }\n  else {\n    uVar4 = 0;\n    do {\n      uVar5 = (uint)uVar4;\n      if (*(char *)(lVar3 + uVar4) == '\\0') {\n        uVar7 = uVar4 & 0xffffffff;\n        uVar5 = uVar5 - 1;\n        break;\n      }\n      uVar7 = (ulong)(uVar5 + 1);\n      bVar8 = uVar4 != param_3 - 1;\n      uVar4 = uVar4 + 1;\n    } while (bVar8);\n    if (0x4e < uVar5) goto LAB_0011d070;\n    iVar1 = (int)uVar7;\n    if (param_3 < iVar1 + 3U) {\n      png_chunk_benign_error(param_1,\"truncated\");\n      goto LAB_0011d030;\n    }\n    pcVar6 = \"unknown compression type\";\n    if (*(char *)(lVar3 + (ulong)(iVar1 + 1)) == '\\0') {\n      local_70 = -1;\n      iVar2 = FUN_0011a2b0(param_1,param_3,iVar1 + 2U,&local_70);\n      if (iVar2 == 1) {\n        lVar3 = *(long *)(param_1 + 0x460);\n        if (lVar3 == 0) {\n          pcVar6 = \"Read failure in png_handle_zTXt\";\n        }\n        else {\n          *(undefined *)((ulong)(iVar1 + 2U) + lVar3 + local_70) = 0;\n          local_58 = lVar3 + 2 + uVar7;\n          local_68[0] = 0;\n          local_50 = local_70;\n          local_48 = 0;\n          local_40 = 0;\n          local_38 = 0;\n          local_60 = lVar3;\n          iVar1 = FUN_001200e0(param_1,param_2,local_68,1);\n          if (iVar1 == 0) goto LAB_0011d030;\n          pcVar6 = \"insufficient memory\";\n        }\n      }\n      else {\n        pcVar6 = *(char **)(param_1 + 0x170);\n        if (pcVar6 == (char *)0x0) goto LAB_0011d030;\n      }\n    }\n  }\n  png_chunk_benign_error(param_1,pcVar6);\nLAB_0011d030:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011d1c0": "\nvoid FUN_0011d1c0(long param_1,undefined8 param_2,uint param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  long lVar4;\n  ulong uVar5;\n  char *pcVar6;\n  uint uVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  ulong local_80;\n  undefined4 local_78 [2];\n  long local_70;\n  long local_68;\n  undefined8 local_60;\n  ulong local_58;\n  long local_50;\n  long local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = *(int *)(param_1 + 0x42c);\n  if (iVar2 != 0) {\n    if (iVar2 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      goto LAB_0011d3d0;\n    }\n    *(int *)(param_1 + 0x42c) = iVar2 + -1;\n    if (iVar2 + -1 == 1) {\n      FUN_00119dc0(param_1,param_3);\n      png_chunk_benign_error(param_1,\"no space in chunk cache\");\n      goto LAB_0011d3d0;\n    }\n  }\n  uVar3 = *(uint *)(param_1 + 300);\n  if ((uVar3 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"missing IHDR\");\n  }\n  if ((uVar3 & 4) != 0) {\n    *(uint *)(param_1 + 300) = uVar3 | 8;\n  }\n  lVar4 = FUN_00119a20(param_1,param_3 + 1,1);\n  if (lVar4 == 0) {\n    FUN_00119dc0(param_1,param_3);\n    png_chunk_benign_error(param_1,\"out of memory\");\n    goto LAB_0011d3d0;\n  }\n  FUN_00119cb0(param_1,lVar4,param_3);\n  iVar2 = FUN_00119dc0();\n  if (iVar2 != 0) goto LAB_0011d3d0;\n  if (param_3 == 0) {\nLAB_0011d410:\n    pcVar6 = \"bad keyword\";\n  }\n  else {\n    uVar5 = 0;\n    do {\n      uVar3 = (uint)uVar5;\n      if (*(char *)(lVar4 + uVar5) == '\\0') {\n        uVar7 = uVar3;\n        uVar3 = uVar3 - 1;\n        break;\n      }\n      uVar7 = uVar3 + 1;\n      bVar9 = uVar5 != param_3 - 1;\n      uVar5 = uVar5 + 1;\n    } while (bVar9);\n    if (0x4e < uVar3) goto LAB_0011d410;\n    uVar5 = (ulong)(uVar7 + 5);\n    if (param_3 < uVar7 + 5) goto LAB_0011d428;\n    cVar1 = *(char *)(lVar4 + (ulong)(uVar7 + 1));\n    if ((cVar1 == '\\0') ||\n       ((pcVar6 = \"bad compression info\", cVar1 == '\\x01' &&\n        (*(char *)(lVar4 + (ulong)(uVar7 + 2)) == '\\0')))) {\n      local_80 = 0;\n      uVar3 = uVar7 + 3;\n      pcVar6 = (char *)((ulong)uVar3 + lVar4);\n      uVar8 = (ulong)uVar3;\n      if (uVar3 < param_3) {\n        do {\n          iVar2 = (int)uVar8;\n          uVar8 = (ulong)(iVar2 + 1U);\n          uVar5 = (ulong)(iVar2 + 2U);\n          if (*pcVar6 == '\\0') goto LAB_0011d31d;\n          pcVar6 = pcVar6 + 1;\n        } while (iVar2 + 1U < param_3);\n        uVar8 = (ulong)(iVar2 + 2U);\n        uVar5 = (ulong)(iVar2 + 3);\n      }\n      else {\n        uVar8 = (ulong)(uVar7 + 4);\n      }\nLAB_0011d31d:\n      if ((uint)uVar8 < param_3) {\n        pcVar6 = (char *)(uVar8 + lVar4);\n        uVar5 = uVar8;\n        do {\n          iVar2 = (int)uVar5;\n          uVar7 = iVar2 + 1;\n          uVar5 = (ulong)uVar7;\n          if (*pcVar6 == '\\0') goto LAB_0011d349;\n          pcVar6 = pcVar6 + 1;\n        } while (param_3 != uVar7);\n        uVar5 = (ulong)(iVar2 + 2);\n      }\nLAB_0011d349:\n      uVar7 = (uint)uVar5;\n      if (cVar1 == '\\0') {\n        if (param_3 < uVar7) {\nLAB_0011d428:\n          pcVar6 = \"truncated\";\n          goto LAB_0011d417;\n        }\n        local_80 = (ulong)(param_3 - uVar7);\n        local_78[0] = 1;\n        *(undefined *)(local_80 + lVar4 + uVar5) = 0;\n        local_68 = uVar5 + lVar4;\n      }\n      else {\n        if (param_3 <= uVar7) goto LAB_0011d428;\n        local_80 = 0xffffffffffffffff;\n        iVar2 = FUN_0011a2b0(param_1,param_3,uVar5,&local_80);\n        if (iVar2 == 1) {\n          lVar4 = *(long *)(param_1 + 0x460);\n        }\n        else {\n          pcVar6 = *(char **)(param_1 + 0x170);\n          if (pcVar6 != (char *)0x0) goto LAB_0011d417;\n        }\n        local_68 = uVar5 + lVar4;\n        *(undefined *)(local_80 + local_68) = 0;\n        local_78[0] = 2;\n      }\n      local_50 = (ulong)uVar3 + lVar4;\n      local_48 = lVar4 + uVar8;\n      local_60 = 0;\n      local_58 = local_80;\n      local_70 = lVar4;\n      iVar2 = FUN_001200e0(param_1,param_2,local_78,1);\n      pcVar6 = \"insufficient memory\";\n      if (iVar2 == 0) goto LAB_0011d3d0;\n    }\n  }\nLAB_0011d417:\n  png_chunk_benign_error(param_1,pcVar6);\nLAB_0011d3d0:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011d520": "\nvoid FUN_0011d520(long param_1,undefined8 param_2,undefined4 param_3,int param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  \n  if (*(long *)(param_1 + 0x3b8) == 0) {\n    if (param_4 == 0) {\n      param_4 = *(int *)(param_1 + 0x3c0);\n    }\n    if (param_4 == 3) {\n      iVar2 = FUN_00119eb0(param_1,param_3);\n      if (iVar2 != 0) goto LAB_0011d579;\n    }\n    else if ((param_4 == 2) && ((*(byte *)(param_1 + 0x21b) & 0x20) != 0)) {\n      iVar2 = FUN_00119eb0(param_1,param_3);\n      if (iVar2 != 0) goto LAB_0011d66a;\n    }\n    else {\n      FUN_00119dc0();\nLAB_0011d665:\n      if (param_4 == 2) {\nLAB_0011d66a:\n        if ((*(byte *)(param_1 + 0x21b) & 0x20) == 0) {\n          lVar1 = *(long *)(param_1 + 0x440);\n          goto joined_r0x0011d681;\n        }\n        goto LAB_0011d579;\n      }\n    }\n  }\n  else {\n    iVar2 = FUN_00119eb0(param_1,param_3);\n    if (iVar2 != 0) {\n      iVar2 = (**(code **)(param_1 + 0x3b8))(param_1,param_1 + 0x438);\n      if (iVar2 < 0) {\n                    /* WARNING: Subroutine does not return */\n        png_chunk_error(param_1,\"error in user chunk\");\n      }\n      if (iVar2 != 0) goto LAB_0011d5ad;\n      if (param_4 < 2) {\n        if (*(int *)(param_1 + 0x3c0) < 2) {\n          png_chunk_warning(param_1,\"Saving unknown chunk:\");\n          FUN_0010b470(param_1,\n                       \"forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks\"\n                      );\n        }\n        goto LAB_0011d66a;\n      }\n      if (param_4 != 3) goto LAB_0011d665;\nLAB_0011d579:\n      iVar2 = *(int *)(param_1 + 0x42c);\n      if (iVar2 != 1) {\n        if (iVar2 != 2) {\n          if (iVar2 != 0) {\n            *(int *)(param_1 + 0x42c) = iVar2 + -1;\n          }\n          png_set_unknown_chunks(param_1,param_2,param_1 + 0x438,1);\nLAB_0011d5ad:\n          if (*(long *)(param_1 + 0x440) == 0) {\n            return;\n          }\n          png_free(param_1);\n          *(undefined8 *)(param_1 + 0x440) = 0;\n          return;\n        }\n        *(undefined4 *)(param_1 + 0x42c) = 1;\n        png_chunk_benign_error(param_1,\"no space in chunk cache\");\n      }\n    }\n  }\n  lVar1 = *(long *)(param_1 + 0x440);\njoined_r0x0011d681:\n  if (lVar1 != 0) {\n    png_free(param_1);\n    *(undefined8 *)(param_1 + 0x440) = 0;\n  }\n  if ((*(byte *)(param_1 + 0x21b) & 0x20) != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_chunk_error(param_1,\"unhandled critical chunk\");\n}\n\n", "FUN_0011d6f0": "\nvoid FUN_0011d6f0(undefined8 param_1,uint param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = 4;\n  while( true ) {\n    if ((0x39 < (param_2 & 0xff) - 0x41) || ((param_2 & 0xff) - 0x5b < 6)) break;\n    param_2 = param_2 >> 8;\n    iVar1 = iVar1 + -1;\n    if (iVar1 == 0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  png_chunk_error(param_1,\"invalid chunk type\");\n}\n\n", "FUN_0011d730": "\nvoid FUN_0011d730(long param_1,uint param_2)\n\n{\n  ulong uVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = *(ulong *)(param_1 + 0x430);\n  if (0x7ffffffd < uVar1 - 1) {\n    uVar1 = 0x7fffffff;\n  }\n  if (*(int *)(param_1 + 0x218) == 0x49444154) {\n    lVar2 = (ulong)*(uint *)(param_1 + 0x1f8) * (ulong)*(byte *)(param_1 + 0x26b);\n    if (8 < *(byte *)(param_1 + 0x268)) {\n      lVar2 = lVar2 * 2;\n    }\n    lVar5 = 0x80000005;\n    uVar4 = lVar2 + 1 + (ulong)(~-(uint)(*(char *)(param_1 + 0x264) == '\\0') & 6);\n    uVar3 = 0x7fffffff;\n    if ((ulong)*(uint *)(param_1 + 0x1fc) <=\n        SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffff)) / ZEXT816(uVar4),0)) {\n      uVar3 = *(uint *)(param_1 + 0x1fc) * uVar4;\n      lVar5 = uVar3 + 6;\n    }\n    if (0x7f36 < uVar4) {\n      uVar4 = 0x7f36;\n    }\n    uVar4 = (uVar3 / uVar4) * 5 + 5 + lVar5;\n    if (0x7fffffff < uVar4) {\n      uVar4 = 0x7fffffff;\n    }\n    if (uVar1 < uVar4) {\n      uVar1 = uVar4;\n    }\n  }\n  if (uVar1 < param_2) {\n                    /* WARNING: Subroutine does not return */\n    png_chunk_error(param_1,\"chunk data is too large\");\n  }\n  return;\n}\n\n", "FUN_0011d820": "\nundefined4 FUN_0011d820(long param_1)\n\n{\n  undefined4 uVar1;\n  long in_FS_OFFSET;\n  undefined auStack40 [4];\n  uint local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  *(undefined4 *)(param_1 + 0x474) = 0x21;\n  FUN_00113740(param_1,auStack40,8);\n  uVar1 = png_get_uint_31(param_1,auStack40);\n  *(uint *)(param_1 + 0x218) =\n       local_24 >> 0x18 | (local_24 & 0xff0000) >> 8 | (local_24 & 0xff00) << 8 | local_24 << 0x18;\n  FUN_001068b0(param_1);\n  FUN_001068d0(param_1,&local_24,4);\n  FUN_0011d6f0(param_1,*(undefined4 *)(param_1 + 0x218));\n  FUN_0011d730(param_1,uVar1);\n  *(undefined4 *)(param_1 + 0x474) = 0x41;\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_0011d8d0": "\nvoid FUN_0011d8d0(long param_1,void *param_2,int param_3)\n\n{\n  void *__src;\n  undefined8 *puVar1;\n  byte bVar2;\n  char cVar3;\n  byte bVar4;\n  uint uVar5;\n  ulong uVar6;\n  long lVar7;\n  ulong uVar8;\n  ulong uVar9;\n  int iVar10;\n  uint uVar11;\n  size_t __n;\n  byte *pbVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  long lVar16;\n  undefined8 *puVar17;\n  undefined8 *puVar18;\n  undefined8 *puVar19;\n  ulong uVar20;\n  ulong uVar21;\n  byte bVar22;\n  byte bVar23;\n  undefined8 *puVar24;\n  \n  bVar2 = *(byte *)(param_1 + 0x26f);\n  uVar21 = (ulong)bVar2;\n  lVar7 = *(long *)(param_1 + 0x228);\n  uVar11 = *(uint *)(param_1 + 0x1f8);\n  uVar20 = (ulong)uVar11;\n  if (bVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal row logic error\");\n  }\n  __src = (void *)(lVar7 + 1);\n  if (*(ulong *)(param_1 + 0x240) != 0) {\n    if (bVar2 < 8) {\n      uVar6 = uVar21 * uVar20 + 7 >> 3;\n    }\n    else {\n      uVar6 = (bVar2 >> 3) * uVar20;\n    }\n    if (*(ulong *)(param_1 + 0x240) != uVar6) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"internal row size calculation error\");\n    }\n  }\n  if (uVar20 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"internal row width error\");\n  }\n  uVar14 = (uint)bVar2;\n  uVar13 = uVar11 * uVar14 & 7;\n  bVar23 = (byte)uVar13;\n  uVar15 = (uint)bVar2;\n  if (uVar13 == 0) {\n    bVar22 = 0;\n    pbVar12 = (byte *)0x0;\nLAB_0011d9d5:\n    cVar3 = *(char *)(param_1 + 0x264);\n  }\n  else {\n    if (uVar14 < 8) {\n      uVar6 = uVar21 * uVar20 + 7 >> 3;\n    }\n    else {\n      uVar6 = (bVar2 >> 3) * uVar20;\n    }\n    pbVar12 = (byte *)((uVar6 - 1) + (long)param_2);\n    bVar22 = *pbVar12;\n    if ((*(byte *)(param_1 + 0x136) & 1) == 0) {\n      bVar23 = (byte)(0xff >> bVar23);\n      goto LAB_0011d9d5;\n    }\n    bVar23 = (byte)(0xff << bVar23);\n    cVar3 = *(char *)(param_1 + 0x264);\n  }\n  if (cVar3 != '\\0') {\n    bVar4 = *(byte *)(param_1 + 0x265);\n    uVar13 = (uint)bVar4;\n    if ((((*(uint *)(param_1 + 0x134) & 2) != 0) && (bVar4 < 6)) &&\n       ((param_3 == 0 || ((param_3 == 1 && ((bVar4 & 1) != 0)))))) {\n      uVar5 = (uVar13 & 1) << (3U - (char)(uVar13 + 1 >> 1) & 0x1f) & 7;\n      if (uVar11 <= uVar5) {\n        return;\n      }\n      if (7 < uVar14) {\n        if ((bVar2 & 7) != 0) {\n                    /* WARNING: Subroutine does not return */\n          png_error(param_1,\"invalid user transform pixel depth\");\n        }\n        bVar2 = bVar2 >> 3;\n        uVar6 = (ulong)bVar2;\n        uVar21 = (ulong)(uVar5 * bVar2);\n        puVar19 = (undefined8 *)((long)param_2 + uVar21);\n        puVar24 = (undefined8 *)((long)__src + uVar21);\n        uVar21 = uVar20 * uVar6 - uVar21;\n        if ((param_3 != 0) &&\n           (uVar11 = (uint)bVar2 << ((byte)(6 - uVar13 >> 1) & 0x1f), uVar6 = (ulong)uVar11,\n           uVar21 < uVar11)) {\n          uVar6 = uVar21 & 0xffffffff;\n        }\n        uVar13 = (uint)bVar2 << ((byte)(7 - uVar13 >> 1) & 0x1f);\n        uVar20 = (ulong)uVar13;\n        uVar11 = (uint)uVar6;\n        if (uVar11 == 2) {\n          do {\n            *(undefined *)puVar19 = *(undefined *)puVar24;\n            *(undefined *)((long)puVar19 + 1) = *(undefined *)((long)puVar24 + 1);\n            if (uVar21 <= uVar20) {\n              return;\n            }\n            uVar21 = uVar21 - uVar20;\n            puVar24 = (undefined8 *)((long)puVar24 + uVar20);\n            puVar19 = (undefined8 *)((long)puVar19 + uVar20);\n          } while (uVar21 != 1);\n          *(undefined *)puVar19 = *(undefined *)puVar24;\n          return;\n        }\n        if (uVar11 == 3) {\n          while( true ) {\n            *(undefined *)puVar19 = *(undefined *)puVar24;\n            *(undefined *)((long)puVar19 + 1) = *(undefined *)((long)puVar24 + 1);\n            *(undefined *)((long)puVar19 + 2) = *(undefined *)((long)puVar24 + 2);\n            if (uVar21 <= uVar20) break;\n            puVar24 = (undefined8 *)((long)puVar24 + uVar20);\n            puVar19 = (undefined8 *)((long)puVar19 + uVar20);\n            uVar21 = uVar21 - uVar20;\n          }\n          return;\n        }\n        if (uVar11 == 1) {\n          *(undefined *)puVar19 = *(undefined *)puVar24;\n          uVar6 = uVar20;\n          for (; uVar20 < uVar21; uVar21 = uVar21 - uVar20) {\n            *(undefined *)((long)puVar19 + uVar6) = *(undefined *)((long)puVar24 + uVar6);\n            uVar6 = uVar6 + uVar20;\n          }\n          return;\n        }\n        if (((uVar11 < 0x10) && ((((ulong)puVar19 | (ulong)puVar24) & 1) == 0)) &&\n           (((uVar11 | uVar13) & 1) == 0)) {\n          if (((((ulong)puVar19 | (ulong)puVar24) & 3) == 0) && (((uVar11 | uVar13) & 3) == 0)) {\n            lVar7 = (ulong)(uVar13 - uVar11 >> 2) * 4;\n            puVar17 = puVar19;\n            while( true ) {\n              do {\n                puVar1 = (undefined8 *)((long)puVar19 + 4);\n                puVar18 = (undefined8 *)((long)puVar24 + 4);\n                *(undefined4 *)puVar19 = *(undefined4 *)puVar24;\n                uVar9 = (uVar6 - (long)puVar1) + (long)puVar17;\n                puVar24 = puVar18;\n                puVar19 = puVar1;\n              } while (uVar9 != 0);\n              if (uVar21 <= uVar20) break;\n              uVar21 = uVar21 - uVar20;\n              puVar19 = (undefined8 *)((long)puVar1 + lVar7);\n              puVar24 = (undefined8 *)((long)puVar18 + lVar7);\n              puVar17 = puVar19;\n              if (uVar21 < uVar6) {\n                do {\n                  *(undefined *)((long)puVar19 + uVar9) = *(undefined *)((long)puVar24 + uVar9);\n                  uVar9 = uVar9 + 1;\n                } while (uVar21 != uVar9);\n                return;\n              }\n            }\n            return;\n          }\n          lVar7 = (ulong)(uVar13 - uVar11 >> 1) * 2;\n          puVar17 = puVar19;\n          while( true ) {\n            do {\n              puVar1 = (undefined8 *)((long)puVar19 + 2);\n              puVar18 = (undefined8 *)((long)puVar24 + 2);\n              *(undefined2 *)puVar19 = *(undefined2 *)puVar24;\n              uVar9 = (uVar6 - (long)puVar1) + (long)puVar17;\n              puVar24 = puVar18;\n              puVar19 = puVar1;\n            } while (uVar9 != 0);\n            if (uVar21 <= uVar20) break;\n            uVar21 = uVar21 - uVar20;\n            puVar19 = (undefined8 *)((long)puVar1 + lVar7);\n            puVar24 = (undefined8 *)((long)puVar18 + lVar7);\n            puVar17 = puVar19;\n            if (uVar21 < uVar6) {\n              do {\n                *(undefined *)((long)puVar19 + uVar9) = *(undefined *)((long)puVar24 + uVar9);\n                uVar9 = uVar9 + 1;\n              } while (uVar21 != uVar9);\n              return;\n            }\n          }\n          return;\n        }\n        uVar21 = uVar21 - uVar20;\n        uVar9 = uVar6;\n        while( true ) {\n          uVar11 = (uint)uVar6;\n          if (uVar11 < 8) {\n            if ((uVar6 & 4) == 0) {\n              if ((uVar11 != 0) && (*(undefined *)puVar19 = *(undefined *)puVar24, (uVar6 & 2) != 0)\n                 ) {\n                *(undefined2 *)((long)puVar19 + (uVar9 - 2)) =\n                     *(undefined2 *)((long)puVar24 + (uVar9 - 2));\n              }\n            }\n            else {\n              *(undefined4 *)puVar19 = *(undefined4 *)puVar24;\n              *(undefined4 *)((long)puVar19 + (uVar9 - 4)) =\n                   *(undefined4 *)((long)puVar24 + (uVar9 - 4));\n            }\n          }\n          else {\n            *puVar19 = *puVar24;\n            *(undefined8 *)((long)puVar19 + (uVar9 - 8)) =\n                 *(undefined8 *)((long)puVar24 + (uVar9 - 8));\n            lVar7 = (long)puVar19 - (long)(undefined8 *)((ulong)(puVar19 + 1) & 0xfffffffffffffff8);\n            puVar17 = (undefined8 *)((long)puVar24 - lVar7);\n            puVar18 = (undefined8 *)((ulong)(puVar19 + 1) & 0xfffffffffffffff8);\n            for (uVar8 = (ulong)((int)lVar7 + uVar11 >> 3); uVar8 != 0; uVar8 = uVar8 - 1) {\n              *puVar18 = *puVar17;\n              puVar17 = puVar17 + 1;\n              puVar18 = puVar18 + 1;\n            }\n          }\n          if (uVar20 + uVar21 <= uVar20) break;\n          puVar24 = (undefined8 *)((long)puVar24 + uVar20);\n          puVar19 = (undefined8 *)((long)puVar19 + uVar20);\n          if (uVar21 < uVar9) {\n            uVar6 = uVar21 & 0xffffffff;\n            uVar9 = uVar6;\n          }\n          uVar21 = uVar21 - uVar20;\n        }\n        return;\n      }\n      if ((*(uint *)(param_1 + 0x134) & 0x10000) == 0) {\n        if (param_3 == 0) {\n          if (uVar14 != 1) {\n            param_3 = (uVar14 != 2) + 1;\n          }\n          uVar11 = *(uint *)(&DAT_0012bcc0 + ((ulong)uVar13 + 0x12 + (long)param_3 * 6) * 4);\n        }\n        else {\n          iVar10 = 0;\n          if (uVar15 != 1) {\n            iVar10 = (uVar15 != 2) + 1;\n          }\n          uVar11 = *(uint *)(&DAT_0012bd60 + ((ulong)(bVar4 >> 1) + 9 + (long)iVar10 * 3) * 4);\n        }\n      }\n      else if (param_3 == 0) {\n        if (uVar15 != 1) {\n          param_3 = (uVar15 != 2) + 1;\n        }\n        uVar11 = *(uint *)(&DAT_0012bcc0 + ((ulong)uVar13 + (long)param_3 * 6) * 4);\n      }\n      else {\n        iVar10 = 0;\n        if (uVar15 != 1) {\n          iVar10 = (uVar15 != 2) + 1;\n        }\n        uVar11 = *(uint *)(&DAT_0012bd60 + ((long)iVar10 * 3 + (ulong)(bVar4 >> 1)) * 4);\n      }\n      lVar16 = 0;\n      while( true ) {\n        if ((uVar11 & 0xff) != 0) {\n          bVar2 = *(byte *)(lVar7 + 1 + lVar16);\n          if ((uVar11 & 0xff) == 0xff) {\n            *(byte *)((long)param_2 + lVar16) = bVar2;\n          }\n          else {\n            *(byte *)((long)param_2 + lVar16) =\n                 (byte)uVar11 & (bVar2 ^ *(byte *)((long)param_2 + lVar16)) ^\n                 *(byte *)((long)param_2 + lVar16);\n          }\n        }\n        lVar16 = lVar16 + 1;\n        if (uVar20 <= 8 / (ulong)uVar15) break;\n        uVar20 = uVar20 - 8 / (ulong)uVar15;\n        uVar11 = uVar11 >> 8 | uVar11 << 0x18;\n      }\n      goto LAB_0011d9ad;\n    }\n  }\n  if (uVar15 < 8) {\n    __n = uVar20 * uVar21 + 7 >> 3;\n  }\n  else {\n    __n = (bVar2 >> 3) * uVar20;\n  }\n  memcpy(param_2,__src,__n);\nLAB_0011d9ad:\n  if (pbVar12 != (byte *)0x0) {\n    *pbVar12 = bVar23 & (bVar22 ^ *pbVar12) ^ *pbVar12;\n  }\n  return;\n}\n\n", "FUN_0011dec0": "\nvoid FUN_0011dec0(uint *param_1,long param_2,int param_3,uint param_4)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined8 *puVar6;\n  long lVar7;\n  uint uVar8;\n  undefined8 *puVar9;\n  ulong uVar10;\n  ulong uVar11;\n  uint uVar12;\n  int iVar13;\n  ulong uVar14;\n  int iVar15;\n  byte *pbVar16;\n  long lVar17;\n  byte *pbVar18;\n  uint uVar19;\n  long in_FS_OFFSET;\n  uint local_64;\n  undefined8 *local_60;\n  undefined8 local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 == 0) || (param_1 == (uint *)0x0)) goto LAB_0011e04e;\n  uVar5 = *param_1;\n  iVar2 = *(int *)(&DAT_0012bca0 + (long)param_3 * 4);\n  bVar1 = *(byte *)((long)param_1 + 0x13);\n  uVar14 = (ulong)bVar1;\n  uVar8 = uVar5 - 1;\n  uVar3 = uVar5 * iVar2;\n  uVar4 = uVar3 - 1;\n  if (bVar1 == 2) {\n    pbVar16 = (byte *)((ulong)(uVar4 >> 2) + param_2);\n    pbVar18 = (byte *)((ulong)(uVar8 >> 2) + param_2);\n    uVar8 = uVar5 + 3;\n    uVar4 = uVar3 + 3;\n    param_4 = param_4 & 0x10000;\n    if (param_4 == 0) {\n      uVar8 = ~uVar8;\n      uVar4 = ~uVar4;\n      iVar15 = 2;\n      uVar19 = 6;\n    }\n    else {\n      uVar19 = 0;\n      param_4 = 6;\n      iVar15 = -2;\n    }\n    uVar12 = uVar4 * 2 & 6;\n    uVar4 = uVar8 * 2 & 6;\n    if (uVar5 != 0) {\n      uVar5 = 0;\n      do {\n        bVar1 = *pbVar18;\n        if (0 < iVar2) {\n          iVar13 = 0;\n          do {\n            while (*pbVar16 = (byte)(((int)(uint)bVar1 >> ((byte)uVar4 & 0x1f) & 3U) <<\n                                    ((byte)uVar12 & 0x1f)) |\n                              (byte)(0x3f3f >> (6 - (byte)uVar12 & 0x1f)) & *pbVar16,\n                  uVar19 == uVar12) {\n              iVar13 = iVar13 + 1;\n              pbVar16 = pbVar16 + -1;\n              uVar12 = param_4;\n              if (iVar13 == iVar2) goto LAB_0011e3d9;\n            }\n            iVar13 = iVar13 + 1;\n            uVar12 = uVar12 + iVar15;\n          } while (iVar13 != iVar2);\n        }\nLAB_0011e3d9:\n        if (uVar19 == uVar4) {\n          pbVar18 = pbVar18 + -1;\n          uVar4 = param_4;\n        }\n        else {\n          uVar4 = uVar4 + iVar15;\n        }\n        uVar5 = uVar5 + 1;\n      } while (uVar5 <= *param_1 && *param_1 != uVar5);\n      goto LAB_0011e1f5;\n    }\nLAB_0011e071:\n    *param_1 = uVar3;\nLAB_0011e080:\n    uVar14 = uVar14 * uVar3 + 7 >> 3;\n  }\n  else {\n    if (bVar1 == 4) {\n      pbVar16 = (byte *)((ulong)(uVar4 >> 1) + param_2);\n      pbVar18 = (byte *)((ulong)(uVar8 >> 1) + param_2);\n      param_4 = param_4 & 0x10000;\n      if (param_4 == 0) {\n        uVar4 = (uint)((uVar5 + 1 & 1) == 0) << 2;\n        uVar8 = uVar3 + 1 & 1;\n        if (uVar8 == 0) {\n          iVar15 = 4;\n          uVar19 = 4;\n          param_4 = 4;\n        }\n        else {\n          uVar8 = 0;\n          iVar15 = 4;\n          uVar19 = 4;\n        }\n      }\n      else {\n        iVar15 = -4;\n        uVar19 = 0;\n        uVar4 = (uVar5 + 1) * 4 & 4;\n        param_4 = (uVar3 + 1) * 4 & 4;\n        uVar8 = 4;\n      }\n      if (uVar5 == 0) goto LAB_0011e071;\n      uVar5 = 0;\n      do {\n        bVar1 = *pbVar18;\n        if (0 < iVar2) {\n          iVar13 = 0;\n          do {\n            while (*pbVar16 = (byte)(((int)(uint)bVar1 >> ((byte)uVar4 & 0x1f) & 0xfU) <<\n                                    ((byte)param_4 & 0x1f)) |\n                              (byte)(0xf0f >> (4 - (byte)param_4 & 0x1f)) & *pbVar16,\n                  uVar19 == param_4) {\n              iVar13 = iVar13 + 1;\n              pbVar16 = pbVar16 + -1;\n              param_4 = uVar8;\n              if (iVar13 == iVar2) goto LAB_0011e2df;\n            }\n            iVar13 = iVar13 + 1;\n            param_4 = param_4 + iVar15;\n          } while (iVar13 != iVar2);\n        }\nLAB_0011e2df:\n        if (uVar19 == uVar4) {\n          pbVar18 = pbVar18 + -1;\n          uVar4 = uVar8;\n        }\n        else {\n          uVar4 = uVar4 + iVar15;\n        }\n        uVar5 = uVar5 + 1;\n      } while (uVar5 <= *param_1 && *param_1 != uVar5);\nLAB_0011e1f5:\n      uVar14 = (ulong)*(byte *)((long)param_1 + 0x13);\n    }\n    else {\n      if (bVar1 == 1) {\n        uVar19 = uVar5 + 7;\n        pbVar18 = (byte *)((ulong)(uVar8 >> 3) + param_2);\n        pbVar16 = (byte *)((ulong)(uVar4 >> 3) + param_2);\n        uVar4 = uVar3 + 7;\n        param_4 = param_4 & 0x10000;\n        if (param_4 == 0) {\n          uVar19 = ~uVar19;\n          uVar4 = ~uVar4;\n          iVar15 = 1;\n          uVar8 = 7;\n        }\n        else {\n          iVar15 = -1;\n          uVar8 = 0;\n          param_4 = 7;\n        }\n        uVar4 = uVar4 & 7;\n        uVar19 = uVar19 & 7;\n        if (uVar5 == 0) goto LAB_0011e071;\n        uVar5 = 0;\n        do {\n          bVar1 = *pbVar18;\n          if (0 < iVar2) {\n            iVar13 = 0;\n            do {\n              while (*pbVar16 = (byte)(((int)(uint)bVar1 >> ((byte)uVar19 & 0x1f) & 1U) <<\n                                      ((byte)uVar4 & 0x1f)) |\n                                (byte)(0x7f7f >> (7 - (byte)uVar4 & 0x1f)) & *pbVar16,\n                    uVar8 != uVar4) {\n                iVar13 = iVar13 + 1;\n                uVar4 = uVar4 + iVar15;\n                if (iVar13 == iVar2) goto LAB_0011e1e0;\n              }\n              iVar13 = iVar13 + 1;\n              pbVar16 = pbVar16 + -1;\n              uVar4 = param_4;\n            } while (iVar13 != iVar2);\n          }\nLAB_0011e1e0:\n          if (uVar8 == uVar19) {\n            pbVar18 = pbVar18 + -1;\n            uVar19 = param_4;\n          }\n          else {\n            uVar19 = uVar19 + iVar15;\n          }\n          uVar5 = uVar5 + 1;\n        } while (uVar5 <= *param_1 && *param_1 != uVar5);\n        goto LAB_0011e1f5;\n      }\n      bVar1 = bVar1 >> 3;\n      uVar11 = (ulong)bVar1;\n      local_60 = (undefined8 *)(uVar4 * uVar11 + param_2);\n      param_2 = param_2 + uVar8 * uVar11;\n      if (uVar5 != 0) {\n        puVar6 = &local_48;\n        lVar17 = -uVar11;\n        local_64 = 0;\n        do {\n          puVar6 = (undefined8 *)__memcpy_chk(puVar6,param_2,uVar11,8);\n          if (0 < iVar2) {\n            iVar15 = 0;\n            uVar14 = (ulong)(uint)bVar1;\n            puVar9 = local_60;\n            do {\n              if (bVar1 < 8) {\n                if ((bVar1 & 4) == 0) {\n                  if ((bVar1 != 0) &&\n                     (*(undefined *)puVar9 = *(undefined *)puVar6, (bVar1 & 2) != 0)) {\n                    *(undefined2 *)((long)puVar9 + (uVar14 - 2)) =\n                         *(undefined2 *)((long)puVar6 + (uVar11 - 2));\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar9 = *(undefined4 *)puVar6;\n                  *(undefined4 *)((long)puVar9 + (uVar14 - 4)) =\n                       *(undefined4 *)((long)puVar6 + (uVar11 - 4));\n                }\n              }\n              else {\n                *puVar9 = *puVar6;\n                *(undefined8 *)((long)puVar9 + (uVar14 - 8)) =\n                     *(undefined8 *)((long)puVar6 + (uVar11 - 8));\n                lVar7 = (long)puVar9 - ((ulong)(puVar9 + 1) & 0xfffffffffffffff8);\n                uVar5 = (int)lVar7 + (uint)bVar1 & 0xfffffff8;\n                if (7 < uVar5) {\n                  uVar10 = 0;\n                  do {\n                    uVar4 = (int)uVar10 + 8;\n                    *(undefined8 *)(((ulong)(puVar9 + 1) & 0xfffffffffffffff8) + uVar10) =\n                         *(undefined8 *)((long)puVar6 + (uVar10 - lVar7));\n                    uVar10 = (ulong)uVar4;\n                  } while (uVar4 < uVar5);\n                }\n              }\n              iVar15 = iVar15 + 1;\n              puVar9 = (undefined8 *)((long)puVar9 + lVar17);\n            } while (iVar15 != iVar2);\n            local_60 = (undefined8 *)((long)local_60 + ((ulong)(iVar2 - 1) + 1) * lVar17);\n          }\n          local_64 = local_64 + 1;\n          param_2 = param_2 + lVar17;\n        } while (local_64 <= *param_1 && *param_1 != local_64);\n        uVar14 = (ulong)*(byte *)((long)param_1 + 0x13);\n      }\n    }\n    *param_1 = uVar3;\n    if ((byte)uVar14 < 8) goto LAB_0011e080;\n    uVar14 = (ulong)(byte)((byte)uVar14 >> 3) * (ulong)uVar3;\n  }\n  *(ulong *)(param_1 + 2) = uVar14;\nLAB_0011e04e:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011e490": "\nvoid FUN_0011e490(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,int param_5)\n\n{\n  code *pcVar1;\n  uint uVar2;\n  \n  uVar2 = param_5 - 1;\n  if (3 < uVar2) {\n    return;\n  }\n  if (*(long *)(param_1 + 0x480) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x0011e4bf. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x480 + (long)(int)uVar2 * 8))(param_2);\n    return;\n  }\n  *(code **)(param_1 + 0x480) = FUN_00119630;\n  *(code **)(param_1 + 0x488) = FUN_00119670;\n  *(code **)(param_1 + 0x490) = FUN_001196a0;\n  pcVar1 = FUN_00119710;\n  if ((int)(*(byte *)(param_1 + 0x26a) + 7) >> 3 != 1) {\n    pcVar1 = FUN_001197b0;\n  }\n  *(code **)(param_1 + 0x498) = pcVar1;\n                    /* WARNING: Could not recover jumptable at 0x0011e531. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x480 + (long)(int)uVar2 * 8))(param_2,param_3,param_4);\n  return;\n}\n\n", "FUN_0011e540": "\nvoid FUN_0011e540(long param_1,long param_2,ulong param_3)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  char *pcVar5;\n  uint uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined local_448 [1032];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  *(long *)(param_1 + 0x158) = param_2;\n  *(undefined4 *)(param_1 + 0x160) = 0;\n  if (param_2 == 0) {\n    param_3 = 0;\n  }\n  do {\n    if (*(int *)(param_1 + 0x148) == 0) {\n      uVar3 = *(uint *)(param_1 + 0x248);\n      while (uVar3 == 0) {\n        FUN_00119dc0(param_1,0);\n        uVar3 = FUN_0011d820(param_1);\n        *(uint *)(param_1 + 0x248) = uVar3;\n        if (*(int *)(param_1 + 0x218) != 0x49444154) goto LAB_0011e790;\n      }\n      uVar6 = *(uint *)(param_1 + 0x470);\n      if (uVar3 < *(uint *)(param_1 + 0x470)) {\n        uVar6 = uVar3;\n      }\n      uVar4 = FUN_00119a20(param_1,uVar6,0);\n      FUN_00119cb0(param_1,uVar4,uVar6);\n      *(int *)(param_1 + 0x248) = *(int *)(param_1 + 0x248) - uVar6;\n      *(uint *)(param_1 + 0x148) = uVar6;\n      *(undefined8 *)(param_1 + 0x140) = uVar4;\n    }\n    if (param_2 == 0) {\n      *(undefined4 *)(param_1 + 0x160) = 0x400;\n      *(undefined **)(param_1 + 0x158) = local_448;\n      iVar2 = FUN_00119fb0(param_1);\n      uVar3 = *(uint *)(param_1 + 0x160);\n      *(undefined4 *)(param_1 + 0x160) = 0;\n      param_3 = param_3 + (0x400 - (ulong)uVar3);\n      if (iVar2 != 1) goto LAB_0011e5e0;\nLAB_0011e648:\n      *(undefined8 *)(param_1 + 0x158) = 0;\n      *(ulong *)(param_1 + 300) = *(ulong *)(param_1 + 300) | 0x800000008;\n      if ((*(int *)(param_1 + 0x148) != 0) || (*(int *)(param_1 + 0x248) != 0)) {\n        png_chunk_benign_error(param_1,\"Extra compressed data\");\n      }\n      if (param_3 != 0) {\n        if (param_2 != 0) {\nLAB_0011e790:\n                    /* WARNING: Subroutine does not return */\n          png_error(param_1,\"Not enough image data\");\n        }\n        pcVar5 = \"Too much image data\";\nLAB_0011e69a:\n        png_chunk_benign_error(param_1,pcVar5);\n      }\n      break;\n    }\n    uVar1 = 0xffffffff;\n    uVar7 = 0xffffffff;\n    if (param_3 < 0xffffffff) {\n      uVar1 = (undefined4)param_3;\n      uVar7 = param_3;\n    }\n    *(undefined4 *)(param_1 + 0x160) = uVar1;\n    iVar2 = FUN_00119fb0(param_1);\n    uVar3 = *(uint *)(param_1 + 0x160);\n    *(undefined4 *)(param_1 + 0x160) = 0;\n    param_3 = (param_3 + uVar3) - uVar7;\n    if (iVar2 == 1) goto LAB_0011e648;\nLAB_0011e5e0:\n    if (iVar2 != 0) {\n      FUN_00107840(param_1,iVar2);\n      pcVar5 = *(char **)(param_1 + 0x170);\n      if (param_2 != 0) {\n                    /* WARNING: Subroutine does not return */\n        png_chunk_error(param_1,pcVar5);\n      }\n      goto LAB_0011e69a;\n    }\n  } while (param_3 != 0);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_0011e7b0": "\nvoid FUN_0011e7b0(long param_1)\n\n{\n  int iVar1;\n  \n  if ((*(byte *)(param_1 + 0x130) & 8) == 0) {\n    FUN_0011e540(param_1,0,0);\n    *(undefined8 *)(param_1 + 0x158) = 0;\n    if ((*(byte *)(param_1 + 0x130) & 8) == 0) {\n      *(ulong *)(param_1 + 300) = *(ulong *)(param_1 + 300) | 0x800000008;\n      iVar1 = *(int *)(param_1 + 0x138);\n      goto joined_r0x0011e808;\n    }\n  }\n  iVar1 = *(int *)(param_1 + 0x138);\njoined_r0x0011e808:\n  if (iVar1 != 0x49444154) {\n    return;\n  }\n  *(undefined8 *)(param_1 + 0x140) = 0;\n  *(undefined4 *)(param_1 + 0x148) = 0;\n  *(undefined4 *)(param_1 + 0x138) = 0;\n  FUN_00119dc0(param_1,*(undefined4 *)(param_1 + 0x248));\n  return;\n}\n\n", "FUN_0011e840": "\nvoid FUN_0011e840(long param_1)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  uint uVar3;\n  ulong uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  uVar3 = *(int *)(param_1 + 0x214) + 1;\n  *(uint *)(param_1 + 0x214) = uVar3;\n  if (uVar3 < *(uint *)(param_1 + 0x200)) {\n    return;\n  }\n  if (*(char *)(param_1 + 0x264) != '\\0') {\n    *(undefined4 *)(param_1 + 0x214) = 0;\n    memset(*(void **)(param_1 + 0x220),0,*(long *)(param_1 + 0x208) + 1);\n    uVar4 = (ulong)(byte)(*(char *)(param_1 + 0x265) + 1);\n    while( true ) {\n      bVar2 = (byte)uVar4;\n      if (6 < bVar2) break;\n      uVar7 = (uint)(byte)(&DAT_0012bc95)[uVar4];\n      uVar3 = ((uVar7 - 1) + *(int *)(param_1 + 0x1f8)) - (uint)(byte)(&DAT_0012bc8e)[uVar4];\n      *(uint *)(param_1 + 0x210) = uVar3 / uVar7;\n      if ((*(byte *)(param_1 + 0x134) & 2) != 0) {\n        *(byte *)(param_1 + 0x265) = bVar2;\n        return;\n      }\n      uVar6 = (uint)(byte)(&DAT_0012bc87)[uVar4];\n      pbVar1 = &DAT_0012bc80 + uVar4;\n      uVar4 = uVar4 + 1;\n      uVar5 = ((uVar6 - 1) + *(int *)(param_1 + 0x1fc)) - (uint)*pbVar1;\n      *(uint *)(param_1 + 0x200) = uVar5 / uVar6;\n      if ((uVar6 <= uVar5) && (uVar7 <= uVar3)) {\n        *(byte *)(param_1 + 0x265) = bVar2;\n        return;\n      }\n    }\n    *(byte *)(param_1 + 0x265) = bVar2;\n  }\n  FUN_0011e7b0(param_1);\n  return;\n}\n\n", "FUN_0011e980": "\nvoid FUN_0011e980(long param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  uint uVar7;\n  long lVar8;\n  \n  FUN_00115280();\n  if (*(char *)(param_1 + 0x264) == '\\0') {\n    iVar3 = *(int *)(param_1 + 0x1f8);\n    uVar7 = *(uint *)(param_1 + 0x134);\n    *(undefined4 *)(param_1 + 0x200) = *(undefined4 *)(param_1 + 0x1fc);\n    *(int *)(param_1 + 0x210) = iVar3;\n  }\n  else {\n    uVar7 = *(uint *)(param_1 + 0x134);\n    iVar3 = *(int *)(param_1 + 0x1f8);\n    uVar2 = *(uint *)(param_1 + 0x1fc);\n    if ((uVar7 & 2) == 0) {\n      uVar2 = *(uint *)(param_1 + 0x1fc) + 7 >> 3;\n    }\n    *(uint *)(param_1 + 0x200) = uVar2;\n    *(uint *)(param_1 + 0x210) =\n         ((iVar3 + -1 + (uint)(byte)(&DAT_0012bc95)[*(byte *)(param_1 + 0x265)]) -\n         (uint)(byte)(&DAT_0012bc8e)[*(byte *)(param_1 + 0x265)]) /\n         (uint)(byte)(&DAT_0012bc95)[*(byte *)(param_1 + 0x265)];\n  }\n  uVar4 = (ulong)*(byte *)(param_1 + 0x26a);\n  if (((uVar7 & 4) != 0) && (*(byte *)(param_1 + 0x268) < 8)) {\n    uVar4 = 8;\n  }\n  if ((uVar7 & 0x1000) == 0) {\n    if ((uVar7 & 0x200) != 0) {\n      uVar7 = uVar7 & 0xfffffdff;\n      *(uint *)(param_1 + 0x134) = uVar7;\n    }\n  }\n  else {\n    cVar1 = *(char *)(param_1 + 0x267);\n    if (cVar1 == '\\x03') {\n      uVar4 = (ulong)((-(uint)(*(short *)(param_1 + 0x260) == 0) & 0xfffffff8) + 0x20);\n    }\n    else if (cVar1 == '\\0') {\n      if ((uint)uVar4 < 8) {\n        uVar4 = 8;\n      }\n      if (*(short *)(param_1 + 0x260) != 0) {\n        uVar4 = (ulong)(uint)((int)uVar4 * 2);\n      }\n    }\n    else if ((cVar1 == '\\x02') && (*(short *)(param_1 + 0x260) != 0)) {\n      uVar4 = (ulong)((uint)uVar4 << 2) / 3;\n    }\n    if (((uVar7 & 0x200) != 0) && (*(byte *)(param_1 + 0x268) < 0x10)) {\n      uVar4 = (ulong)(uint)((int)uVar4 * 2);\n    }\n  }\n  if ((uVar7 & 0x8000) != 0) {\n    if (*(char *)(param_1 + 0x267) == '\\0') {\n      uVar4 = (ulong)((-(uint)((uint)uVar4 < 9) & 0xfffffff0) + 0x20);\n    }\n    else if ((byte)(*(char *)(param_1 + 0x267) - 2U) < 2) {\n      uVar4 = (ulong)((-(uint)((uint)uVar4 < 0x21) & 0xffffffe0) + 0x40);\n    }\n  }\n  uVar2 = (uint)uVar4;\n  if ((uVar7 & 0x4000) == 0) {\n    if ((uVar7 & 0x100000) != 0) goto LAB_0011eabe;\nLAB_0011ead4:\n    *(char *)(param_1 + 0x26e) = (char)uVar4;\n    *(undefined *)(param_1 + 0x26f) = 0;\n    uVar6 = (ulong)(iVar3 + 7U & 0xfffffff8);\n    uVar7 = (uint)uVar4;\n    if (uVar7 < 8) {\n      lVar8 = (uVar4 * uVar6 >> 3) + 1;\n      goto LAB_0011eb00;\n    }\n  }\n  else {\n    if ((((*(short *)(param_1 + 0x260) != 0) && ((uVar7 & 0x1000) != 0)) || ((uVar7 & 0x8000) != 0))\n       || (cVar1 = *(char *)(param_1 + 0x267), cVar1 == '\\x04')) {\n      if (uVar2 < 0x11) {\nLAB_0011eaad:\n        if ((uVar7 & 0x100000) == 0) {\n          *(undefined2 *)(param_1 + 0x26e) = 0x20;\n          uVar7 = 0x20;\n          lVar8 = (ulong)(iVar3 + 7U & 0xfffffff8) * 4 + 1;\n          goto LAB_0011eb00;\n        }\n        uVar2 = 0x20;\n      }\n      else {\nLAB_0011ec80:\n        if ((uVar7 & 0x100000) == 0) {\n          *(undefined2 *)(param_1 + 0x26e) = 0x40;\n          uVar7 = 0x40;\n          lVar8 = (ulong)(iVar3 + 7U & 0xfffffff8) * 8 + 1;\n          goto LAB_0011eb00;\n        }\n        uVar2 = 0x40;\n      }\nLAB_0011eabe:\n      uVar7 = (uint)*(byte *)(param_1 + 0x128) * (uint)*(byte *)(param_1 + 0x129);\n      uVar4 = (ulong)uVar2;\n      if (uVar2 < uVar7) {\n        uVar4 = (ulong)uVar7;\n      }\n      goto LAB_0011ead4;\n    }\n    if (8 < uVar2) {\n      if (cVar1 == '\\x06') goto LAB_0011ec80;\n      if ((uVar7 & 0x100000) == 0) {\n        *(undefined2 *)(param_1 + 0x26e) = 0x30;\n        uVar7 = 0x30;\n        uVar6 = (ulong)(iVar3 + 7U & 0xfffffff8);\n        goto LAB_0011ebe0;\n      }\n      uVar2 = 0x30;\n      goto LAB_0011eabe;\n    }\n    if (cVar1 == '\\x06') goto LAB_0011eaad;\n    if ((uVar7 & 0x100000) != 0) {\n      uVar2 = 0x18;\n      goto LAB_0011eabe;\n    }\n    uVar7 = 0x18;\n    *(undefined2 *)(param_1 + 0x26e) = 0x18;\n    uVar6 = (ulong)(iVar3 + 7U & 0xfffffff8);\n  }\nLAB_0011ebe0:\n  lVar8 = (uVar7 >> 3) * uVar6 + 1;\nLAB_0011eb00:\n  uVar4 = lVar8 + 0x30 + (ulong)(uVar7 + 7 >> 3);\n  if (*(ulong *)(param_1 + 0x458) <= uVar4 && uVar4 != *(ulong *)(param_1 + 0x458)) {\n    png_free(param_1,*(undefined8 *)(param_1 + 0x400));\n    png_free(param_1,*(undefined8 *)(param_1 + 0x478));\n    if (*(char *)(param_1 + 0x264) == '\\0') {\n      uVar5 = png_malloc();\n      *(undefined8 *)(param_1 + 0x400) = uVar5;\n    }\n    else {\n      uVar5 = png_calloc(param_1,uVar4);\n      *(undefined8 *)(param_1 + 0x400) = uVar5;\n    }\n    uVar6 = png_malloc(param_1);\n    *(ulong *)(param_1 + 0x458) = uVar4;\n    *(ulong *)(param_1 + 0x478) = uVar6;\n    *(ulong *)(param_1 + 0x220) = (uVar6 & 0xfffffffffffffff0) + 0x1f;\n    *(ulong *)(param_1 + 0x228) = (*(ulong *)(param_1 + 0x400) & 0xfffffffffffffff0) + 0x1f;\n  }\n  if (*(long *)(param_1 + 0x208) == -1) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Row has too many bytes to allocate in memory\");\n  }\n  memset(*(void **)(param_1 + 0x220),0,*(long *)(param_1 + 0x208) + 1);\n  if (*(long *)(param_1 + 0x460) != 0) {\n    *(undefined8 *)(param_1 + 0x468) = 0;\n    *(undefined8 *)(param_1 + 0x460) = 0;\n    png_free(param_1);\n  }\n  iVar3 = FUN_00119890(param_1,0x49444154);\n  if (iVar3 != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,*(undefined8 *)(param_1 + 0x170));\n  }\n  *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 0x40;\n  return;\n}\n\n", "FUN_0011ee60": "\nvoid FUN_0011ee60(long param_1,uint param_2)\n\n{\n  byte bVar1;\n  \n  param_2 = param_2 & 0xb;\n  if (param_2 == 0) {\n    if ((*(byte *)(param_1 + 0x12d) & 0x80) == 0) {\n      FUN_0010b470(param_1,\"png_set_unknown_chunks now expects a valid location\");\n      bVar1 = *(byte *)(param_1 + 300) & 0xb;\n      if ((*(byte *)(param_1 + 300) & 0xb) != 0) {\n        for (; (-bVar1 & bVar1) != bVar1; bVar1 = bVar1 & bVar1 - 1) {\n        }\n        return;\n      }\n    }\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"invalid location in png_set_unknown_chunks\");\n  }\n  if ((-param_2 & param_2) == param_2) {\n    return;\n  }\n  do {\n    param_2 = param_2 & param_2 - 1;\n  } while ((-param_2 & param_2) != param_2);\n  return;\n}\n\n", "png_set_cHRM": "\nvoid png_set_cHRM(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6,undefined8 param_7,undefined8 param_8,\n                 undefined8 param_9,undefined8 param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  \n  uVar1 = FUN_00108c50(param_8,param_9,\"cHRM Blue Y\");\n  uVar2 = FUN_00108c50(param_7,param_9,\"cHRM Blue X\");\n  uVar3 = FUN_00108c50(param_6,param_9,\"cHRM Green Y\");\n  uVar4 = FUN_00108c50(param_5,param_9,\"cHRM Green X\");\n  uVar5 = FUN_00108c50(param_4,param_9,\"cHRM Red Y\");\n  uVar6 = FUN_00108c50(param_3,param_9,\"cHRM Red X\");\n  uVar7 = FUN_00108c50(param_2,param_9,\"cHRM White Y\");\n  uVar8 = FUN_00108c50(param_1,param_9,\"cHRM White X\");\n  png_set_cHRM_fixed(param_9,param_10,uVar8,uVar7,uVar6,uVar5,uVar4,uVar3,uVar2,uVar1);\n  return;\n}\n\n", "png_set_cHRM_XYZ": "\nvoid png_set_cHRM_XYZ(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                     undefined8 param_5,undefined8 param_6,undefined8 param_7,undefined8 param_8,\n                     undefined8 param_9,undefined8 param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 in_stack_00000008;\n  undefined8 uVar10;\n  \n  uVar1 = FUN_00108c50(in_stack_00000008,param_9,\"cHRM Blue Z\");\n  uVar2 = FUN_00108c50(param_8,param_9,\"cHRM Blue Y\");\n  uVar3 = FUN_00108c50(param_7,param_9,\"cHRM Blue X\");\n  uVar4 = FUN_00108c50(param_6,param_9,\"cHRM Green Z\");\n  uVar5 = FUN_00108c50(param_5,param_9,\"cHRM Green Y\");\n  uVar6 = FUN_00108c50(param_4,param_9,\"cHRM Green X\");\n  uVar7 = FUN_00108c50(param_3,param_9,\"cHRM Red Z\");\n  uVar8 = FUN_00108c50(param_2,param_9,\"cHRM Red Y\");\n  uVar10 = 0x11f322;\n  uVar9 = FUN_00108c50(param_1,param_9,\"cHRM Red X\");\n  png_set_cHRM_XYZ_fixed\n            (param_9,param_10,uVar9,uVar8,uVar7,uVar6,uVar5,uVar4,uVar3,uVar2,uVar1,uVar10);\n  return;\n}\n\n", "png_set_eXIf": "\nvoid png_set_eXIf(undefined8 param_1)\n\n{\n  png_warning(param_1,\"png_set_eXIf does not work; use png_set_eXIf_1\");\n  return;\n}\n\n", "png_set_gAMA": "\nvoid png_set_gAMA(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_00108c50(param_1,\"png_set_gAMA\");\n  png_set_gAMA_fixed(param_1,param_2,uVar1);\n  return;\n}\n\n", "png_set_sCAL": "\nvoid png_set_sCAL(double param_1,double param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined local_68 [32];\n  undefined local_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 <= 0.0) {\n    png_warning(param_1,param_2,0,param_3,\"Invalid sCAL width ignored\");\n  }\n  else if (param_2 <= 0.0) {\n    png_warning(param_1,param_2,0,param_3,\"Invalid sCAL height ignored\");\n  }\n  else {\n    FUN_00108490(param_1,param_2,0,param_3,local_68,0x12,5);\n    FUN_00108490(param_2,param_3,local_48,0x12,5);\n    png_set_sCAL_s(param_3,param_4,param_5,local_68,local_48);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_sCAL_fixed": "\nvoid png_set_sCAL_fixed(undefined8 param_1,undefined8 param_2,undefined4 param_3,int param_4,\n                       int param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack120 [32];\n  undefined local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_4 < 1) {\n    png_warning(param_1,\"Invalid sCAL width ignored\");\n  }\n  else if (param_5 < 1) {\n    png_warning(param_1,\"Invalid sCAL height ignored\");\n  }\n  else {\n    FUN_00108aa0(param_1,auStack120,0x12);\n    FUN_00108aa0(param_1,local_58,0x12,param_5);\n    png_set_sCAL_s(param_1,param_2,param_3,auStack120,local_58);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_sRGB_gAMA_and_cHRM": "\nvoid png_set_sRGB_gAMA_and_cHRM(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    iVar1 = FUN_00109ad0(param_1,param_2 + 0x34);\n    if (iVar1 != 0) {\n      *(ushort *)(param_2 + 0x7e) = *(ushort *)(param_2 + 0x7e) | 0x18;\n    }\n    FUN_00107910(param_1,param_2);\n    return;\n  }\n  return;\n}\n\n", "png_set_iCCP": "\nvoid png_set_iCCP(long param_1,long param_2,char *param_3,int param_4,void *param_5,ulong param_6)\n\n{\n  int iVar1;\n  size_t sVar2;\n  void *__dest;\n  void *__dest_00;\n  char *pcVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  if (((param_2 != 0) && (param_3 != (char *)0x0)) && (param_5 != (void *)0x0)) {\n    param_6 = param_6 & 0xffffffff;\n    if (param_4 != 0) {\n      FUN_0010b490(param_1,\"Invalid iCCP compression method\");\n    }\n    iVar1 = FUN_00109ec0(param_1,param_2 + 0x34,param_3,param_6,param_5,\n                         *(undefined *)(param_2 + 0x25));\n    FUN_00107910(param_1,param_2);\n    if (iVar1 != 0) {\n      *(ushort *)(param_2 + 0x7e) = *(ushort *)(param_2 + 0x7e) | 0x18;\n      sVar2 = strlen(param_3);\n      __dest = (void *)png_malloc_warn(param_1,sVar2 + 1);\n      if (__dest == (void *)0x0) {\n        pcVar3 = \"Insufficient memory to process iCCP chunk\";\n      }\n      else {\n        memcpy(__dest,param_3,sVar2 + 1);\n        __dest_00 = (void *)png_malloc_warn(param_1,param_6);\n        if (__dest_00 != (void *)0x0) {\n          memcpy(__dest_00,param_5,param_6);\n          png_free_data(param_1,param_2,0x10,0);\n          *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x10;\n          *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x1000;\n          *(int *)(param_2 + 0x90) = (int)param_6;\n          *(void **)(param_2 + 0x80) = __dest;\n          *(void **)(param_2 + 0x88) = __dest_00;\n          return;\n        }\n        png_free(param_1,__dest);\n        pcVar3 = \"Insufficient memory to process iCCP profile\";\n      }\n      png_benign_error(param_1,pcVar3);\n      return;\n    }\n  }\n  return;\n}\n\n", "FUN_001200e0": "\nundefined8 FUN_001200e0(long param_1,long param_2,int *param_3,int param_4)\n\n{\n  int *piVar1;\n  int iVar2;\n  char *__s;\n  size_t __n;\n  void *pvVar3;\n  size_t __n_00;\n  long lVar4;\n  undefined8 uVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  size_t local_60;\n  size_t local_58;\n  \n  if ((((param_1 == 0) || (param_2 == 0)) || (param_4 < 1)) || (param_3 == (int *)0x0)) {\nLAB_00120330:\n    uVar5 = 0;\n  }\n  else {\n    iVar6 = *(int *)(param_2 + 0x94);\n    if (param_4 <= *(int *)(param_2 + 0x98) - iVar6) {\n      lVar4 = *(long *)(param_2 + 0xa0);\nLAB_00120141:\n      iVar7 = 0;\n      do {\n        if (*(char **)(param_3 + 2) != (char *)0x0) {\n          iVar2 = *param_3;\n          if (iVar2 + 1U < 4) {\n            piVar1 = (int *)(lVar4 + (long)iVar6 * 0x38);\n            __n = strlen(*(char **)(param_3 + 2));\n            __s = *(char **)(param_3 + 4);\n            if (iVar2 < 1) {\n              if ((__s != (char *)0x0) && (*__s != '\\0')) {\n                local_60 = 0;\n                local_58 = 0;\n                goto LAB_00120365;\n              }\n              *piVar1 = -1;\n              __n_00 = 0;\n              local_58 = 0;\n              local_60 = 0;\n            }\n            else {\n              local_60 = 0;\n              if (*(char **)(param_3 + 10) != (char *)0x0) {\n                local_60 = strlen(*(char **)(param_3 + 10));\n              }\n              local_58 = 0;\n              if (*(char **)(param_3 + 0xc) != (char *)0x0) {\n                local_58 = strlen(*(char **)(param_3 + 0xc));\n              }\n              if ((__s == (char *)0x0) || (*__s == '\\0')) {\n                *piVar1 = 1;\n                __n_00 = 0;\n              }\n              else {\nLAB_00120365:\n                __n_00 = strlen(__s);\n                *piVar1 = iVar2;\n              }\n            }\n            pvVar3 = (void *)FUN_0010cbb0(param_1,__n_00 + 4 + __n + local_58 + local_60);\n            *(void **)(piVar1 + 2) = pvVar3;\n            if (pvVar3 == (void *)0x0) {\n              FUN_0010b520(param_1,\"text chunk: out of memory\",1);\n              return 1;\n            }\n            pvVar3 = memcpy(pvVar3,*(void **)(param_3 + 2),__n);\n            iVar6 = *param_3;\n            *(undefined *)((long)pvVar3 + __n) = 0;\n            pvVar3 = (void *)((long)pvVar3 + __n + 1);\n            if (iVar6 < 1) {\n              *(undefined8 *)(piVar1 + 10) = 0;\n              *(undefined8 *)(piVar1 + 0xc) = 0;\n              *(void **)(piVar1 + 4) = pvVar3;\n              if (__n_00 != 0) goto LAB_001202fb;\nLAB_0012016d:\n              *(undefined *)((long)pvVar3 + __n_00) = 0;\n              if (*piVar1 < 1) goto LAB_0012031b;\nLAB_0012017d:\n              *(undefined8 *)(piVar1 + 6) = 0;\n              *(size_t *)(piVar1 + 8) = __n_00;\n            }\n            else {\n              *(void **)(piVar1 + 10) = pvVar3;\n              pvVar3 = memcpy(pvVar3,*(void **)(param_3 + 10),local_60);\n              *(undefined *)((long)pvVar3 + local_60) = 0;\n              pvVar3 = (void *)(*(long *)(piVar1 + 10) + 1 + local_60);\n              *(void **)(piVar1 + 0xc) = pvVar3;\n              memcpy(pvVar3,*(void **)(param_3 + 0xc),local_58);\n              *(undefined *)(*(long *)(piVar1 + 0xc) + local_58) = 0;\n              pvVar3 = (void *)(*(long *)(piVar1 + 0xc) + 1 + local_58);\n              *(void **)(piVar1 + 4) = pvVar3;\n              if (__n_00 == 0) goto LAB_0012016d;\nLAB_001202fb:\n              memcpy(pvVar3,*(void **)(param_3 + 4),__n_00);\n              *(undefined *)(*(long *)(piVar1 + 4) + __n_00) = 0;\n              if (0 < *piVar1) goto LAB_0012017d;\nLAB_0012031b:\n              *(size_t *)(piVar1 + 6) = __n_00;\n              *(undefined8 *)(piVar1 + 8) = 0;\n            }\n            *(int *)(param_2 + 0x94) = *(int *)(param_2 + 0x94) + 1;\n          }\n          else {\n            FUN_0010b520(param_1,\"text compression mode is out of range\",1);\n          }\n        }\n        iVar7 = iVar7 + 1;\n        param_3 = param_3 + 0xe;\n        if (param_4 <= iVar7) goto LAB_00120330;\n        lVar4 = *(long *)(param_2 + 0xa0);\n        iVar6 = *(int *)(param_2 + 0x94);\n      } while( true );\n    }\n    iVar7 = 0x7fffffff - iVar6;\n    if (param_4 <= iVar7) {\n      uVar8 = 0x7fffffff;\n      if (param_4 + iVar6 < 0x7ffffff7) {\n        uVar8 = param_4 + iVar6 + 8U & 0xfffffff8;\n        iVar7 = uVar8 - iVar6;\n      }\n      lVar4 = FUN_0010cc20(param_1,*(undefined8 *)(param_2 + 0xa0),iVar6,iVar7,0x38);\n      if (lVar4 != 0) {\n        png_free(param_1,*(undefined8 *)(param_2 + 0xa0));\n        *(long *)(param_2 + 0xa0) = lVar4;\n        iVar6 = *(int *)(param_2 + 0x94);\n        *(uint *)(param_2 + 300) = *(uint *)(param_2 + 300) | 0x4000;\n        *(uint *)(param_2 + 0x98) = uVar8;\n        goto LAB_00120141;\n      }\n    }\n    FUN_0010b520(param_1,\"too many text chunks\",1);\n    uVar5 = 1;\n  }\n  return uVar5;\n}\n\n", "png_set_text": "\nvoid png_set_text(undefined8 param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001200e0();\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Insufficient memory to store text\");\n}\n\n", "png_set_unknown_chunk_location": "\nvoid png_set_unknown_chunk_location(long param_1,long param_2,int param_3,uint param_4)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  if ((((param_2 != 0 & (byte)~(byte)((uint)param_3 >> 0x18) >> 7) != 0) && (param_1 != 0)) &&\n     (*(int *)(param_2 + 0x138) != param_3 && param_3 <= *(int *)(param_2 + 0x138))) {\n    if ((param_4 & 0xb) == 0) {\n      FUN_0010b490(param_1,\"invalid unknown chunk location\");\n      param_4 = (-(uint)((param_4 & 4) == 0) & 0xfffffff9) + 8;\n    }\n    lVar1 = *(long *)(param_2 + 0x130);\n    uVar2 = FUN_0011ee60(param_1,param_4);\n    *(undefined *)((long)param_3 * 0x20 + lVar1 + 0x18) = uVar2;\n    return;\n  }\n  return;\n}\n\n", "png_permit_mng_features": "\nuint png_permit_mng_features(long param_1,uint param_2)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x3e0) = param_2 & 5;\n    return param_2 & 5;\n  }\n  return 0;\n}\n\n", "png_set_read_user_chunk_fn": "\nvoid png_set_read_user_chunk_fn(long param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x3b8) = param_3;\n    *(undefined8 *)(param_1 + 0x3b0) = param_2;\n  }\n  return;\n}\n\n", "png_set_rows": "\nvoid png_set_rows(long param_1,long param_2,long param_3)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 0) {\n    return;\n  }\n  if (*(long *)(param_2 + 0x160) != 0) {\n    if (*(long *)(param_2 + 0x160) == param_3) goto LAB_00120e13;\n    png_free_data(param_1,param_2,0x40,0);\n  }\n  *(long *)(param_2 + 0x160) = param_3;\n  if (param_3 == 0) {\n    return;\n  }\nLAB_00120e13:\n  *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) | 0x8000;\n  return;\n}\n\n", "png_set_compression_buffer_size": "\nvoid png_set_compression_buffer_size(long param_1,ulong param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (0x7ffffffe < param_2 - 1) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"invalid compression buffer size\");\n  }\n  if ((*(byte *)(param_1 + 0x12d) & 0x80) != 0) {\n    *(int *)(param_1 + 0x470) = (int)param_2;\n    return;\n  }\n  if (*(int *)(param_1 + 0x138) == 0) {\n    if (param_2 < 6) {\n      png_warning(param_1,\"Compression buffer size cannot be reduced below 6\");\n      return;\n    }\n    if (*(uint *)(param_1 + 0x1b8) == param_2) {\n      return;\n    }\n    FUN_00125a30(param_1,param_1 + 0x1b0);\n    *(int *)(param_1 + 0x1b8) = (int)param_2;\n    return;\n  }\n  png_warning(param_1,\"Compression buffer size cannot be changed because it is in use\");\n  return;\n}\n\n", "png_set_invalid": "\nvoid png_set_invalid(long param_1,long param_2,uint param_3)\n\n{\n  if ((param_1 != 0) && (param_2 != 0)) {\n    *(uint *)(param_2 + 8) = *(uint *)(param_2 + 8) & ~param_3;\n  }\n  return;\n}\n\n", "png_set_user_limits": "\nvoid png_set_user_limits(long param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x424) = param_2;\n    *(undefined4 *)(param_1 + 0x428) = param_3;\n  }\n  return;\n}\n\n", "png_set_chunk_cache_max": "\nvoid png_set_chunk_cache_max(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x42c) = param_2;\n  }\n  return;\n}\n\n", "png_set_chunk_malloc_max": "\nvoid png_set_chunk_malloc_max(long param_1,undefined8 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x430) = param_2;\n  }\n  return;\n}\n\n", "png_set_check_for_invalid_index": "\nvoid png_set_check_for_invalid_index(long param_1,int param_2)\n\n{\n  *(uint *)(param_1 + 0x25c) = -(uint)(param_2 < 1);\n  return;\n}\n\n", "FUN_00120fc0": "\nuint FUN_00120fc0(undefined8 param_1,byte *param_2,byte *param_3)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  bool bVar3;\n  uint uVar4;\n  byte bVar5;\n  long in_FS_OFFSET;\n  bool bVar7;\n  undefined auStack312 [264];\n  long local_30;\n  byte bVar6;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 == (byte *)0x0) || (bVar1 = *param_2, bVar1 == 0)) {\n    *param_3 = 0;\n    uVar4 = 0;\n  }\n  else {\n    bVar3 = true;\n    bVar6 = 0;\n    bVar5 = 0;\n    uVar4 = 0;\n    pbVar2 = param_2;\n    do {\n      pbVar2 = pbVar2 + 1;\n      if (((byte)(bVar1 - 0x21) < 0x5e) || (0xa0 < bVar1)) {\n        uVar4 = uVar4 + 1;\n        *param_3 = bVar1;\n        bVar3 = false;\n        bVar1 = *pbVar2;\n        param_3 = param_3 + 1;\n      }\n      else {\n        if (bVar3) {\n          bVar7 = bVar5 == 0;\n          bVar5 = bVar6;\n          if (bVar7) {\n            bVar5 = bVar1;\n            bVar6 = bVar1;\n          }\n        }\n        else {\n          *param_3 = 0x20;\n          param_3 = param_3 + 1;\n          uVar4 = uVar4 + 1;\n          if (bVar1 == 0x20) {\n            bVar3 = true;\n          }\n          else {\n            bVar3 = true;\n            bVar5 = bVar1;\n            bVar6 = bVar1;\n          }\n        }\n        bVar1 = *pbVar2;\n      }\n    } while ((uVar4 < 0x4f) && (bVar1 != 0));\n    if ((uVar4 != 0) && (bVar3)) {\n      uVar4 = uVar4 - 1;\n      param_3 = param_3 + -1;\n      if (bVar5 == 0) {\n        bVar5 = 0x20;\n      }\n    }\n    *param_3 = 0;\n    if (uVar4 != 0) {\n      if (*pbVar2 == 0) {\n        if (bVar5 != 0) {\n          FUN_0010b010(auStack312,1,param_2);\n          FUN_0010b0a0(auStack312,2,4,bVar5);\n          FUN_0010b130(param_1,auStack312,\"keyword \\\"@1\\\": bad character \\'0x@2\\'\");\n        }\n      }\n      else {\n        png_warning(param_1,\"keyword truncated\");\n      }\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00121390": "\nvoid FUN_00121390(long param_1,byte *param_2)\n\n{\n  ulong uVar1;\n  byte *pbVar2;\n  ulong uVar3;\n  \n  if (*(char *)(param_1 + 0x10) == '\\0') {\n    if (*(long *)(param_1 + 8) != 0) {\n      pbVar2 = param_2 + *(long *)(param_1 + 8);\n      do {\n        *param_2 = ~*param_2;\n        param_2 = param_2 + 1;\n      } while (pbVar2 != param_2);\n      return;\n    }\n  }\n  else if (*(short *)(param_1 + 0x10) == 0x804) {\n    uVar1 = *(ulong *)(param_1 + 8);\n    if (uVar1 != 0) {\n      uVar3 = 0;\n      do {\n        param_2[uVar3] = ~param_2[uVar3];\n        uVar3 = uVar3 + 2;\n      } while (uVar3 < uVar1);\n      return;\n    }\n  }\n  else if ((*(short *)(param_1 + 0x10) == 0x1004) && (uVar1 = *(ulong *)(param_1 + 8), uVar1 != 0))\n  {\n    uVar3 = 0;\n    do {\n      param_2[uVar3] = ~param_2[uVar3];\n      param_2[uVar3 + 1] = ~param_2[uVar3 + 1];\n      uVar3 = uVar3 + 4;\n    } while (uVar3 < uVar1);\n    return;\n  }\n  return;\n}\n\n", "FUN_00121420": "\nvoid FUN_00121420(int *param_1,undefined *param_2)\n\n{\n  undefined uVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  \n  if ((*(char *)((long)param_1 + 0x11) == '\\x10') &&\n     (iVar2 = (uint)*(byte *)((long)param_1 + 0x12) * *param_1, iVar2 != 0)) {\n    puVar3 = param_2;\n    do {\n      uVar1 = *puVar3;\n      puVar4 = puVar3 + 2;\n      *puVar3 = puVar3[1];\n      puVar3[1] = uVar1;\n      puVar3 = puVar4;\n    } while (puVar4 != param_2 + (ulong)(iVar2 - 1) * 2 + 2);\n    return;\n  }\n  return;\n}\n\n", "FUN_00121460": "\nvoid FUN_00121460(long param_1,byte *param_2)\n\n{\n  byte bVar1;\n  undefined *puVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  \n  bVar1 = *(byte *)(param_1 + 0x11);\n  if (bVar1 < 8) {\n    pbVar3 = param_2 + *(long *)(param_1 + 8);\n    if (bVar1 == 1) {\n      puVar2 = &DAT_0012c780;\n    }\n    else if (bVar1 == 2) {\n      puVar2 = &DAT_0012c680;\n    }\n    else {\n      puVar2 = &DAT_0012c580;\n      if (bVar1 != 4) {\n        return;\n      }\n    }\n    if (param_2 < pbVar3) {\n      do {\n        pbVar4 = param_2 + 1;\n        *param_2 = puVar2[*param_2];\n        param_2 = pbVar4;\n      } while (pbVar3 != pbVar4);\n    }\n  }\n  return;\n}\n\n", "FUN_001214d0": "\nvoid FUN_001214d0(long param_1,undefined *param_2,int param_3)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  \n  puVar1 = param_2 + *(long *)(param_1 + 8);\n  puVar5 = param_2;\n  if (*(char *)(param_1 + 0x12) == '\\x02') {\n    if (*(char *)(param_1 + 0x11) == '\\b') {\n      puVar6 = param_2 + 1;\n      if (param_3 == 0) {\n        puVar6 = param_2 + 2;\n        puVar5 = param_2 + 1;\n      }\n      puVar2 = puVar5;\n      puVar3 = puVar6;\n      if (puVar6 < puVar1) {\n        do {\n          puVar4 = puVar3 + 2;\n          *puVar2 = *puVar3;\n          puVar2 = puVar2 + 1;\n          puVar3 = puVar4;\n        } while (puVar4 < puVar1);\n        puVar5 = puVar5 + ((ulong)(puVar1 + (-1 - (long)puVar6)) >> 1) + 1;\n      }\n      *(undefined *)(param_1 + 0x13) = 8;\n    }\n    else {\n      if (*(char *)(param_1 + 0x11) != '\\x10') {\n        return;\n      }\n      puVar6 = param_2 + 2;\n      if (param_3 == 0) {\n        puVar6 = param_2 + 4;\n        puVar5 = param_2 + 2;\n      }\n      puVar2 = puVar5;\n      puVar3 = puVar6;\n      if (puVar6 < puVar1) {\n        do {\n          puVar4 = puVar3 + 4;\n          *puVar2 = *puVar3;\n          puVar2[1] = puVar3[1];\n          puVar2 = puVar2 + 2;\n          puVar3 = puVar4;\n        } while (puVar4 < puVar1);\n        puVar5 = puVar5 + ((ulong)(puVar1 + (-1 - (long)puVar6)) >> 2) * 2 + 2;\n      }\n      *(undefined *)(param_1 + 0x13) = 0x10;\n    }\n    *(undefined *)(param_1 + 0x12) = 1;\n    if (*(char *)(param_1 + 0x10) == '\\x04') {\n      *(undefined *)(param_1 + 0x10) = 0;\n    }\n  }\n  else {\n    if (*(char *)(param_1 + 0x12) != '\\x04') {\n      return;\n    }\n    if (*(char *)(param_1 + 0x11) == '\\b') {\n      if (param_3 == 0) {\n        puVar6 = param_2 + 4;\n        puVar5 = param_2 + 3;\n      }\n      else {\n        puVar6 = param_2 + 1;\n      }\n      puVar2 = puVar5;\n      puVar3 = puVar6;\n      if (puVar6 < puVar1) {\n        do {\n          puVar4 = puVar3 + 4;\n          *puVar2 = *puVar3;\n          puVar2[1] = puVar3[1];\n          puVar2[2] = puVar3[2];\n          puVar2 = puVar2 + 3;\n          puVar3 = puVar4;\n        } while (puVar4 < puVar1);\n        puVar5 = puVar5 + ((ulong)(puVar1 + (-1 - (long)puVar6)) >> 2) * 3 + 3;\n      }\n      *(undefined *)(param_1 + 0x13) = 0x18;\n    }\n    else {\n      if (*(char *)(param_1 + 0x11) != '\\x10') {\n        return;\n      }\n      if (param_3 == 0) {\n        puVar6 = param_2 + 8;\n        puVar5 = param_2 + 6;\n      }\n      else {\n        puVar6 = param_2 + 2;\n      }\n      puVar2 = puVar5;\n      puVar3 = puVar6;\n      if (puVar6 < puVar1) {\n        do {\n          puVar4 = puVar3 + 8;\n          *puVar2 = *puVar3;\n          puVar2[1] = puVar3[1];\n          puVar2[2] = puVar3[2];\n          puVar2[3] = puVar3[3];\n          puVar2[4] = puVar3[4];\n          puVar2[5] = puVar3[5];\n          puVar2 = puVar2 + 6;\n          puVar3 = puVar4;\n        } while (puVar4 < puVar1);\n        puVar5 = puVar5 + (((ulong)(puVar1 + (-1 - (long)puVar6)) >> 3) * 3 + 3) * 2;\n      }\n      *(undefined *)(param_1 + 0x13) = 0x30;\n    }\n    *(undefined *)(param_1 + 0x12) = 3;\n    if (*(char *)(param_1 + 0x10) == '\\x06') {\n      *(undefined *)(param_1 + 0x10) = 2;\n    }\n  }\n  *(long *)(param_1 + 8) = (long)puVar5 - (long)param_2;\n  return;\n}\n\n", "FUN_00121700": "\nvoid FUN_00121700(int *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  \n  bVar1 = *(byte *)(param_1 + 4);\n  if ((bVar1 & 2) != 0) {\n    iVar3 = *param_1;\n    if (*(char *)((long)param_1 + 0x11) == '\\b') {\n      if (bVar1 == 2) {\n        if (iVar3 != 0) {\n          puVar4 = param_2;\n          do {\n            uVar2 = *puVar4;\n            puVar5 = puVar4 + 3;\n            *puVar4 = puVar4[2];\n            puVar4[2] = uVar2;\n            puVar4 = puVar5;\n          } while (puVar5 != param_2 + (ulong)(iVar3 - 1) * 3 + 3);\n          return;\n        }\n      }\n      else if ((bVar1 == 6) && (iVar3 != 0)) {\n        puVar4 = param_2;\n        do {\n          uVar2 = *puVar4;\n          puVar5 = puVar4 + 4;\n          *puVar4 = puVar4[2];\n          puVar4[2] = uVar2;\n          puVar4 = puVar5;\n        } while (param_2 + (ulong)(iVar3 - 1) * 4 + 4 != puVar5);\n        return;\n      }\n    }\n    else if (*(char *)((long)param_1 + 0x11) == '\\x10') {\n      if (bVar1 == 2) {\n        if (iVar3 != 0) {\n          puVar4 = param_2;\n          do {\n            uVar2 = *puVar4;\n            puVar5 = puVar4 + 6;\n            *puVar4 = puVar4[4];\n            puVar4[4] = uVar2;\n            uVar2 = puVar4[1];\n            puVar4[1] = puVar4[5];\n            puVar4[5] = uVar2;\n            puVar4 = puVar5;\n          } while (param_2 + ((ulong)(iVar3 - 1) * 3 + 3) * 2 != puVar5);\n          return;\n        }\n      }\n      else if ((bVar1 == 6) && (iVar3 != 0)) {\n        puVar4 = param_2;\n        do {\n          uVar2 = *puVar4;\n          puVar5 = puVar4 + 8;\n          *puVar4 = puVar4[4];\n          puVar4[4] = uVar2;\n          uVar2 = puVar4[1];\n          puVar4[1] = puVar4[5];\n          puVar4[5] = uVar2;\n          puVar4 = puVar5;\n        } while (puVar5 != param_2 + (ulong)(iVar3 - 1) * 8 + 8);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n", "FUN_00121800": "\nvoid FUN_00121800(long param_1,uint *param_2)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  byte *pbVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  bVar1 = *(byte *)((long)param_2 + 0x11);\n  if (((int)(uint)*(ushort *)(param_1 + 600) < 1 << (bVar1 & 0x1f)) &&\n     (*(ushort *)(param_1 + 600) != 0)) {\n    pbVar2 = *(byte **)(param_1 + 0x228);\n    pbVar3 = pbVar2 + *(long *)(param_2 + 2) + -1;\n    uVar4 = -((*param_2 & 7) * (uint)*(byte *)((long)param_2 + 0x13)) & 7;\n    if (bVar1 == 4) {\n      if (pbVar3 <= pbVar2) {\n        return;\n      }\n      do {\n        uVar6 = (int)(uint)*pbVar3 >> (sbyte)uVar4;\n        uVar7 = uVar6 & 0xf;\n        uVar4 = *(uint *)(param_1 + 0x25c);\n        if ((int)*(uint *)(param_1 + 0x25c) < (int)uVar7) {\n          *(uint *)(param_1 + 0x25c) = uVar7;\n          uVar4 = uVar7;\n        }\n        iVar5 = (int)uVar6 >> 4;\n        if ((int)uVar4 < iVar5) {\n          *(int *)(param_1 + 0x25c) = iVar5;\n        }\n        pbVar3 = pbVar3 + -1;\n        uVar4 = 0;\n      } while (pbVar2 != pbVar3);\n      return;\n    }\n    if (bVar1 < 5) {\n      if (bVar1 != 1) {\n        if (bVar1 != 2) {\n          return;\n        }\n        if (pbVar3 <= pbVar2) {\n          return;\n        }\n        do {\n          uVar6 = (int)(uint)*pbVar3 >> (sbyte)uVar4;\n          uVar7 = uVar6 & 3;\n          uVar4 = *(uint *)(param_1 + 0x25c);\n          if ((int)*(uint *)(param_1 + 0x25c) < (int)uVar7) {\n            *(uint *)(param_1 + 0x25c) = uVar7;\n            uVar4 = uVar7;\n          }\n          uVar7 = (int)uVar6 >> 2 & 3;\n          if ((int)uVar4 < (int)uVar7) {\n            *(uint *)(param_1 + 0x25c) = uVar7;\n            uVar4 = uVar7;\n          }\n          uVar7 = (int)uVar6 >> 4 & 3;\n          if ((int)uVar4 < (int)uVar7) {\n            *(uint *)(param_1 + 0x25c) = uVar7;\n            uVar4 = uVar7;\n          }\n          if ((int)uVar4 < (int)uVar6 >> 6) {\n            *(int *)(param_1 + 0x25c) = (int)uVar6 >> 6;\n          }\n          pbVar3 = pbVar3 + -1;\n          uVar4 = 0;\n        } while (pbVar2 != pbVar3);\n        return;\n      }\n      if (pbVar2 < pbVar3) {\n        do {\n          if ((int)(uint)*pbVar3 >> (sbyte)uVar4 != 0) {\n            *(undefined4 *)(param_1 + 0x25c) = 1;\n          }\n          pbVar3 = pbVar3 + -1;\n          uVar4 = 0;\n        } while (pbVar2 != pbVar3);\n        return;\n      }\n    }\n    else if (bVar1 == 8) {\n      if (pbVar3 <= pbVar2) {\n        return;\n      }\n      do {\n        if (*(int *)(param_1 + 0x25c) < (int)(uint)*pbVar3) {\n          *(uint *)(param_1 + 0x25c) = (uint)*pbVar3;\n        }\n        pbVar3 = pbVar3 + -1;\n      } while (pbVar2 != pbVar3);\n      return;\n    }\n  }\n  return;\n}\n\n", "png_set_user_transform_info": "\nvoid png_set_user_transform_info\n               (long param_1,undefined8 param_2,undefined param_3,undefined param_4)\n\n{\n  if (param_1 != 0) {\n    if (((*(byte *)(param_1 + 0x12d) & 0x80) != 0) && ((*(byte *)(param_1 + 0x130) & 0x40) != 0)) {\n      FUN_0010b490(param_1,\"info change after png_start_read_image or png_read_update_info\");\n      return;\n    }\n    *(undefined8 *)(param_1 + 0x120) = param_2;\n    *(undefined *)(param_1 + 0x128) = param_3;\n    *(undefined *)(param_1 + 0x129) = param_4;\n  }\n  return;\n}\n\n", "png_get_user_transform_ptr": "\nundefined8 png_get_user_transform_ptr(long param_1)\n\n{\n  if (param_1 != 0) {\n    return *(undefined8 *)(param_1 + 0x120);\n  }\n  return 0;\n}\n\n", "png_get_current_row_number": "\nundefined4 png_get_current_row_number(long param_1)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0xffffffff;\n  if (param_1 != 0) {\n    uVar1 = *(undefined4 *)(param_1 + 0x214);\n  }\n  return uVar1;\n}\n\n", "png_get_current_pass_number": "\nundefined png_get_current_pass_number(long param_1)\n\n{\n  undefined uVar1;\n  \n  uVar1 = 8;\n  if (param_1 != 0) {\n    uVar1 = *(undefined *)(param_1 + 0x265);\n  }\n  return uVar1;\n}\n\n", "FUN_00121a30": "\nvoid FUN_00121a30(long param_1)\n\n{\n  if (param_1 != 0) {\n    fflush(*(FILE **)(param_1 + 0x108));\n    return;\n  }\n  return;\n}\n\n", "FUN_00121a50": "\nvoid FUN_00121a50(long param_1,void *param_2,size_t param_3)\n\n{\n  size_t sVar1;\n  \n  if (param_1 != 0) {\n    sVar1 = fwrite(param_2,1,param_3,*(FILE **)(param_1 + 0x108));\n    if (param_3 != sVar1) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Write Error\");\n    }\n  }\n  return;\n}\n\n", "FUN_00121aa0": "\nvoid FUN_00121aa0(long param_1)\n\n{\n  if (*(code **)(param_1 + 0xf8) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00121ab0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0xf8))();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"Call to NULL write function\");\n}\n\n", "FUN_00121ac0": "\nvoid FUN_00121ac0(long param_1)\n\n{\n  if (*(code **)(param_1 + 0x290) != (code *)0x0) {\n                    /* WARNING: Could not recover jumptable at 0x00121ad0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x290))();\n    return;\n  }\n  return;\n}\n\n", "FUN_00121b60": "\nvoid FUN_00121b60(void)\n\n{\n  return;\n}\n\n", "FUN_00121b70": "\nvoid FUN_00121b70(long param_1,void *param_2,ulong param_3)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  lVar1 = *(long *)(param_1 + 0x108);\n  uVar2 = *(ulong *)(lVar1 + 0x50);\n  if (param_3 <= ~uVar2) {\n    if (param_3 != 0) {\n      if (uVar2 + param_3 <= *(ulong *)(lVar1 + 0x48)) {\n        memcpy((void *)(uVar2 + *(long *)(lVar1 + 0x40)),param_2,param_3);\n      }\n      *(ulong *)(lVar1 + 0x50) = uVar2 + param_3;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"png_image_write_to_memory: PNG too big\");\n}\n\n", "FUN_00121bd0": "\nuint FUN_00121bd0(int param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  \n  if (param_2 < 0xff7f) {\n    uVar1 = param_1 * param_3 + 0x40U >> 7;\n  }\n  else {\n    uVar1 = param_1 * 0xff;\n  }\n  return ((uVar1 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar1 >> 0xf] >> 0xc) +\n         (uint)(ushort)(&DAT_00129dc0)[uVar1 >> 0xf] >> 8;\n}\n\n", "FUN_00121c20": "\nvoid FUN_00121c20(long param_1,ulong *param_2,uint *param_3,byte param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  uVar2 = (ulong)(int)*param_3;\n  uVar3 = *param_2;\n  uVar4 = uVar3;\n  if (uVar3 < uVar2 * 0x20 + uVar3) {\n    do {\n      if ((*(byte *)(uVar4 + 0x18) & param_4) != 0) {\n        iVar1 = png_handle_as_unknown(param_1,uVar4);\n        if ((iVar1 == 1) ||\n           ((((*(byte *)(uVar4 + 3) & 0x20) == 0 && (iVar1 != 3)) &&\n            ((iVar1 != 0 || (*(int *)(param_1 + 0x3c0) != 3)))))) {\n          uVar3 = *param_2;\n          uVar2 = (ulong)*param_3;\n        }\n        else {\n          if (*(long *)(uVar4 + 0x10) == 0) {\n            png_warning(param_1,\"Writing zero-length unknown chunk\");\n          }\n          png_write_chunk(param_1,uVar4,*(undefined8 *)(uVar4 + 8));\n          uVar3 = *param_2;\n          uVar2 = (ulong)*param_3;\n        }\n      }\n      uVar4 = uVar4 + 0x20;\n    } while (uVar4 < (long)(int)uVar2 * 0x20 + uVar3);\n  }\n  return;\n}\n\n", "FUN_00121d10": "\nvoid FUN_00121d10(long *param_1,long param_2)\n\n{\n  uint uVar1;\n  ushort *puVar2;\n  char cVar3;\n  ushort uVar4;\n  ushort uVar5;\n  uint uVar6;\n  undefined uVar7;\n  uint uVar8;\n  uint uVar9;\n  long lVar10;\n  uint uVar11;\n  long lVar12;\n  ushort uVar13;\n  uint uVar14;\n  int iVar15;\n  uint uVar16;\n  ulong uVar17;\n  uint uVar18;\n  uint uVar19;\n  undefined8 *puVar20;\n  uint uVar21;\n  undefined8 *puVar22;\n  ulong uVar23;\n  uint uVar24;\n  int iVar26;\n  ulong uVar27;\n  ulong uVar28;\n  uint uVar29;\n  long in_FS_OFFSET;\n  undefined8 local_448 [95];\n  char local_149;\n  undefined local_148 [16];\n  undefined local_138 [16];\n  undefined local_128 [16];\n  undefined local_118 [16];\n  undefined local_108 [16];\n  undefined local_f8 [16];\n  undefined local_e8 [16];\n  undefined local_d8 [16];\n  undefined local_c8 [16];\n  undefined local_b8 [16];\n  undefined local_a8 [16];\n  undefined local_98 [16];\n  undefined local_88 [16];\n  undefined local_78 [16];\n  undefined local_68 [16];\n  undefined local_58 [16];\n  long local_40;\n  ulong uVar25;\n  \n  lVar12 = 0x60;\n  uVar6 = *(uint *)((long)param_1 + 0x14);\n  uVar21 = *(uint *)((long)param_1 + 0x1c);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar8 = 0x100;\n  if (uVar21 < 0x101) {\n    uVar8 = uVar21;\n  }\n  uVar16 = uVar6 & 0x21;\n  local_148 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_138 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  puVar20 = local_448;\n  for (; lVar12 != 0; lVar12 = lVar12 + -1) {\n    *puVar20 = 0;\n    puVar20 = puVar20 + 1;\n  }\n  local_128 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  uVar14 = uVar6 >> 3 & 2;\n  local_118 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_108 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_f8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_e8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_d8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_c8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_b8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_a8 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_98 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_88 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_78 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_68 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  local_58 = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\n  puVar20 = (undefined8 *)*param_1;\n  if (uVar21 == 0) {\n    png_set_PLTE(*puVar20,puVar20[1],local_448,0);\n  }\n  else {\n    uVar24 = (uVar6 & 3) + 1;\n    uVar25 = (ulong)uVar24;\n    uVar21 = (uint)(uVar16 == 0x21);\n    uVar17 = (ulong)(uVar16 == 0x21);\n    lVar12 = 0;\n    if (uVar16 != 0x21) {\n      lVar12 = (ulong)(uVar6 & 3) * 2;\n    }\n    uVar1 = (uVar14 ^ 2) + uVar21;\n    uVar21 = uVar14 + uVar21;\n    uVar28 = 0;\n    uVar23 = 1;\n    uVar24 = uVar24 & 1;\n    uVar27 = 0;\n    puVar22 = local_448;\n    do {\n      iVar26 = (int)uVar27;\n      uVar9 = (uint)uVar25;\n      if ((uVar6 & 4) == 0) {\n        lVar10 = uVar27 + param_2;\n        if (uVar9 != 3) {\n          if (uVar9 != 4) {\n            if ((uVar9 == 2) &&\n               (cVar3 = *(char *)(lVar10 + (ulong)(uVar16 != 0x21)), local_148[uVar23 - 1] = cVar3,\n               cVar3 != -1)) {\n              uVar28 = uVar23 & 0xffffffff;\n            }\n            uVar7 = *(undefined *)(lVar10 + uVar17);\nLAB_0012200d:\n            *(undefined *)((long)puVar22 + 1) = uVar7;\n            *(undefined *)puVar22 = uVar7;\n            *(undefined *)((long)puVar22 + 2) = uVar7;\n            goto LAB_00121fc0;\n          }\n          cVar3 = *(char *)(lVar10 + (ulong)(uVar16 != 0x21) * 3);\n          local_148[uVar23 - 1] = cVar3;\n          if (cVar3 != -1) {\n            uVar28 = uVar23 & 0xffffffff;\n          }\n        }\n        *(undefined *)((long)puVar22 + 2) = *(undefined *)(lVar10 + (int)uVar1);\n        *(undefined *)((long)puVar22 + 1) = *(undefined *)(lVar10 + uVar17 + 1);\n        *(undefined *)puVar22 = *(undefined *)(lVar10 + (int)uVar21);\n      }\n      else {\n        puVar2 = (ushort *)(param_2 + uVar27 * 2);\n        if (uVar24 == 0) {\n          uVar4 = *(ushort *)((long)puVar2 + lVar12);\n          uVar19 = (uint)uVar4;\n          uVar18 = (uint)uVar4;\n          uVar11 = ((uint)uVar4 * 0x100 - uVar18) + 0x807f;\n          cVar3 = (char)(uVar11 >> 0x10);\n          if ((byte)(cVar3 - 1U) < 0xfe) {\n            local_148[uVar23 - 1] = cVar3;\n            uVar29 = (int)((uVar4 >> 1) + 0x7f7f8080) / (int)uVar18;\nLAB_00122061:\n            uVar28 = uVar23 & 0xffffffff;\n          }\n          else {\n            local_148[uVar23 - 1] = cVar3;\n            uVar29 = uVar24;\n            if (uVar11 >> 0x10 != 0xff) goto LAB_00122061;\n          }\n          if (uVar9 < 3) {\n            uVar5 = puVar2[uVar17];\n            uVar7 = 0xff;\n            uVar9 = 0x7f;\n            if (0x7e < uVar5) {\n              uVar9 = (uint)uVar5;\n            }\n            if ((uVar9 < uVar18) && (uVar7 = 0, uVar5 != 0)) {\n              uVar7 = FUN_00121bd0(uVar5,uVar4,uVar29);\n            }\n            goto LAB_0012200d;\n          }\n          uVar5 = puVar2[uVar1];\n          uVar7 = 0xff;\n          uVar13 = 0x7f;\n          if (0x7e < uVar5) {\n            uVar13 = uVar5;\n          }\n          if ((uVar13 < uVar4) && (uVar7 = 0, uVar5 != 0)) {\n            uVar19 = (uint)uVar4;\n            uVar7 = FUN_00121bd0(uVar5,uVar4,uVar29);\n          }\n          *(undefined *)((long)puVar22 + 2) = uVar7;\n          uVar4 = puVar2[uVar17 + 1];\n          uVar7 = 0xff;\n          uVar9 = 0x7f;\n          if (0x7e < uVar4) {\n            uVar9 = (uint)uVar4;\n          }\n          if ((uVar9 < uVar19) && (uVar7 = 0, uVar4 != 0)) {\n            uVar7 = FUN_00121bd0();\n          }\n          *(undefined *)((long)puVar22 + 1) = uVar7;\n          uVar4 = puVar2[uVar21];\n          uVar7 = 0xff;\n          uVar9 = 0x7f;\n          if (0x7e < uVar4) {\n            uVar9 = (uint)uVar4;\n          }\n          if ((uVar9 < uVar19) && (uVar7 = 0, uVar4 != 0)) {\n            uVar7 = FUN_00121bd0();\n          }\n          *(undefined *)puVar22 = uVar7;\n        }\n        else if (uVar9 < 3) {\n          uVar9 = (uint)*puVar2 * 0x100 - (uint)*puVar2;\n          iVar15 = (int)uVar9 >> 0xf;\n          uVar7 = (undefined)\n                  (((int)((uVar9 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[iVar15]) >> 0xc) +\n                   (uint)(ushort)(&DAT_00129dc0)[iVar15] >> 8);\n          *(undefined *)((long)puVar22 + 1) = uVar7;\n          *(undefined *)puVar22 = uVar7;\n          *(undefined *)((long)puVar22 + 2) = uVar7;\n        }\n        else {\n          uVar9 = (uint)puVar2[(int)(uVar14 ^ 2)] * 0x100 - (uint)puVar2[(int)(uVar14 ^ 2)];\n          iVar15 = (int)uVar9 >> 0xf;\n          *(char *)((long)puVar22 + 2) =\n               (char)(((int)((uVar9 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[iVar15]) >> 0xc) +\n                      (uint)(ushort)(&DAT_00129dc0)[iVar15] >> 8);\n          uVar9 = (uint)puVar2[1] * 0x100 - (uint)puVar2[1];\n          iVar15 = (int)uVar9 >> 0xf;\n          *(char *)((long)puVar22 + 1) =\n               (char)(((int)((uVar9 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[iVar15]) >> 0xc) +\n                      (uint)(ushort)(&DAT_00129dc0)[iVar15] >> 8);\n          uVar9 = (uint)puVar2[(int)uVar14] * 0x100 - (uint)puVar2[(int)uVar14];\n          iVar15 = (int)uVar9 >> 0xf;\n          *(char *)puVar22 =\n               (char)(((int)((uVar9 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[iVar15]) >> 0xc) +\n                      (uint)(ushort)(&DAT_00129dc0)[iVar15] >> 8);\n        }\n      }\nLAB_00121fc0:\n      uVar23 = uVar23 + 1;\n      uVar27 = (ulong)(uint)(iVar26 + (int)uVar25);\n      puVar22 = (undefined8 *)((long)puVar22 + 3);\n    } while ((ulong)(uVar8 - 1) + 2 != uVar23);\n    png_set_PLTE(*puVar20,puVar20[1],local_448,uVar8);\n    if ((int)uVar28 != 0) {\n      png_set_tRNS(*(undefined8 *)*param_1,((undefined8 *)*param_1)[1],local_148,uVar28,0);\n    }\n  }\n  *(uint *)((long)param_1 + 0x1c) = uVar8;\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_convert_from_time_t": "\nvoid png_convert_from_time_t(undefined8 *param_1,time_t param_2)\n\n{\n  tm *ptVar1;\n  time_t local_10;\n  \n  local_10 = param_2;\n  ptVar1 = gmtime(&local_10);\n  if (ptVar1 != (tm *)0x0) {\n    png_convert_from_struct_tm(param_1,ptVar1);\n    return;\n  }\n  *param_1 = 0;\n  return;\n}\n\n", "png_write_rows": "\nvoid png_write_rows(long param_1,undefined8 *param_2,int param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  \n  if ((param_1 != 0) && (param_3 != 0)) {\n    puVar1 = param_2 + (ulong)(param_3 - 1) + 1;\n    do {\n      uVar2 = *param_2;\n      param_2 = param_2 + 1;\n      png_write_row(param_1,uVar2);\n    } while (param_2 != puVar1);\n    return;\n  }\n  return;\n}\n\n", "FUN_001230d0": "\nundefined8 FUN_001230d0(long *param_1)\n\n{\n  ushort uVar1;\n  undefined8 *puVar2;\n  undefined uVar3;\n  uint uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ushort *puVar8;\n  ulong uVar9;\n  ushort *puVar10;\n  undefined8 uVar11;\n  long lVar12;\n  uint uVar13;\n  uint uVar14;\n  ulong uVar15;\n  ushort *puVar16;\n  ushort *local_58;\n  int local_4c;\n  \n  puVar2 = (undefined8 *)*param_1;\n  uVar6 = param_1[7];\n  local_4c = *(int *)(puVar2 + 2);\n  uVar11 = *(undefined8 *)*puVar2;\n  uVar4 = *(uint *)((long)puVar2 + 0x14);\n  local_58 = (ushort *)param_1[5];\n  uVar13 = -(uint)((uVar4 & 2) == 0) & 0xfffffffe;\n  uVar14 = uVar13 + 3;\n  if ((uVar4 & 1) == 0) {\n    uVar5 = (ulong)(uVar14 * *(int *)((long)puVar2 + 0xc));\n    for (; local_4c != 0; local_4c = local_4c + -1) {\n      if (uVar6 < uVar6 + uVar5) {\n        uVar15 = 0;\n        do {\n          uVar4 = (uint)local_58[uVar15] * 0x100 - (uint)local_58[uVar15];\n          uVar13 = uVar4 >> 0xf;\n          *(char *)(uVar6 + uVar15) =\n               (char)(((uVar4 & 0x7fff) * (uint)(byte)(&DAT_00129bc0)[uVar13] >> 0xc) +\n                      (uint)(ushort)(&DAT_00129dc0)[uVar13] >> 8);\n          uVar15 = uVar15 + 1;\n        } while (uVar5 != uVar15);\n      }\n      png_write_row(uVar11,uVar6);\n      local_58 = (ushort *)((long)local_58 + (param_1[6] & 0xfffeU));\n    }\n  }\n  else {\n    lVar12 = (long)(int)uVar14;\n    if ((uVar4 & 0x20) != 0) {\n      local_58 = local_58 + 1;\n      uVar6 = uVar6 + 1;\n      lVar12 = -1;\n    }\n    uVar5 = *(int *)((long)puVar2 + 0xc) * (uVar13 + 4) + uVar6;\n    if (local_4c != 0) {\n      do {\n        if (uVar6 < uVar5) {\n          uVar11 = 0x7f;\n          puVar10 = local_58 + (ulong)(uVar13 + 2) + 1;\n          uVar15 = uVar6;\n          puVar16 = local_58;\n          do {\n            uVar1 = puVar16[lVar12];\n            uVar7 = (ulong)uVar1;\n            *(char *)(uVar15 + lVar12) =\n                 (char)(((uint)uVar1 * 0x100 - (uint)uVar1) + 0x807f >> 0x10);\n            puVar8 = puVar16;\n            uVar9 = uVar15;\n            do {\n              uVar1 = *puVar8;\n              puVar8 = puVar8 + 1;\n              uVar9 = uVar9 + 1;\n              uVar3 = 0xff;\n              uVar4 = (uint)uVar11;\n              if (0x7e < uVar1) {\n                uVar4 = (uint)uVar1;\n              }\n              if ((uVar4 < (uint)uVar7) && (uVar3 = 0, uVar1 != 0)) {\n                uVar3 = FUN_00121bd0();\n              }\n              *(undefined *)(uVar9 - 1) = uVar3;\n            } while (puVar8 != puVar10);\n            puVar16 = puVar16 + (ulong)uVar14 + 1;\n            uVar15 = uVar15 + (ulong)uVar14 + 1;\n            puVar10 = puVar10 + (ulong)(uVar13 + 2) + 2;\n          } while (uVar15 < uVar5);\n        }\n        png_write_row();\n        local_58 = (ushort *)((long)local_58 + (param_1[6] & 0xfffeU));\n        local_4c = local_4c + -1;\n      } while (local_4c != 0);\n    }\n  }\n  return 1;\n}\n\n", "FUN_00123340": "\nundefined8 FUN_00123340(long *param_1)\n\n{\n  ulong uVar1;\n  ushort uVar2;\n  uint uVar3;\n  undefined8 *puVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  int iVar8;\n  ushort uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  ulong uVar13;\n  long lVar14;\n  long lVar15;\n  int local_48;\n  \n  puVar4 = (undefined8 *)*param_1;\n  lVar15 = param_1[5];\n  uVar12 = param_1[7];\n  uVar3 = *(uint *)((long)puVar4 + 0x14);\n  local_48 = *(int *)(puVar4 + 2);\n  uVar5 = *(undefined8 *)*puVar4;\n  uVar7 = -(uint)((uVar3 & 2) == 0) & 0xfffffffe;\n  if ((uVar3 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(uVar5,\"png_write_image: internal call error\");\n  }\n  if ((uVar3 & 0x20) == 0) {\n    lVar11 = (long)(int)(uVar7 + 3);\n  }\n  else {\n    lVar15 = lVar15 + 2;\n    uVar12 = uVar12 + 2;\n    lVar11 = -1;\n  }\n  uVar1 = uVar12 + (ulong)((uVar7 + 4) * *(int *)((long)puVar4 + 0xc)) * 2;\n  if (local_48 != 0) {\n    do {\n      if (uVar12 < uVar1) {\n        lVar6 = ((ulong)(uVar7 + 3) + 1) * 2;\n        uVar13 = uVar12;\n        lVar14 = lVar15;\n        do {\n          uVar2 = *(ushort *)(lVar14 + lVar11 * 2);\n          iVar8 = 0;\n          *(ushort *)(uVar13 + lVar11 * 2) = uVar2;\n          if ((ushort)(uVar2 - 1) < 0xfffe) {\n            iVar8 = (int)((uVar2 >> 1) + 0x7fff8000) / (int)(uint)uVar2;\n          }\n          uVar10 = 0;\n          while( true ) {\n            uVar9 = *(ushort *)(lVar14 + uVar10 * 2);\n            if (uVar9 < uVar2) {\n              if ((uVar9 != 0) && (uVar2 != 0xffff)) {\n                uVar9 = (ushort)((uint)uVar9 * iVar8 * 2 + 0x8000 >> 0x10);\n              }\n              *(ushort *)(uVar13 + uVar10 * 2) = uVar9;\n            }\n            else {\n              *(undefined2 *)(uVar13 + uVar10 * 2) = 0xffff;\n            }\n            if (uVar10 == uVar7 + 2) break;\n            uVar10 = uVar10 + 1;\n          }\n          uVar13 = uVar13 + lVar6;\n          lVar14 = lVar14 + lVar6;\n        } while (uVar13 < uVar1);\n      }\n      png_write_row(uVar5);\n      lVar15 = lVar15 + (param_1[6] & 0xfffeU);\n      local_48 = local_48 + -1;\n    } while (local_48 != 0);\n  }\n  return 1;\n}\n\n", "png_set_flush": "\nvoid png_set_flush(long param_1,int param_2)\n\n{\n  if (param_1 != 0) {\n    if (param_2 < 0) {\n      param_2 = 0;\n    }\n    *(int *)(param_1 + 0x298) = param_2;\n  }\n  return;\n}\n\n", "png_write_flush": "\nvoid png_write_flush(long param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (*(uint *)(param_1 + 0x200) <= *(uint *)(param_1 + 0x214)) {\n    return;\n  }\n  FUN_00125ef0(param_1,0,0,2);\n  *(undefined4 *)(param_1 + 0x29c) = 0;\n  FUN_00121ac0(param_1);\n  return;\n}\n\n", "FUN_00123650": "\nundefined8 FUN_00123650(long **param_1)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  long local_20;\n  long local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_20 = png_create_write_struct(&DAT_0012902e,param_1,FUN_0010b760,FUN_0010b7e0);\n  if (local_20 != 0) {\n    local_18 = png_create_info_struct(local_20);\n    if (local_18 != 0) {\n      plVar1 = (long *)png_malloc_warn(local_20,0x30);\n      if (plVar1 != (long *)0x0) {\n        *param_1 = plVar1;\n        *(undefined (*) [16])(plVar1 + 4) = (undefined  [16])0x0;\n        *plVar1 = local_20;\n        *(byte *)(plVar1 + 5) = *(byte *)(plVar1 + 5) | 1;\n        plVar1[1] = local_18;\n        *(undefined (*) [16])(plVar1 + 2) = (undefined  [16])0x0;\n        uVar2 = 1;\n        goto LAB_001236e3;\n      }\n      png_destroy_info_struct(local_20,&local_18);\n    }\n    png_destroy_write_struct(&local_20,0);\n  }\n  uVar2 = FUN_0010ac60(param_1,\"png_image_write_: out of memory\");\nLAB_001236e3:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_set_filter_heuristics": "\nvoid png_set_filter_heuristics(void)\n\n{\n  return;\n}\n\n", "png_set_filter_heuristics_fixed": "\nvoid png_set_filter_heuristics_fixed(void)\n\n{\n  return;\n}\n\n", "FUN_001239a0": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined4 FUN_001239a0(long **param_1)\n\n{\n  uint uVar1;\n  long *plVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  bool bVar5;\n  int iVar6;\n  uint uVar7;\n  long *plVar8;\n  uint uVar9;\n  ulong uVar10;\n  long *plVar11;\n  char cVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  undefined8 uVar16;\n  uint local_3c;\n  \n  plVar2 = *param_1;\n  uVar15 = *(uint *)((long)plVar2 + 0x14);\n  uVar3 = *(undefined8 *)*plVar2;\n  uVar4 = ((undefined8 *)*plVar2)[1];\n  uVar13 = uVar15 & 8;\n  if (uVar13 == 0) {\n    local_3c = uVar15 & 1;\n    if ((uVar15 & 4) == 0) {\n      uVar9 = 0;\n    }\n    else {\n      uVar14 = 1;\n      uVar9 = 1;\n      if (*(int *)(param_1 + 4) == 0) {\n        bVar5 = true;\n        goto LAB_00123a13;\n      }\n    }\n  }\n  else {\n    local_3c = 0;\n    uVar9 = 0;\n  }\n  uVar14 = uVar9;\n  bVar5 = false;\nLAB_00123a13:\n  uVar16 = 0x123a1d;\n  png_set_benign_errors(uVar3,0);\n  if ((*(uint *)((long)plVar2 + 0x14) & 8) == 0) {\n    uVar9 = (*(uint *)((long)plVar2 + 0x14) & 3) + 1;\n    uVar7 = (uint)(0x7fffffff / (ulong)uVar9);\n  }\n  else {\n    uVar7 = 0x7fffffff;\n    uVar9 = 1;\n  }\n  uVar1 = *(uint *)((long)plVar2 + 0xc);\n  if (uVar7 < uVar1) {\n                    /* WARNING: Subroutine does not return */\n    png_error(*(undefined8 *)*plVar2,\"image row stride too large\");\n  }\n  uVar9 = uVar9 * uVar1;\n  uVar7 = *(uint *)(param_1 + 2);\n  if (*(uint *)(param_1 + 2) == 0) {\n    *(uint *)(param_1 + 2) = uVar9;\n    uVar7 = uVar9;\n  }\n  if ((uVar7 ^ (int)uVar7 >> 0x1f) - ((int)uVar7 >> 0x1f) < uVar9) {\n                    /* WARNING: Subroutine does not return */\n    png_error(*(undefined8 *)*plVar2,\"supplied row stride too small\");\n  }\n  uVar10 = (ulong)*(uint *)(plVar2 + 2);\n  if ((int)(uVar9 * uVar10 >> 0x20) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(*(undefined8 *)*plVar2,\"memory image too large\");\n  }\n  if ((uVar15 & 8) == 0) {\n    png_set_IHDR(uVar3,uVar4,uVar1,uVar10,(-(uint)!bVar5 & 0xfffffff8) + 0x10,\n                 uVar15 * 4 & 4 | uVar15 & 2,0,0,0,uVar16);\n  }\n  else {\n    if ((param_1[3] == (long *)0x0) || (uVar9 = *(uint *)((long)plVar2 + 0x1c), uVar9 == 0)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(*(undefined8 *)*plVar2,\"no color-map for color-mapped image\");\n    }\n    cVar12 = '\\b';\n    if ((uVar9 < 0x11) && (cVar12 = '\\x04', uVar9 < 5)) {\n      cVar12 = (2 < uVar9) + '\\x01';\n    }\n    png_set_IHDR(uVar3,uVar4,uVar1,uVar10,cVar12,3,0,0,0,uVar16);\n    FUN_00121d10(*param_1,param_1[3]);\n  }\n  if (bVar5) {\n    png_set_gAMA_fixed(uVar3,uVar4,100000);\n    if ((*(byte *)(plVar2 + 3) & 1) == 0) {\n      png_set_cHRM_fixed(uVar3,uVar4,0x7a26,0x8084,64000,33000,30000,60000,15000,6000);\n    }\n    png_write_info(uVar3,uVar4);\n    png_set_swap(uVar3);\n  }\n  else {\n    if ((*(byte *)(plVar2 + 3) & 1) == 0) {\n      png_set_sRGB(uVar3,uVar4,0);\n    }\n    else {\n      png_set_gAMA_fixed(uVar3,uVar4,0xb18f);\n    }\n    png_write_info(uVar3,uVar4);\n  }\n  if ((uVar15 & 0x10) != 0) {\n    if ((uVar13 == 0) && ((uVar15 & 2) != 0)) {\n      png_set_bgr(uVar3);\n    }\n    uVar15 = uVar15 & 0xffffffef;\n  }\n  if ((uVar15 & 0x20) != 0) {\n    if ((uVar13 == 0) && ((uVar15 & 1) != 0)) {\n      png_set_swap_alpha(uVar3);\n    }\n    uVar15 = uVar15 & 0xffffffdf;\n  }\n  if ((uVar13 != 0) && (*(uint *)((long)plVar2 + 0x1c) < 0x11)) {\n    png_set_packing(uVar3);\n  }\n  if ((uVar15 & 0xfffffff0) != 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(uVar3,\"png_write_image: unsupported transformation\");\n  }\n  plVar11 = param_1[1];\n  plVar8 = (long *)((long)(long *)(long)*(int *)(param_1 + 2) * 2);\n  if (uVar14 == 0) {\n    plVar8 = (long *)(long)*(int *)(param_1 + 2);\n  }\n  if ((long)plVar8 < 0) {\n    plVar11 = (long *)((long)plVar11 - (ulong)(*(int *)(plVar2 + 2) - 1) * (long)plVar8);\n  }\n  param_1[5] = plVar11;\n  param_1[6] = plVar8;\n  if ((*(byte *)(plVar2 + 3) & 2) != 0) {\n    png_set_filter(uVar3,0,0);\n    png_set_compression_level(uVar3,3);\n  }\n  if (((local_3c & uVar14) == 0) && ((uVar13 != 0 || (*(int *)(param_1 + 4) == 0)))) {\n    plVar11 = param_1[6];\n    iVar6 = *(int *)(plVar2 + 2);\n    plVar2 = param_1[5];\n    for (; iVar6 != 0; iVar6 = iVar6 + -1) {\n      png_write_row(uVar3,plVar2);\n      plVar2 = (long *)((long)plVar2 + (long)plVar11);\n    }\n  }\n  else {\n    uVar16 = png_get_rowbytes(uVar3,uVar4);\n    plVar11 = (long *)png_malloc(uVar3,uVar16);\n    param_1[7] = plVar11;\n    if (bVar5) {\n      iVar6 = FUN_0010b820(plVar2,FUN_00123340,param_1);\n    }\n    else {\n      iVar6 = FUN_0010b820(plVar2,FUN_001230d0,param_1);\n    }\n    param_1[7] = (long *)0x0;\n    png_free(uVar3,plVar11);\n    if (iVar6 == 0) {\n      return 0;\n    }\n  }\n  png_write_end(uVar3,uVar4);\n  return 1;\n}\n\n", "FUN_00123e60": "\nvoid FUN_00123e60(undefined8 *param_1)\n\n{\n  png_set_write_fn(**(undefined8 **)*param_1,param_1,FUN_00121b70,FUN_00121b60);\n  FUN_001239a0(param_1);\n  return;\n}\n\n", "png_set_compression_mem_level": "\nvoid png_set_compression_mem_level(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x1c8) = param_2;\n  }\n  return;\n}\n\n", "png_set_compression_strategy": "\nvoid png_set_compression_strategy(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 1;\n    *(undefined4 *)(param_1 + 0x1cc) = param_2;\n  }\n  return;\n}\n\n", "png_set_compression_window_bits": "\nvoid png_set_compression_window_bits(long param_1,int param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 < 0x10) {\n    if (7 < param_2) {\n      *(int *)(param_1 + 0x1c4) = param_2;\n      return;\n    }\n    png_warning(param_1,\"Only compression windows >= 256 supported by PNG\");\n    *(undefined4 *)(param_1 + 0x1c4) = 8;\n    return;\n  }\n  png_warning(param_1,\"Only compression windows <= 32k supported by PNG\");\n  *(undefined4 *)(param_1 + 0x1c4) = 0xf;\n  return;\n}\n\n", "png_set_compression_method": "\nvoid png_set_compression_method(long param_1,int param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 8) {\n    *(undefined4 *)(param_1 + 0x1c0) = 8;\n    return;\n  }\n  png_warning(param_1,\"Only compression method 8 is supported by PNG\");\n  *(int *)(param_1 + 0x1c0) = param_2;\n  return;\n}\n\n", "png_set_text_compression_level": "\nvoid png_set_text_compression_level(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x1d0) = param_2;\n  }\n  return;\n}\n\n", "png_set_text_compression_mem_level": "\nvoid png_set_text_compression_mem_level(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x1dc) = param_2;\n  }\n  return;\n}\n\n", "png_set_text_compression_strategy": "\nvoid png_set_text_compression_strategy(long param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined4 *)(param_1 + 0x1e0) = param_2;\n  }\n  return;\n}\n\n", "png_set_text_compression_window_bits": "\nvoid png_set_text_compression_window_bits(long param_1,int param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 < 0x10) {\n    if (7 < param_2) {\n      *(int *)(param_1 + 0x1d8) = param_2;\n      return;\n    }\n    png_warning(param_1,\"Only compression windows >= 256 supported by PNG\");\n    *(undefined4 *)(param_1 + 0x1d8) = 8;\n    return;\n  }\n  png_warning(param_1,\"Only compression windows <= 32k supported by PNG\");\n  *(undefined4 *)(param_1 + 0x1d8) = 0xf;\n  return;\n}\n\n", "png_set_text_compression_method": "\nvoid png_set_text_compression_method(long param_1,int param_2)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 == 8) {\n    *(undefined4 *)(param_1 + 0x1d4) = 8;\n    return;\n  }\n  png_warning(param_1,\"Only compression method 8 is supported by PNG\");\n  *(int *)(param_1 + 0x1d4) = param_2;\n  return;\n}\n\n", "png_set_write_status_fn": "\nvoid png_set_write_status_fn(long param_1,undefined8 param_2)\n\n{\n  if (param_1 != 0) {\n    *(undefined8 *)(param_1 + 0x308) = param_2;\n  }\n  return;\n}\n\n", "png_set_write_user_transform_fn": "\nvoid png_set_write_user_transform_fn(long param_1,undefined8 param_2)\n\n{\n  if (param_1 != 0) {\n    *(uint *)(param_1 + 0x134) = *(uint *)(param_1 + 0x134) | 0x100000;\n    *(undefined8 *)(param_1 + 0x118) = param_2;\n  }\n  return;\n}\n\n", "png_write_png": "\nvoid png_write_png(long param_1,long param_2,ulong param_3)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_2 != 0) {\n    if ((*(byte *)(param_2 + 9) & 0x80) != 0) {\n      png_write_info();\n      if ((param_3 & 0x20) != 0) {\n        png_set_invert_mono(param_1);\n      }\n      if (((param_3 & 0x40) != 0) && ((*(byte *)(param_2 + 8) & 2) != 0)) {\n        png_set_shift(param_1,param_2 + 0xb0);\n      }\n      if ((param_3 & 4) != 0) {\n        png_set_packing(param_1);\n      }\n      if ((param_3 & 0x100) != 0) {\n        png_set_swap_alpha(param_1);\n      }\n      if ((param_3 & 0x1800) != 0) {\n        if ((param_3 & 0x1000) == 0) {\n          if ((param_3 & 0x800) != 0) {\n            png_set_filler(param_1,0,0);\n          }\n        }\n        else {\n          if ((param_3 & 0x800) != 0) {\n            FUN_0010b490(param_1,\"PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported\");\n          }\n          png_set_filler(param_1,0,1);\n        }\n      }\n      if ((param_3 & 0x80) != 0) {\n        png_set_bgr(param_1);\n      }\n      if ((param_3 & 0x200) != 0) {\n        png_set_swap(param_1);\n      }\n      if ((param_3 & 8) != 0) {\n        png_set_packswap(param_1);\n      }\n      if ((param_3 & 0x400) != 0) {\n        png_set_invert_alpha(param_1);\n      }\n      png_write_image(param_1,*(undefined8 *)(param_2 + 0x160));\n      png_write_end(param_1,param_2);\n      return;\n    }\n    FUN_0010b490(param_1,\"no rows for png_write_image to write\");\n    return;\n  }\n  return;\n}\n\n", "png_image_write_to_memory": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong png_image_write_to_memory\n                (long param_1,long param_2,ulong *param_3,undefined4 param_4,long param_5,\n                undefined4 param_6,undefined8 param_7)\n\n{\n  int iVar1;\n  uint uVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  long local_98;\n  long local_90;\n  undefined local_88 [16];\n  undefined local_78 [16];\n  undefined local_68 [16];\n  long local_58;\n  ulong local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    if (*(int *)(param_1 + 8) != 1) {\n      uVar3 = FUN_0010ac60(param_1,\"png_image_write_to_memory: incorrect PNG_IMAGE_VERSION\");\n      goto LAB_001242c5;\n    }\n    if ((param_3 == (ulong *)0x0) || (param_5 == 0)) {\n      uVar3 = FUN_0010ac60(param_1,\"png_image_write_to_memory: invalid argument\");\n      goto LAB_001242c5;\n    }\n    if (param_2 == 0) {\n      *param_3 = 0;\n    }\n    iVar1 = FUN_00123650();\n    if (iVar1 != 0) {\n      local_50 = *param_3;\n      local_68 = (undefined  [16])0x0;\n      local_88 = CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20,0),param_6);\n      local_88 = CONCAT88(param_7,local_88._0_8_);\n      local_78 = CONCAT124(SUB1612((undefined  [16])0x0 >> 0x20,0),param_4);\n      local_48 = 0;\n      local_98 = param_1;\n      local_90 = param_5;\n      local_58 = param_2;\n      uVar2 = FUN_0010b820(0,param_1,FUN_00123e60,&local_98);\n      png_image_free(param_1);\n      uVar3 = (ulong)uVar2;\n      if (uVar2 != 0) {\n        if ((param_2 != 0) && (*param_3 < local_48)) {\n          uVar3 = 0;\n        }\n        *param_3 = local_48;\n      }\n      goto LAB_001242c5;\n    }\n  }\n  uVar3 = 0;\nLAB_001242c5:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_image_write_to_file": "\nulong png_image_write_to_file\n                (long param_1,char *param_2,undefined4 param_3,long param_4,undefined4 param_5,\n                undefined8 param_6)\n\n{\n  uint uVar1;\n  int iVar2;\n  ulong uVar3;\n  FILE *__stream;\n  int *piVar4;\n  char *pcVar5;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  if (*(int *)(param_1 + 8) == 1) {\n    if ((param_2 == (char *)0x0) || (param_4 == 0)) {\n      pcVar5 = \"png_image_write_to_file: invalid argument\";\n    }\n    else {\n      __stream = fopen(param_2,\"wb\");\n      if (__stream == (FILE *)0x0) {\n        piVar4 = __errno_location();\n        pcVar5 = strerror(*piVar4);\n      }\n      else {\n        uVar1 = png_image_write_to_stdio(param_1,__stream,param_3,param_4,param_5,param_6);\n        if (uVar1 == 0) {\n          fclose(__stream);\n          remove(param_2);\n          return (ulong)uVar1;\n        }\n        iVar2 = fflush(__stream);\n        if ((iVar2 == 0) && (iVar2 = ferror(__stream), iVar2 == 0)) {\n          iVar2 = fclose(__stream);\n          if (iVar2 == 0) {\n            return 1;\n          }\n          piVar4 = __errno_location();\n          iVar2 = *piVar4;\n        }\n        else {\n          piVar4 = __errno_location();\n          iVar2 = *piVar4;\n          fclose(__stream);\n        }\n        remove(param_2);\n        pcVar5 = strerror(iVar2);\n      }\n    }\n  }\n  else {\n    pcVar5 = \"png_image_write_to_file: incorrect PNG_IMAGE_VERSION\";\n  }\n  uVar3 = FUN_0010ac60(param_1,pcVar5);\n  return uVar3;\n}\n\n", "FUN_001246c0": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid FUN_001246c0(long param_1,uint *param_2)\n\n{\n  char cVar1;\n  undefined uVar2;\n  byte bVar3;\n  long lVar4;\n  ulong uVar5;\n  byte bVar6;\n  uint uVar7;\n  ulong uVar8;\n  undefined *puVar9;\n  long lVar10;\n  long lVar11;\n  undefined *puVar12;\n  undefined uVar13;\n  int iVar14;\n  int iVar15;\n  uint uVar16;\n  byte *pbVar18;\n  int iVar19;\n  uint uVar20;\n  uint uVar21;\n  byte *pbVar22;\n  uint uVar23;\n  int iVar24;\n  long in_FS_OFFSET;\n  bool bVar25;\n  int local_58 [4];\n  uint local_48 [6];\n  long local_30;\n  uint uVar17;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    uVar7 = *(uint *)(param_1 + 0x134);\n    if (((uVar7 & 0x100000) != 0) && (*(code **)(param_1 + 0x118) != (code *)0x0)) {\n      (**(code **)(param_1 + 0x118))(param_1,param_2,*(long *)(param_1 + 0x228) + 1);\n      uVar7 = *(uint *)(param_1 + 0x134);\n    }\n    if ((uVar7 & 0x8000) != 0) {\n      FUN_001214d0(param_2,*(long *)(param_1 + 0x228) + 1,(*(uint *)(param_1 + 0x130) >> 7 ^ 1) & 1)\n      ;\n      uVar7 = *(uint *)(param_1 + 0x134);\n    }\n    if ((uVar7 & 0x10000) != 0) {\n      FUN_00121460();\n      uVar7 = *(uint *)(param_1 + 0x134);\n    }\n    if (((uVar7 & 4) != 0) && ((param_2[4] & 0xffff00) == 0x10800)) {\n      lVar4 = *(long *)(param_1 + 0x228);\n      cVar1 = *(char *)(param_1 + 0x268);\n      uVar23 = *param_2;\n      uVar8 = (ulong)uVar23;\n      pbVar18 = (byte *)(lVar4 + 1);\n      if (cVar1 == '\\x02') {\n        if (uVar23 != 0) {\n          iVar24 = 6;\n          uVar7 = 0;\n          pbVar22 = pbVar18;\n          do {\n            uVar7 = uVar7 | (*pbVar22 & 3) << ((byte)iVar24 & 0x1f);\n            if (iVar24 == 0) {\n              *pbVar18 = (byte)uVar7;\n              iVar24 = 6;\n              pbVar18 = pbVar18 + 1;\n              uVar7 = 0;\n            }\n            else {\n              iVar24 = iVar24 + -2;\n            }\n            bVar6 = (byte)uVar7;\n            pbVar22 = pbVar22 + 1;\n          } while (pbVar22 != (byte *)(lVar4 + 2 + (ulong)(uVar23 - 1)));\n          if (iVar24 != 6) {\nLAB_00124f65:\n            *pbVar18 = bVar6;\n          }\nLAB_00124f68:\n          uVar7 = *(uint *)(param_1 + 0x134);\n          uVar8 = (ulong)*param_2;\n        }\n      }\n      else if (cVar1 == '\\x04') {\n        if (uVar23 != 0) {\n          iVar24 = 4;\n          uVar7 = 0;\n          pbVar22 = pbVar18;\n          do {\n            uVar7 = uVar7 | (*pbVar22 & 0xf) << ((byte)iVar24 & 0x1f);\n            if (iVar24 == 0) {\n              *pbVar18 = (byte)uVar7;\n              iVar24 = 4;\n              pbVar18 = pbVar18 + 1;\n              uVar7 = 0;\n            }\n            else {\n              iVar24 = iVar24 + -4;\n            }\n            bVar6 = (byte)uVar7;\n            pbVar22 = pbVar22 + 1;\n          } while ((byte *)(lVar4 + 2 + (ulong)(uVar23 - 1)) != pbVar22);\n          if (iVar24 != 4) goto LAB_00124f65;\n          goto LAB_00124f68;\n        }\n      }\n      else if ((cVar1 == '\\x01') && (uVar23 != 0)) {\n        uVar21 = 0x80;\n        uVar7 = 0;\n        pbVar22 = pbVar18;\n        do {\n          if (*pbVar18 != 0) {\n            uVar7 = uVar7 | uVar21;\n          }\n          pbVar18 = pbVar18 + 1;\n          if (uVar21 < 2) {\n            *pbVar22 = (byte)uVar7;\n            uVar21 = 0x80;\n            pbVar22 = pbVar22 + 1;\n            uVar7 = 0;\n          }\n          else {\n            uVar21 = (int)uVar21 >> 1;\n          }\n        } while (pbVar18 != (byte *)(lVar4 + 2 + (ulong)(uVar23 - 1)));\n        if (uVar21 == 0x80) goto LAB_00124f68;\n        *pbVar22 = (byte)uVar7;\n        uVar7 = *(uint *)(param_1 + 0x134);\n        uVar8 = (ulong)*param_2;\n      }\n      *(char *)((long)param_2 + 0x11) = cVar1;\n      bVar6 = cVar1 * *(char *)((long)param_2 + 0x12);\n      *(byte *)((long)param_2 + 0x13) = bVar6;\n      if (bVar6 < 8) {\n        uVar8 = bVar6 * uVar8 + 7 >> 3;\n      }\n      else {\n        uVar8 = (bVar6 >> 3) * uVar8;\n      }\n      *(ulong *)(param_2 + 2) = uVar8;\n    }\n    if ((uVar7 & 0x10) != 0) {\n      FUN_00121420(param_2);\n      uVar7 = *(uint *)(param_1 + 0x134);\n    }\n    if ((uVar7 & 8) == 0) {\nLAB_0012472f:\n      if ((uVar7 & 0x20000) == 0) goto LAB_0012473b;\n      lVar4 = *(long *)(param_1 + 0x228);\n      puVar12 = (undefined *)(lVar4 + 1);\n      if (*(char *)(param_2 + 4) == '\\x06') {\n        uVar23 = *param_2;\n        if (*(char *)((long)param_2 + 0x11) == '\\b') {\n          if (uVar23 != 0) {\n            do {\n              uVar13 = *puVar12;\n              puVar9 = puVar12 + 4;\n              *puVar12 = puVar12[1];\n              puVar12[1] = puVar12[2];\n              uVar2 = puVar12[3];\n              puVar12[3] = uVar13;\n              puVar12[2] = uVar2;\n              puVar12 = puVar9;\n            } while (puVar9 != (undefined *)(lVar4 + 5 + (ulong)(uVar23 - 1) * 4));\n            goto LAB_001248e6;\n          }\n          goto joined_r0x0012474a;\n        }\n        if (uVar23 == 0) goto joined_r0x0012474a;\n        do {\n          uVar13 = *puVar12;\n          puVar9 = puVar12 + 8;\n          uVar2 = puVar12[1];\n          *puVar12 = puVar12[2];\n          puVar12[1] = puVar12[3];\n          puVar12[2] = puVar12[4];\n          puVar12[3] = puVar12[5];\n          puVar12[4] = puVar12[6];\n          puVar12[6] = uVar13;\n          puVar12[5] = puVar12[7];\n          puVar12[7] = uVar2;\n          puVar12 = puVar9;\n        } while (puVar9 != (undefined *)(lVar4 + 9 + (ulong)(uVar23 - 1) * 8));\nLAB_001248e6:\n        uVar7 = *(uint *)(param_1 + 0x134);\n        if ((uVar7 & 0x80000) == 0) goto joined_r0x0012474a;\n        goto LAB_00124900;\n      }\n      if (*(char *)(param_2 + 4) == '\\x04') {\n        uVar23 = *param_2;\n        if (*(char *)((long)param_2 + 0x11) == '\\b') {\n          if (uVar23 != 0) {\n            do {\n              uVar13 = *puVar12;\n              puVar9 = puVar12 + 2;\n              *puVar12 = puVar12[1];\n              puVar12[1] = uVar13;\n              puVar12 = puVar9;\n            } while (puVar9 != (undefined *)(lVar4 + 3 + (ulong)(uVar23 - 1) * 2));\n            goto LAB_001248e6;\n          }\n        }\n        else if (uVar23 != 0) {\n          do {\n            uVar13 = *puVar12;\n            puVar9 = puVar12 + 4;\n            uVar2 = puVar12[1];\n            *puVar12 = puVar12[2];\n            puVar12[2] = uVar13;\n            puVar12[1] = puVar12[3];\n            puVar12[3] = uVar2;\n            puVar12 = puVar9;\n          } while (puVar9 != (undefined *)(lVar4 + 5 + (ulong)(uVar23 - 1) * 4));\n          goto LAB_001248e6;\n        }\n      }\n    }\n    else {\n      bVar6 = *(byte *)(param_2 + 4);\n      if (bVar6 != 3) {\n        bVar3 = *(byte *)((long)param_2 + 0x11);\n        lVar4 = *(long *)(param_1 + 0x228);\n        uVar23 = (uint)bVar3;\n        if ((bVar6 & 2) == 0) {\n          local_48[0] = (uint)*(byte *)(param_1 + 0x2e0);\n          lVar10 = 1;\n          local_58[0] = (uint)bVar3 - (uint)*(byte *)(param_1 + 0x2e0);\n        }\n        else {\n          local_48[0] = (uint)*(byte *)(param_1 + 0x2dd);\n          local_58[0] = uVar23 - *(byte *)(param_1 + 0x2dd);\n          local_48[1] = (uint)*(byte *)(param_1 + 0x2de);\n          local_58[1] = uVar23 - *(byte *)(param_1 + 0x2de);\n          local_48[2] = (uint)*(byte *)(param_1 + 0x2df);\n          lVar10 = 3;\n          local_58[2] = uVar23 - *(byte *)(param_1 + 0x2df);\n        }\n        uVar21 = (uint)lVar10;\n        if ((bVar6 & 4) != 0) {\n          bVar6 = *(byte *)(param_1 + 0x2e1);\n          uVar21 = uVar21 + 1;\n          local_48[lVar10] = (uint)bVar6;\n          local_58[lVar10] = uVar23 - bVar6;\n        }\n        pbVar18 = (byte *)(lVar4 + 1);\n        if (bVar3 < 8) {\n          lVar10 = *(long *)(param_2 + 2);\n          if ((*(char *)(param_1 + 0x2e0) == '\\x01') && (bVar3 == 2)) {\n            uVar23 = 0x55;\n          }\n          else if ((bVar3 == 4) && (*(char *)(param_1 + 0x2e0) == '\\x03')) {\n            uVar23 = 0x11;\n          }\n          else {\n            uVar23 = 0xff;\n          }\n          if (lVar10 != 0) {\n            iVar24 = -local_48[0];\n            do {\n              if (local_58[0] == iVar24 ||\n                  SBORROW4(local_58[0],iVar24) != (int)(local_58[0] + local_48[0]) < 0) {\n                bVar6 = 0;\n              }\n              else {\n                uVar7 = 0;\n                iVar15 = local_58[0];\n                iVar19 = -local_58[0];\n                do {\n                  while (0 < iVar15) {\n                    iVar14 = iVar15 - local_48[0];\n                    iVar19 = iVar19 + local_48[0];\n                    uVar7 = uVar7 | (uint)*pbVar18 << ((byte)iVar15 & 0x1f);\n                    bVar6 = (byte)uVar7;\n                    iVar15 = iVar14;\n                    if (iVar14 == iVar24 ||\n                        SBORROW4(iVar14,iVar24) != (int)(iVar14 + local_48[0]) < 0)\n                    goto LAB_00124bf2;\n                  }\n                  iVar15 = iVar15 - local_48[0];\n                  uVar7 = uVar7 | *pbVar18 >> ((byte)iVar19 & 0x1f) & uVar23;\n                  bVar6 = (byte)uVar7;\n                  iVar19 = iVar19 + local_48[0];\n                } while (iVar15 != iVar24 &&\n                         SBORROW4(iVar15,iVar24) == (int)(iVar15 + local_48[0]) < 0);\n              }\nLAB_00124bf2:\n              *pbVar18 = bVar6;\n              pbVar18 = pbVar18 + 1;\n            } while ((byte *)(lVar4 + 1 + lVar10) != pbVar18);\n            goto LAB_00124bfd;\n          }\n        }\n        else {\n          uVar23 = *param_2 * uVar21;\n          if (bVar3 == 8) {\n            if (uVar23 != 0) {\n              uVar8 = 0;\n              do {\n                bVar6 = *(byte *)(lVar4 + 1 + uVar8);\n                uVar5 = (uVar8 & 0xffffffff) % (ulong)uVar21;\n                uVar7 = local_48[uVar5];\n                iVar24 = local_58[uVar5];\n                iVar15 = -uVar7;\n                if (iVar24 == iVar15 || SBORROW4(iVar24,iVar15) != (int)(iVar24 + uVar7) < 0) {\n                  uVar13 = 0;\n                }\n                else {\n                  uVar17 = 0;\n                  iVar19 = -iVar24;\n                  do {\n                    while (0 < iVar24) {\n                      iVar14 = iVar24 - uVar7;\n                      iVar19 = iVar19 + uVar7;\n                      uVar17 = uVar17 | (uint)bVar6 << ((byte)iVar24 & 0x1f);\n                      uVar13 = (undefined)uVar17;\n                      iVar24 = iVar14;\n                      if (iVar14 == iVar15 || SBORROW4(iVar14,iVar15) != (int)(iVar14 + uVar7) < 0)\n                      goto LAB_00124e1d;\n                    }\n                    iVar24 = iVar24 - uVar7;\n                    uVar17 = uVar17 | bVar6 >> ((byte)iVar19 & 0x1f);\n                    uVar13 = (undefined)uVar17;\n                    iVar19 = iVar19 + uVar7;\n                  } while (iVar24 != iVar15 && SBORROW4(iVar24,iVar15) == (int)(iVar24 + uVar7) < 0)\n                  ;\n                }\nLAB_00124e1d:\n                *(undefined *)(lVar4 + 1 + uVar8) = uVar13;\n                bVar25 = uVar23 - 1 != uVar8;\n                uVar8 = uVar8 + 1;\n              } while (bVar25);\n              goto LAB_00124bfd;\n            }\n          }\n          else if (uVar23 != 0) {\n            uVar7 = 0;\n            do {\n              uVar20 = (uint)*pbVar18 * 0x100 + (uint)pbVar18[1] & 0xffff;\n              uVar17 = local_48[(ulong)uVar7 % (ulong)uVar21];\n              iVar24 = local_58[(ulong)uVar7 % (ulong)uVar21];\n              iVar15 = -uVar17;\n              if (iVar24 == iVar15 || SBORROW4(iVar24,iVar15) != (int)(iVar24 + uVar17) < 0) {\n                uVar16 = 0;\n                bVar6 = 0;\n              }\n              else {\n                uVar16 = 0;\n                iVar19 = -iVar24;\n                do {\n                  while (0 < iVar24) {\n                    iVar14 = iVar24 - uVar17;\n                    iVar19 = iVar19 + uVar17;\n                    uVar16 = uVar16 | uVar20 << ((byte)iVar24 & 0x1f);\n                    iVar24 = iVar14;\n                    if (iVar14 == iVar15 || SBORROW4(iVar14,iVar15) != (int)(iVar14 + uVar17) < 0)\n                    goto LAB_00124c9e;\n                  }\n                  iVar24 = iVar24 - uVar17;\n                  uVar16 = uVar16 | uVar20 >> ((byte)iVar19 & 0x1f);\n                  iVar19 = iVar19 + uVar17;\n                } while (iVar24 != iVar15 && SBORROW4(iVar24,iVar15) == (int)(iVar24 + uVar17) < 0);\nLAB_00124c9e:\n                bVar6 = (byte)(uVar16 >> 8);\n              }\n              *pbVar18 = bVar6;\n              uVar7 = uVar7 + 1;\n              pbVar18[1] = (byte)uVar16;\n              pbVar18 = pbVar18 + 2;\n            } while (uVar7 != uVar23);\nLAB_00124bfd:\n            uVar7 = *(uint *)(param_1 + 0x134);\n          }\n        }\n        goto LAB_0012472f;\n      }\n      if ((uVar7 & 0x20000) != 0) goto joined_r0x0012474a;\nLAB_0012473b:\n      if ((uVar7 & 0x80000) != 0) {\nLAB_00124900:\n        lVar4 = *(long *)(param_1 + 0x228);\n        lVar10 = lVar4 + 1;\n        if (*(char *)(param_2 + 4) == '\\x06') {\n          uVar23 = *param_2;\n          if (*(char *)((long)param_2 + 0x11) == '\\b') {\n            if (uVar23 != 0) {\n              do {\n                lVar11 = lVar10 + 4;\n                *(byte *)(lVar10 + 3) = ~*(byte *)(lVar10 + 3);\n                lVar10 = lVar11;\n              } while (lVar11 != lVar4 + 5 + (ulong)(uVar23 - 1) * 4);\n              goto LAB_0012494f;\n            }\n          }\n          else if (uVar23 != 0) {\n            do {\n              *(byte *)(lVar10 + 6) = ~*(byte *)(lVar10 + 6);\n              lVar11 = lVar10 + 8;\n              *(byte *)(lVar10 + 7) = ~*(byte *)(lVar10 + 7);\n              lVar10 = lVar11;\n            } while (lVar11 != lVar4 + 9 + (ulong)(uVar23 - 1) * 8);\nLAB_0012494f:\n            uVar7 = *(uint *)(param_1 + 0x134);\n          }\n        }\n        else if (*(char *)(param_2 + 4) == '\\x04') {\n          uVar23 = *param_2;\n          if (*(char *)((long)param_2 + 0x11) == '\\b') {\n            if (uVar23 != 0) {\n              do {\n                lVar11 = lVar10 + 2;\n                *(byte *)(lVar10 + 1) = ~*(byte *)(lVar10 + 1);\n                lVar10 = lVar11;\n              } while (lVar11 != lVar4 + 3 + (ulong)(uVar23 - 1) * 2);\n              goto LAB_0012494f;\n            }\n          }\n          else if (uVar23 != 0) {\n            do {\n              *(byte *)(lVar10 + 2) = ~*(byte *)(lVar10 + 2);\n              lVar11 = lVar10 + 4;\n              *(byte *)(lVar10 + 3) = ~*(byte *)(lVar10 + 3);\n              lVar10 = lVar11;\n            } while (lVar11 != lVar4 + 5 + (ulong)(uVar23 - 1) * 4);\n            goto LAB_0012494f;\n          }\n        }\n      }\n    }\njoined_r0x0012474a:\n    if ((uVar7 & 1) != 0) {\n      FUN_00121700(param_2,*(long *)(param_1 + 0x228) + 1);\n      uVar7 = *(uint *)(param_1 + 0x134);\n    }\n    if ((uVar7 & 0x20) != 0) {\n      if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n        FUN_00121390(param_2,*(long *)(param_1 + 0x228) + 1);\n        return;\n      }\n      goto LAB_00124fc3;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\nLAB_00124fc3:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00124fd0": "\nlong FUN_00124fd0(long param_1)\n\n{\n  byte bVar1;\n  uint uVar2;\n  long lVar3;\n  byte bVar4;\n  ulong uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  \n  uVar2 = *(uint *)(param_1 + 0x1fc);\n  if ((uVar2 < 0x8000) && (*(ulong *)(param_1 + 0x208) < 0x8000)) {\n    if (*(char *)(param_1 + 0x264) != '\\0') {\n      bVar1 = *(byte *)(param_1 + 0x26a);\n      lVar3 = 0;\n      uVar7 = 0;\n      do {\n        uVar6 = uVar7 + 1;\n        uVar8 = (uVar7 & 1) << (3U - (char)((int)uVar6 >> 1) & 0x1f);\n        if (uVar7 < 2) {\n          bVar4 = 3;\n          uVar8 = ~uVar8 & 7;\n        }\n        else {\n          bVar4 = (byte)((int)(7 - uVar7) >> 1);\n          uVar8 = ((1 << (bVar4 & 0x1f)) + -1) - (uVar8 & 7);\n        }\n        uVar8 = uVar8 + *(int *)(param_1 + 0x1f8) >> (bVar4 & 0x1f);\n        if (uVar8 != 0) {\n          if (bVar1 < 8) {\n            uVar5 = (ulong)uVar8 * (ulong)bVar1 + 7 >> 3;\n          }\n          else {\n            uVar5 = (ulong)uVar8 * (ulong)(bVar1 >> 3);\n          }\n          uVar8 = (uVar7 & 1 ^ 1) << (3U - (char)((int)uVar7 >> 1) & 0x1f);\n          if (uVar7 < 3) {\n            bVar4 = 3;\n            uVar7 = ~uVar8 & 7;\n          }\n          else {\n            bVar4 = (byte)((int)(8 - uVar7) >> 1);\n            uVar7 = ((1 << (bVar4 & 0x1f)) + -1) - (uVar8 & 7);\n          }\n          lVar3 = lVar3 + (uVar5 + 1) * (ulong)(uVar7 + uVar2 >> (bVar4 & 0x1f));\n        }\n        uVar7 = uVar6;\n      } while (uVar6 != 7);\n      return lVar3;\n    }\n    return (ulong)uVar2 * (*(ulong *)(param_1 + 0x208) + 1);\n  }\n  return 0xffffffff;\n}\n\n", "FUN_00125160": "\nint FUN_00125160(long param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  char *extraout_RDX;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  long in_FS_OFFSET;\n  char *pcVar9;\n  uint local_88;\n  undefined2 local_84;\n  uint local_82;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar6 = *(uint *)(param_1 + 0x138);\n  if (*(int *)(param_1 + 0x138) != 0) {\n    local_82 = uVar6 >> 0x18 | (uVar6 & 0xff0000) >> 8 | (uVar6 & 0xff00) << 8 | uVar6 << 0x18;\n    local_84 = 0x203a;\n    local_88 = param_2 >> 0x18 | (param_2 & 0xff0000) >> 8 | (param_2 & 0xff00) << 8 |\n               param_2 << 0x18;\n    FUN_0010adb0(&local_88,0x40,10);\n    png_warning();\n    if (*(int *)(param_1 + 0x138) == 0x49444154) {\n      *(char **)(param_1 + 0x170) = \"in use by IDAT\";\n      iVar4 = -2;\n      goto LAB_001252b1;\n    }\n    *(undefined4 *)(param_1 + 0x138) = 0;\n  }\n  if (param_2 == 0x49444154) {\n    iVar4 = *(int *)(param_1 + 0x1bc);\n    iVar8 = *(int *)(param_1 + 0x1c0);\n    iVar7 = *(int *)(param_1 + 0x1c4);\n    iVar5 = *(int *)(param_1 + 0x1c8);\n    if ((*(uint *)(param_1 + 0x130) & 1) == 0) {\n      uVar6 = (uint)(*(char *)(param_1 + 0x266) != '\\b');\n    }\n    else {\n      uVar6 = *(uint *)(param_1 + 0x1cc);\n    }\n  }\n  else {\n    iVar4 = *(int *)(param_1 + 0x1d0);\n    iVar8 = *(int *)(param_1 + 0x1d4);\n    iVar7 = *(int *)(param_1 + 0x1d8);\n    iVar5 = *(int *)(param_1 + 0x1dc);\n    uVar6 = *(uint *)(param_1 + 0x1e0);\n  }\n  if (param_3 < 0x4001) {\n    uVar2 = 1 << ((byte)(iVar7 + -1) & 0x1f);\n    iVar3 = iVar7 + -1;\n    if (param_3 + 0x106 <= (ulong)uVar2) {\n      while (iVar7 = iVar3, uVar2 = uVar2 >> 1, param_3 + 0x106 <= (ulong)uVar2) {\n        iVar3 = iVar7 + -1;\n      }\n    }\n  }\n  lVar1 = param_1 + 0x140;\n  if ((*(uint *)(param_1 + 0x130) & 2) == 0) {\nLAB_00125254:\n    pcVar9 = \"1.2.11\";\n    *(undefined8 *)(param_1 + 0x140) = 0;\n    *(undefined4 *)(param_1 + 0x148) = 0;\n    *(undefined8 *)(param_1 + 0x158) = 0;\n    *(undefined4 *)(param_1 + 0x160) = 0;\n    iVar4 = deflateInit2_(lVar1,iVar4,iVar8,iVar7,iVar5,uVar6,\"1.2.11\",0x70);\n    if (iVar4 == 0) {\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) | 2;\nLAB_001252df:\n      *(uint *)(param_1 + 0x138) = param_2;\n      iVar4 = 0;\n      goto LAB_001252b1;\n    }\n  }\n  else {\n    if ((((*(int *)(param_1 + 0x1e4) != iVar4) || (*(int *)(param_1 + 0x1e8) != iVar8)) ||\n        (*(int *)(param_1 + 0x1ec) != iVar7)) ||\n       ((*(int *)(param_1 + 0x1f0) != iVar5 || (*(uint *)(param_1 + 500) != uVar6)))) {\n      iVar3 = deflateEnd(lVar1);\n      if (iVar3 != 0) {\n        png_warning(param_1,\"deflateEnd failed (ignored)\");\n      }\n      *(uint *)(param_1 + 0x130) = *(uint *)(param_1 + 0x130) & 0xfffffffd;\n      goto LAB_00125254;\n    }\n    *(undefined8 *)(param_1 + 0x140) = 0;\n    *(undefined4 *)(param_1 + 0x148) = 0;\n    *(undefined8 *)(param_1 + 0x158) = 0;\n    *(undefined4 *)(param_1 + 0x160) = 0;\n    iVar4 = deflateReset(lVar1);\n    pcVar9 = extraout_RDX;\n    if (iVar4 == 0) goto LAB_001252df;\n  }\n  FUN_00107840(param_1,iVar4,pcVar9);\nLAB_001252b1:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar4;\n}\n\n", "FUN_00125440": "\nvoid FUN_00125440(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  bVar1 = *param_1;\n  uVar5 = bVar1 & 0xf;\n  if (((char)uVar5 == '\\b') && ((bVar1 & 0xf0) < 0x71)) {\n    uVar2 = (uint)(bVar1 >> 4);\n    uVar4 = 1 << (bVar1 >> 4) + 7;\n    if (param_2 <= uVar4) {\n      do {\n        uVar4 = uVar4 >> 1;\n        uVar2 = uVar2 - 1;\n        if (uVar2 == 0) {\n          iVar3 = 0x800;\n          goto LAB_00125493;\n        }\n      } while (param_2 <= uVar4);\n      uVar5 = uVar2 * 0x10 | 8;\n      iVar3 = uVar5 << 8;\nLAB_00125493:\n      *param_1 = (byte)uVar5;\n      uVar5 = iVar3 + (param_1[1] & 0xe0);\n      uVar2 = uVar5 / 0x1f;\n      param_1[1] = ((char)(param_1[1] & 0xe0) - (char)uVar5) + '\\x1f' +\n                   ((char)(uVar2 << 5) - (char)uVar2);\n      return;\n    }\n  }\n  return;\n}\n\n", "FUN_001254e0": "\nint FUN_001254e0(long param_1,undefined8 param_2,undefined8 *param_3,int param_4)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  int iVar3;\n  undefined8 *puVar4;\n  ulong uVar5;\n  int iVar6;\n  undefined8 *puVar7;\n  long lVar8;\n  \n  iVar3 = FUN_00125160(param_1,param_2,param_3[1]);\n  if (iVar3 != 0) {\n    return iVar3;\n  }\n  uVar2 = *param_3;\n  uVar5 = param_3[1];\n  *(undefined4 *)(param_1 + 0x160) = 0x400;\n  *(undefined8 *)(param_1 + 0x140) = uVar2;\n  iVar6 = 0x400;\n  *(long *)(param_1 + 0x158) = (long)param_3 + 0x14;\n  iVar3 = 0x400;\n  puVar7 = (undefined8 *)(param_1 + 0x1b0);\n  do {\n    if (uVar5 < 0xffffffff) {\n      *(int *)(param_1 + 0x148) = (int)uVar5;\n      lVar8 = 0;\n    }\n    else {\n      *(undefined4 *)(param_1 + 0x148) = 0xffffffff;\n      lVar8 = uVar5 - 0xffffffff;\n    }\n    puVar4 = puVar7;\n    if (iVar3 == 0) {\n      if (param_4 + iVar6 < 0) {\n        iVar3 = 0;\nLAB_001256c2:\n        *(undefined4 *)(param_1 + 0x160) = 0;\n        *(int *)(param_3 + 2) = iVar6 - iVar3;\n        if ((uint)((iVar6 - iVar3) + param_4) < 0x7fffffff) {\n          FUN_00107840(param_1,0xfffffffc);\n          *(undefined4 *)(param_1 + 0x138) = 0;\n          return -4;\n        }\n        goto LAB_001256e2;\n      }\n      puVar4 = (undefined8 *)*puVar7;\n      iVar3 = *(int *)(param_1 + 0x1b8);\n      if (puVar4 == (undefined8 *)0x0) {\n        puVar4 = (undefined8 *)FUN_0010cbb0(param_1);\n        if (puVar4 == (undefined8 *)0x0) {\n          iVar3 = *(int *)(param_1 + 0x160);\n          goto LAB_001256c2;\n        }\n        *puVar4 = 0;\n        iVar3 = *(int *)(param_1 + 0x1b8);\n        *puVar7 = puVar4;\n      }\n      *(int *)(param_1 + 0x160) = iVar3;\n      iVar6 = iVar6 + iVar3;\n      *(undefined8 **)(param_1 + 0x158) = puVar4 + 1;\n    }\n    iVar3 = deflate(param_1 + 0x140);\n    uVar1 = *(uint *)(param_1 + 0x148);\n    *(undefined4 *)(param_1 + 0x148) = 0;\n    uVar5 = (ulong)uVar1 + lVar8;\n    if (iVar3 != 0) {\n      iVar6 = iVar6 - *(int *)(param_1 + 0x160);\n      *(undefined4 *)(param_1 + 0x160) = 0;\n      *(int *)(param_3 + 2) = iVar6;\n      if ((uint)(iVar6 + param_4) < 0x7fffffff) {\n        FUN_00107840(param_1,iVar3);\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        if (iVar3 != 1) {\n          return iVar3;\n        }\n        if (uVar5 != 0) {\n          return 1;\n        }\n        if (0x4000 < (ulong)param_3[1]) {\n          return 0;\n        }\n        FUN_00125440((long)param_3 + 0x14);\n        return 0;\n      }\nLAB_001256e2:\n      *(char **)(param_1 + 0x170) = \"compressed data too long\";\n      *(undefined4 *)(param_1 + 0x138) = 0;\n      return -4;\n    }\n    iVar3 = *(int *)(param_1 + 0x160);\n    puVar7 = puVar4;\n  } while( true );\n}\n\n", "FUN_00125750": "\nvoid FUN_00125750(long param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack56 [4];\n  undefined local_34 [4];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  *(undefined4 *)(param_1 + 0x474) = 0x22;\n  png_save_uint_32(auStack56,param_3);\n  png_save_uint_32(local_34,param_2);\n  FUN_00121aa0(param_1,auStack56,8);\n  *(undefined4 *)(param_1 + 0x218) = param_2;\n  FUN_001068b0(param_1);\n  FUN_001068d0(param_1,local_34,4);\n  *(undefined4 *)(param_1 + 0x474) = 0x42;\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "png_write_chunk_start": "\nvoid png_write_chunk_start(long param_1,uint *param_2)\n\n{\n  uint uVar1;\n  \n  if (param_1 != 0) {\n    uVar1 = *param_2;\n    FUN_00125750(param_1,uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 |\n                         uVar1 << 0x18);\n    return;\n  }\n  return;\n}\n\n", "FUN_001258f0": "\nvoid FUN_001258f0(long param_1,long param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  \n  puVar3 = (undefined8 *)(param_2 + 0x14);\n  uVar1 = 0x400;\n  uVar2 = *(uint *)(param_2 + 0x10);\n  puVar4 = *(undefined8 **)(param_1 + 0x1b0);\n  while( true ) {\n    if (uVar2 <= uVar1) {\n      uVar1 = uVar2;\n    }\n    png_write_chunk_data(param_1,puVar3,uVar1);\n    uVar2 = uVar2 - uVar1;\n    if ((uVar2 == 0) || (puVar4 == (undefined8 *)0x0)) break;\n    puVar3 = puVar4 + 1;\n    uVar1 = *(uint *)(param_1 + 0x1b8);\n    puVar4 = (undefined8 *)*puVar4;\n  }\n  if (uVar2 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"error writing ancillary chunked compressed data\");\n}\n\n", "FUN_001259d0": "\nvoid FUN_001259d0(long param_1,undefined8 param_2,undefined8 param_3,ulong param_4)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (param_4 < 0x80000000) {\n    FUN_00125750(param_1,param_2,(int)param_4);\n    png_write_chunk_data(param_1,param_3,param_4);\n    png_write_chunk_end(param_1);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"length exceeds PNG maximum\");\n}\n\n", "FUN_00125a30": "\nvoid FUN_00125a30(undefined8 param_1,long **param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  \n  plVar2 = *param_2;\n  if (plVar2 != (long *)0x0) {\n    *param_2 = (long *)0x0;\n    do {\n      plVar1 = (long *)*plVar2;\n      png_free(param_1,plVar2);\n      plVar2 = plVar1;\n    } while (plVar1 != (long *)0x0);\n  }\n  return;\n}\n\n", "FUN_00125a70": "\nvoid FUN_00125a70(long param_1,uint param_2,undefined4 param_3,uint param_4,uint param_5,int param_6\n                 ,int param_7,uint param_8)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  undefined local_4d [4];\n  undefined local_49 [4];\n  byte local_45;\n  undefined local_44;\n  undefined local_43;\n  undefined local_42;\n  undefined local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar3 = (ulong)param_2;\n  local_44 = (undefined)param_5;\n  local_45 = (byte)param_4;\n  switch(param_5) {\n  case 0:\n    if ((0x10 < param_4) || ((1 << (local_45 & 0x3f) & 0x10116U) == 0)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid bit depth for grayscale image\");\n    }\n    goto LAB_00125b0d;\n  default:\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Invalid image color type specified\");\n  case 2:\n    if ((param_4 - 8 & 0xfffffff7) != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid bit depth for RGB image\");\n    }\n    *(undefined *)(param_1 + 0x26b) = 3;\n    break;\n  case 3:\n    if ((8 < param_4) || ((1 << (local_45 & 0x3f) & 0x116U) == 0)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid bit depth for paletted image\");\n    }\nLAB_00125b0d:\n    *(undefined *)(param_1 + 0x26b) = 1;\n    break;\n  case 4:\n    if ((param_4 - 8 & 0xfffffff7) != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid bit depth for grayscale+alpha image\");\n    }\n    *(undefined *)(param_1 + 0x26b) = 2;\n    break;\n  case 6:\n    if ((param_4 - 8 & 0xfffffff7) != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid bit depth for RGBA image\");\n    }\n    *(undefined *)(param_1 + 0x26b) = 4;\n  }\n  if (param_6 != 0) {\n    png_warning(param_1,\"Invalid compression type specified\");\n  }\n  if (((((*(byte *)(param_1 + 0x3e0) & 4) == 0) || ((*(byte *)(param_1 + 0x12d) & 0x10) != 0)) ||\n      ((param_5 & 0xfffffffb) != 2)) || (local_42 = 0x40, param_7 != 0x40)) {\n    local_42 = 0;\n    if (param_7 != 0) {\n      png_warning(param_1,\"Invalid filter type specified\");\n      local_42 = 0;\n    }\n  }\n  if (param_8 < 2) {\n    local_41 = (undefined)param_8;\n  }\n  else {\n    png_warning(param_1,\"Invalid interlace type specified\");\n    local_41 = 1;\n  }\n  *(byte *)(param_1 + 0x268) = local_45;\n  *(undefined *)(param_1 + 0x267) = local_44;\n  *(undefined *)(param_1 + 0x264) = local_41;\n  param_4 = *(byte *)(param_1 + 0x26b) * param_4;\n  *(undefined *)(param_1 + 0x3e4) = local_42;\n  *(undefined *)(param_1 + 0x420) = 0;\n  *(uint *)(param_1 + 0x1f8) = param_2;\n  *(undefined4 *)(param_1 + 0x1fc) = param_3;\n  bVar1 = (byte)param_4;\n  *(byte *)(param_1 + 0x26a) = bVar1;\n  if (bVar1 < 8) {\n    uVar2 = (param_4 & 0xff) * uVar3 + 7 >> 3;\n  }\n  else {\n    uVar2 = (bVar1 >> 3) * uVar3;\n  }\n  *(ulong *)(param_1 + 0x208) = uVar2;\n  *(byte *)(param_1 + 0x26c) = *(byte *)(param_1 + 0x26b);\n  *(uint *)(param_1 + 0x204) = param_2;\n  *(byte *)(param_1 + 0x269) = local_45;\n  png_save_uint_32(local_4d,uVar3);\n  png_save_uint_32(local_49,param_3);\n  local_43 = 0;\n  FUN_001259d0(param_1,0x49484452,local_4d,0xd);\n  if (*(char *)(param_1 + 0x266) == '\\0') {\n    if ((*(char *)(param_1 + 0x267) == '\\x03') || (*(byte *)(param_1 + 0x268) < 8)) {\n      *(undefined *)(param_1 + 0x266) = 8;\n    }\n    else {\n      *(undefined *)(param_1 + 0x266) = 0xf8;\n    }\n  }\n  *(undefined4 *)(param_1 + 300) = 1;\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00125d90": "\nvoid FUN_00125d90(long param_1,undefined *param_2,uint param_3)\n\n{\n  uint uVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  long in_FS_OFFSET;\n  undefined local_33;\n  undefined local_32;\n  undefined local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = *(uint *)(param_1 + 0x3e0) & 1 | param_3;\n  if (*(byte *)(param_1 + 0x267) == 3) {\n    if ((uVar1 == 0) || ((uint)(1 << (*(byte *)(param_1 + 0x268) & 0x1f)) < param_3)) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"Invalid number of colors in palette\");\n    }\n  }\n  else {\n    if ((uVar1 == 0) || (0x100 < param_3)) {\n      png_warning(param_1,\"Invalid number of colors in palette\");\n      goto LAB_00125de6;\n    }\n    if ((*(byte *)(param_1 + 0x267) & 2) == 0) {\n      png_warning(param_1,\"Ignoring request to write a PLTE chunk in grayscale PNG\");\n      goto LAB_00125de6;\n    }\n  }\n  *(short *)(param_1 + 600) = (short)param_3;\n  FUN_00125750(param_1,0x504c5445,param_3 * 3);\n  if (param_3 != 0) {\n    puVar2 = param_2;\n    do {\n      local_33 = *puVar2;\n      puVar3 = puVar2 + 3;\n      local_32 = puVar2[1];\n      local_31 = puVar2[2];\n      png_write_chunk_data(param_1,&local_33,3);\n      puVar2 = puVar3;\n    } while (puVar3 != param_2 + (ulong)(param_3 - 1) * 3 + 3);\n  }\n  png_write_chunk_end(param_1);\n  *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 2;\nLAB_00125de6:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00125ef0": "\nvoid FUN_00125ef0(long param_1,undefined8 param_2,ulong param_3,int param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  undefined8 *puVar6;\n  long lVar7;\n  \n  if (*(int *)(param_1 + 0x138) != 0x49444154) {\n    if (*(long *)(param_1 + 0x1b0) == 0) {\n      puVar6 = (undefined8 *)png_malloc(param_1,(ulong)*(uint *)(param_1 + 0x1b8) + 8);\n      *(undefined8 **)(param_1 + 0x1b0) = puVar6;\n      *puVar6 = 0;\n    }\n    else {\n      FUN_00125a30();\n    }\n    uVar4 = FUN_00124fd0(param_1);\n    iVar3 = FUN_00125160(param_1,0x49444154,uVar4);\n    if (iVar3 != 0) {\nLAB_001261b7:\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,*(undefined8 *)(param_1 + 0x170));\n    }\n    *(long *)(param_1 + 0x158) = *(long *)(param_1 + 0x1b0) + 8;\n    *(undefined4 *)(param_1 + 0x160) = *(undefined4 *)(param_1 + 0x1b8);\n  }\n  *(undefined8 *)(param_1 + 0x140) = param_2;\n  do {\n    while( true ) {\n      if (param_3 < 0xffffffff) {\n        *(int *)(param_1 + 0x148) = (int)param_3;\n        lVar7 = 0;\n        iVar3 = param_4;\n      }\n      else {\n        *(undefined4 *)(param_1 + 0x148) = 0xffffffff;\n        lVar7 = param_3 - 0xffffffff;\n        iVar3 = 0;\n        if (lVar7 == 0) {\n          iVar3 = param_4;\n        }\n      }\n      iVar3 = deflate(param_1 + 0x140,iVar3);\n      uVar1 = *(uint *)(param_1 + 0x148);\n      *(undefined4 *)(param_1 + 0x148) = 0;\n      param_3 = lVar7 + (ulong)uVar1;\n      if (*(int *)(param_1 + 0x160) == 0) break;\nLAB_00126068:\n      if (iVar3 != 0) goto LAB_001260d0;\n      if (param_3 == 0) {\n        if (param_4 != 4) {\n          return;\n        }\n                    /* WARNING: Subroutine does not return */\n        png_error(param_1,\"Z_OK on Z_FINISH with output space\");\n      }\n    }\n    iVar2 = *(int *)(param_1 + 0x1b8);\n    lVar7 = *(long *)(param_1 + 0x1b0) + 8;\n    if ((((*(byte *)(param_1 + 300) & 4) == 0) && (*(char *)(param_1 + 0x420) == '\\0')) &&\n       (uVar5 = FUN_00124fd0(param_1), uVar5 < 0x4001)) {\n      FUN_00125440(lVar7);\n    }\n    if (iVar2 != 0) {\n      FUN_001259d0(param_1,0x49444154,lVar7,iVar2);\n    }\n    *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 4;\n    *(long *)(param_1 + 0x158) = lVar7;\n    *(int *)(param_1 + 0x160) = iVar2;\n    if (iVar3 != 0) {\nLAB_001260d0:\n      if ((iVar3 == 1) && (param_4 == 4)) {\n        iVar3 = *(int *)(param_1 + 0x1b8) - *(int *)(param_1 + 0x160);\n        lVar7 = *(long *)(param_1 + 0x1b0) + 8;\n        if ((((*(byte *)(param_1 + 300) & 4) == 0) && (*(char *)(param_1 + 0x420) == '\\0')) &&\n           (uVar5 = FUN_00124fd0(param_1), uVar5 < 0x4001)) {\n          FUN_00125440(lVar7,uVar5);\n        }\n        if (iVar3 != 0) {\n          FUN_001259d0(param_1,0x49444154,lVar7,iVar3);\n        }\n        *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0xc;\n        *(undefined4 *)(param_1 + 0x160) = 0;\n        *(undefined8 *)(param_1 + 0x158) = 0;\n        *(undefined4 *)(param_1 + 0x138) = 0;\n        return;\n      }\n      FUN_00107840(param_1,iVar3);\n      goto LAB_001261b7;\n    }\n    if (param_4 == 0) goto LAB_00126068;\n  } while( true );\n}\n\n", "FUN_001261d0": "\nvoid FUN_001261d0(long param_1)\n\n{\n  FUN_001259d0(param_1,0x49454e44,0,0);\n  *(uint *)(param_1 + 300) = *(uint *)(param_1 + 300) | 0x10;\n  return;\n}\n\n", "FUN_001261f0": "\nvoid FUN_001261f0(undefined8 param_1)\n\n{\n  long in_FS_OFFSET;\n  undefined local_24 [4];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  png_save_uint_32(local_24);\n  FUN_001259d0(param_1,0x67414d41,local_24,4);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126250": "\nvoid FUN_00126250(undefined8 param_1,int param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined local_11;\n  long local_10;\n  \n  local_11 = (undefined)param_2;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (3 < param_2) {\n    png_warning(param_1,\"Invalid sRGB rendering intent specified\");\n  }\n  FUN_001259d0(param_1,0x73524742,&local_11,1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001262c0": "\nvoid FUN_001262c0(long param_1,undefined8 param_2,byte *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  long in_FS_OFFSET;\n  byte *local_4a8;\n  ulong local_4a0;\n  int local_498;\n  undefined local_88 [88];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 == (byte *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"No profile for iCCP chunk\");\n  }\n  uVar3 = (uint)param_3[2] * 0x100 +\n          (uint)param_3[3] + (uint)param_3[1] * 0x10000 + (uint)*param_3 * 0x1000000;\n  if (uVar3 < 0x84) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"ICC profile too short\");\n  }\n  if ((3 < param_3[8]) && ((uVar3 & 3) != 0)) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"ICC profile length invalid (not a multiple of 4)\");\n  }\n  iVar1 = FUN_00120fc0(param_1,param_2,local_88);\n  if (iVar1 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"iCCP: invalid keyword\");\n  }\n  iVar2 = iVar1 + 2;\n  local_4a0 = (ulong)uVar3;\n  local_88[iVar1 + 1] = 0;\n  local_498 = 0;\n  local_4a8 = param_3;\n  iVar1 = FUN_001254e0(param_1,0x69434350,&local_4a8,iVar2);\n  if (iVar1 == 0) {\n    if (param_1 != 0) {\n      FUN_00125750(param_1,0x69434350,local_498 + iVar2);\n    }\n    png_write_chunk_data(param_1,local_88,iVar2);\n    FUN_001258f0(param_1,&local_4a8);\n    png_write_chunk_end(param_1);\n    if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,*(undefined8 *)(param_1 + 0x170));\n}\n\n", "FUN_00126430": "\nvoid FUN_00126430(long param_1,undefined8 *param_2)\n\n{\n  int iVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  undefined2 *puVar5;\n  long in_FS_OFFSET;\n  undefined local_a2;\n  undefined local_a1;\n  undefined local_a0;\n  undefined local_9f;\n  undefined local_9e [2];\n  undefined local_9c [2];\n  undefined local_9a [2];\n  undefined local_98 [88];\n  long local_40;\n  \n  iVar3 = *(int *)(param_2 + 3);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar2 = *(char *)(param_2 + 1);\n  iVar4 = FUN_00120fc0(param_1,*param_2,local_98);\n  if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"sPLT: invalid keyword\");\n  }\n  iVar1 = (uint)(cVar2 != '\\b') * 4 + 6;\n  if (param_1 != 0) {\n    FUN_00125750(param_1,0x73504c54,iVar4 + 2 + iVar3 * iVar1);\n  }\n  png_write_chunk_data(param_1,local_98,iVar4 + 1);\n  png_write_chunk_data(param_1,param_2 + 1,1);\n  puVar5 = (undefined2 *)param_2[2];\n  if (puVar5 < puVar5 + (long)*(int *)(param_2 + 3) * 5) {\n    do {\n      if (*(char *)(param_2 + 1) == '\\b') {\n        local_a2 = (undefined)*puVar5;\n        local_a1 = (undefined)puVar5[1];\n        local_a0 = (undefined)puVar5[2];\n        local_9f = (undefined)puVar5[3];\n        png_save_uint_16(local_9e,puVar5[4]);\n      }\n      else {\n        png_save_uint_16(&local_a2);\n        png_save_uint_16(&local_a0,puVar5[1]);\n        png_save_uint_16(local_9e,puVar5[2]);\n        png_save_uint_16(local_9c,puVar5[3]);\n        png_save_uint_16(local_9a,puVar5[4]);\n      }\n      puVar5 = puVar5 + 5;\n      png_write_chunk_data(param_1,&local_a2,iVar1);\n    } while (puVar5 < (undefined2 *)(param_2[2] + (long)*(int *)(param_2 + 3) * 10));\n  }\n  png_write_chunk_end(param_1);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_001265e0": "\nvoid FUN_001265e0(long param_1,byte *param_2,uint param_3)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte bVar3;\n  byte bVar4;\n  long lVar5;\n  long in_FS_OFFSET;\n  byte local_14 [4];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 2) == 0) {\n    bVar4 = param_2[3];\n    if ((bVar4 != 0) && (bVar4 < *(byte *)(param_1 + 0x269) || bVar4 == *(byte *)(param_1 + 0x269)))\n    {\n      lVar5 = 1;\n      local_14[0] = bVar4;\n      goto LAB_00126669;\n    }\n  }\n  else {\n    bVar4 = 8;\n    if (param_3 != 3) {\n      bVar4 = *(byte *)(param_1 + 0x269);\n    }\n    bVar1 = *param_2;\n    if (((((bVar1 <= bVar4) && (bVar1 != 0)) && (bVar2 = param_2[1], bVar2 <= bVar4)) &&\n        ((bVar2 != 0 && (bVar3 = param_2[2], bVar3 != 0)))) && (bVar3 <= bVar4)) {\n      lVar5 = 3;\n      local_14[0] = bVar1;\n      local_14[1] = bVar2;\n      local_14[2] = bVar3;\nLAB_00126669:\n      if ((param_3 & 4) != 0) {\n        bVar4 = param_2[4];\n        if ((bVar4 == 0) ||\n           (*(byte *)(param_1 + 0x269) <= bVar4 && bVar4 != *(byte *)(param_1 + 0x269)))\n        goto LAB_00126680;\n        local_14[lVar5] = bVar4;\n        lVar5 = lVar5 + 1;\n      }\n      FUN_001259d0(param_1,0x73424954,local_14,lVar5);\n      goto LAB_0012668c;\n    }\n  }\nLAB_00126680:\n  png_warning(param_1,\"Invalid sBIT depth specified\");\nLAB_0012668c:\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", "FUN_001266d0": "\nvoid FUN_001266d0(undefined8 param_1,undefined4 *param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack72 [4];\n  undefined local_44 [4];\n  undefined local_40 [4];\n  undefined local_3c [4];\n  undefined local_38 [4];\n  undefined local_34 [4];\n  undefined local_30 [4];\n  undefined local_2c [12];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  png_save_int_32(auStack72,param_2[6]);\n  png_save_int_32(local_44,param_2[7]);\n  png_save_int_32(local_40,*param_2);\n  png_save_int_32(local_3c,param_2[1]);\n  png_save_int_32(local_38,param_2[2]);\n  png_save_int_32(local_34,param_2[3]);\n  png_save_int_32(local_30,param_2[4]);\n  png_save_int_32(local_2c,param_2[5]);\n  FUN_001259d0(param_1,0x6348524d,auStack72,0x20);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126790": "\nvoid FUN_00126790(long param_1,undefined8 param_2,long param_3,int param_4,int param_5)\n\n{\n  long in_FS_OFFSET;\n  byte local_26 [2];\n  byte local_24 [2];\n  byte local_22 [2];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_5 == 3) {\n    if ((param_4 < 1) || ((int)(uint)*(ushort *)(param_1 + 600) < param_4)) {\n      FUN_0010b470(param_1,\"Invalid number of transparent colors specified\");\n    }\n    else {\n      FUN_001259d0(param_1,0x74524e53,param_2,(long)param_4);\n    }\n  }\n  else if (param_5 == 0) {\n    if ((int)(uint)*(ushort *)(param_3 + 8) < 1 << (*(byte *)(param_1 + 0x268) & 0x1f)) {\n      png_save_uint_16(local_26);\n      FUN_001259d0(param_1,0x74524e53,local_26,2);\n    }\n    else {\n      FUN_0010b470(param_1,\"Ignoring attempt to write tRNS chunk out-of-range for bit_depth\");\n    }\n  }\n  else if (param_5 == 2) {\n    png_save_uint_16(local_26,*(undefined2 *)(param_3 + 2));\n    png_save_uint_16(local_24,*(undefined2 *)(param_3 + 4));\n    png_save_uint_16(local_22,*(undefined2 *)(param_3 + 6));\n    if ((*(char *)(param_1 + 0x268) == '\\b') &&\n       ((byte)(local_26[0] | local_24[0] | local_22[0]) != 0)) {\n      FUN_0010b470(param_1,\"Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8\");\n    }\n    else {\n      FUN_001259d0(param_1,0x74524e53,local_26,6);\n    }\n  }\n  else {\n    FUN_0010b470(param_1,\"Can\\'t write tRNS with an alpha channel\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126910": "\nvoid FUN_00126910(long param_1,byte *param_2,uint param_3)\n\n{\n  byte bVar1;\n  long in_FS_OFFSET;\n  byte local_26 [2];\n  byte local_24 [2];\n  byte local_22 [2];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 != 3) {\n    if ((param_3 & 2) == 0) {\n      if ((int)(uint)*(ushort *)(param_2 + 8) < 1 << (*(byte *)(param_1 + 0x268) & 0x1f)) {\n        png_save_uint_16(local_26);\n        FUN_001259d0(param_1,0x624b4744,local_26,2);\n      }\n      else {\n        png_warning(param_1,\"Ignoring attempt to write bKGD chunk out-of-range for bit_depth\");\n      }\n    }\n    else {\n      png_save_uint_16(local_26,*(undefined2 *)(param_2 + 2));\n      png_save_uint_16(local_24,*(undefined2 *)(param_2 + 4));\n      png_save_uint_16(local_22,*(undefined2 *)(param_2 + 6));\n      if ((*(char *)(param_1 + 0x268) == '\\b') &&\n         ((byte)(local_26[0] | local_24[0] | local_22[0]) != 0)) {\n        png_warning(param_1,\"Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8\");\n      }\n      else {\n        FUN_001259d0(param_1,0x624b4744,local_26,6);\n      }\n    }\n    goto LAB_0012697c;\n  }\n  if (*(ushort *)(param_1 + 600) == 0) {\n    if ((*(byte *)(param_1 + 0x3e0) & 1) == 0) goto LAB_00126a49;\n    bVar1 = *param_2;\n  }\n  else {\n    bVar1 = *param_2;\n    if (*(ushort *)(param_1 + 600) <= (ushort)bVar1) {\nLAB_00126a49:\n      png_warning(param_1,\"Invalid background palette index\");\n      goto LAB_0012697c;\n    }\n  }\n  local_26[0] = bVar1;\n  FUN_001259d0(param_1,0x624b4744,local_26,1);\nLAB_0012697c:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126aa0": "\nvoid FUN_00126aa0(long param_1,undefined *param_2,int param_3)\n\n{\n  undefined *puVar1;\n  long in_FS_OFFSET;\n  undefined local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    FUN_00125750(param_1,0x65584966);\n  }\n  if (0 < param_3) {\n    puVar1 = param_2 + (ulong)(param_3 - 1) + 1;\n    do {\n      local_31 = *param_2;\n      param_2 = param_2 + 1;\n      png_write_chunk_data(param_1,&local_31,1);\n    } while (param_2 != puVar1);\n  }\n  png_write_chunk_end(param_1);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126b40": "\nvoid FUN_00126b40(long param_1,undefined2 *param_2,int param_3)\n\n{\n  undefined2 *puVar1;\n  undefined2 uVar2;\n  long in_FS_OFFSET;\n  undefined local_33 [3];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((int)(uint)*(ushort *)(param_1 + 600) < param_3) {\n    png_warning(param_1,\"Invalid number of histogram entries specified\");\n  }\n  else {\n    FUN_00125750(param_1,0x68495354,param_3 * 2);\n    if (0 < param_3) {\n      puVar1 = param_2 + (ulong)(param_3 - 1) + 1;\n      do {\n        uVar2 = *param_2;\n        param_2 = param_2 + 1;\n        png_save_uint_16(local_33,uVar2);\n        png_write_chunk_data(param_1,local_33,2);\n      } while (param_2 != puVar1);\n    }\n    png_write_chunk_end(param_1);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126c00": "\nvoid FUN_00126c00(long param_1,undefined8 param_2,char *param_3)\n\n{\n  int iVar1;\n  size_t sVar2;\n  int iVar3;\n  long in_FS_OFFSET;\n  undefined auStack152 [88];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00120fc0(param_1,param_2,auStack152);\n  if (iVar1 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"tEXt: invalid keyword\");\n  }\n  if ((param_3 == (char *)0x0) || (*param_3 == '\\0')) {\n    iVar3 = iVar1 + 1;\n    sVar2 = 0;\n    if (param_1 == 0) {\n      png_write_chunk_data(0,auStack152,iVar3);\n      goto LAB_00126c91;\n    }\nLAB_00126c71:\n    FUN_00125750(param_1,0x74455874,iVar3);\n  }\n  else {\n    sVar2 = strlen(param_3);\n    if (0x7ffffffe - iVar1 < sVar2) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"tEXt: text too long\");\n    }\n    if (param_1 != 0) {\n      iVar3 = iVar1 + 1 + (int)sVar2;\n      goto LAB_00126c71;\n    }\n  }\n  png_write_chunk_data(param_1,auStack152,iVar1 + 1);\n  if (sVar2 != 0) {\n    png_write_chunk_data(param_1,param_3,sVar2);\n  }\nLAB_00126c91:\n  png_write_chunk_end(param_1);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126d20": "\nvoid FUN_00126d20(long param_1,undefined8 param_2,char *param_3,int param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  long in_FS_OFFSET;\n  char *local_4a8;\n  size_t local_4a0;\n  int local_498;\n  undefined local_88 [88];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_4 == -1) {\n    FUN_00126c00();\n  }\n  else {\n    if (param_4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"zTXt: invalid compression type\");\n    }\n    iVar1 = FUN_00120fc0(param_1,param_2,local_88);\n    if (iVar1 == 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"zTXt: invalid keyword\");\n    }\n    iVar2 = iVar1 + 2;\n    local_4a0 = 0;\n    local_88[iVar1 + 1] = 0;\n    if (param_3 != (char *)0x0) {\n      local_4a0 = strlen(param_3);\n    }\n    local_498 = 0;\n    local_4a8 = param_3;\n    iVar1 = FUN_001254e0(param_1,0x7a545874,&local_4a8,iVar2);\n    if (iVar1 != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,*(undefined8 *)(param_1 + 0x170));\n    }\n    if (param_1 != 0) {\n      FUN_00125750(param_1,0x7a545874,local_498 + iVar2);\n    }\n    png_write_chunk_data(param_1,local_88,iVar2);\n    FUN_001258f0(param_1,&local_4a8);\n    png_write_chunk_end(param_1);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00126e50": "\nvoid FUN_00126e50(long param_1,int param_2,undefined8 param_3,char *param_4,char *param_5,\n                 char *param_6)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  size_t sVar5;\n  ulong uVar6;\n  long in_FS_OFFSET;\n  ulong local_4c8;\n  char *local_4b8;\n  ulong local_4b0;\n  int local_4a8;\n  undefined local_98 [88];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = FUN_00120fc0(param_1,param_3,local_98);\n  if (iVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"iTXt: invalid keyword\");\n  }\n  if (param_2 == 1) {\nLAB_00127080:\n    bVar1 = false;\n    local_98[iVar2 + 1] = 0;\n  }\n  else {\n    if (param_2 < 2) {\n      if (param_2 == -1) goto LAB_00127080;\n      if (param_2 != 0) goto LAB_0012701a;\n    }\n    else if (param_2 != 2) {\nLAB_0012701a:\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"iTXt: invalid compression\");\n    }\n    bVar1 = true;\n    local_98[iVar2 + 1] = 1;\n  }\n  iVar3 = iVar2 + 3;\n  local_98[iVar2 + 2] = 0;\n  if (param_4 == (char *)0x0) {\n    uVar6 = 1;\n    param_4 = \"\";\n  }\n  else {\n    sVar5 = strlen(param_4);\n    uVar6 = sVar5 + 1;\n  }\n  if (param_5 == (char *)0x0) {\n    local_4c8 = 1;\n    param_5 = \"\";\n  }\n  else {\n    sVar5 = strlen(param_5);\n    local_4c8 = sVar5 + 1;\n  }\n  if (param_6 == (char *)0x0) {\n    local_4b0 = 0;\n    param_6 = \"\";\n  }\n  else {\n    local_4b0 = strlen(param_6);\n  }\n  iVar2 = 0x7fffffff;\n  if ((uVar6 <= 0x7fffffff - iVar3) && (iVar4 = iVar3 + (int)uVar6, local_4c8 <= 0x7fffffff - iVar4)\n     ) {\n    iVar2 = (int)local_4c8 + iVar4;\n  }\n  local_4a8 = 0;\n  local_4b8 = param_6;\n  if (bVar1) {\n    iVar4 = FUN_001254e0(param_1,0x69545874,&local_4b8);\n    if (iVar4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,*(undefined8 *)(param_1 + 0x170));\n    }\n    if (param_1 == 0) {\n      png_write_chunk_data(0,local_98,iVar3);\n      png_write_chunk_data(0,param_4,uVar6);\n      png_write_chunk_data(0,param_5,local_4c8);\n    }\n    else {\n      FUN_00125750(param_1,0x69545874,iVar2 + local_4a8);\n      png_write_chunk_data(param_1,local_98,iVar3);\n      png_write_chunk_data(param_1,param_4,uVar6);\n      png_write_chunk_data(param_1,param_5,local_4c8);\n    }\n    FUN_001258f0(param_1,&local_4b8);\n  }\n  else {\n    if (0x7fffffff - iVar2 < local_4b0) {\n                    /* WARNING: Subroutine does not return */\n      png_error(param_1,\"iTXt: uncompressed text too long\");\n    }\n    local_4a8 = (int)local_4b0;\n    if (param_1 == 0) {\n      png_write_chunk_data(0,local_98,iVar3);\n      png_write_chunk_data(0,param_4,uVar6);\n      png_write_chunk_data(0,param_5,local_4c8);\n    }\n    else {\n      FUN_00125750(param_1,0x69545874,iVar2 + local_4a8);\n      png_write_chunk_data(param_1,local_98,iVar3);\n      png_write_chunk_data(param_1,param_4,uVar6);\n      png_write_chunk_data(param_1,param_5,local_4c8);\n    }\n    png_write_chunk_data(param_1,param_6,local_4a8);\n  }\n  png_write_chunk_end(param_1);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001271d0": "\nvoid FUN_001271d0(undefined8 param_1,undefined4 param_2,undefined4 param_3,int param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined local_39 [4];\n  undefined local_35 [4];\n  undefined local_31;\n  long local_30;\n  \n  local_31 = (undefined)param_4;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (1 < param_4) {\n    png_warning(param_1,\"Unrecognized unit type for oFFs chunk\");\n  }\n  png_save_int_32(local_39,param_2);\n  png_save_int_32(local_35,param_3);\n  FUN_001259d0(param_1,0x6f464673,local_39,9);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00127270": "\nvoid FUN_00127270(long param_1,undefined8 param_2,undefined4 param_3,undefined4 param_4,int param_5,\n                 int param_6,char *param_7,long param_8)\n\n{\n  long lVar1;\n  int iVar2;\n  size_t sVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  ulong uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  long in_FS_OFFSET;\n  bool bVar10;\n  undefined local_b0;\n  undefined local_a2 [4];\n  undefined local_9e [4];\n  undefined local_9a;\n  undefined local_99;\n  undefined local_98 [88];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (3 < param_5) {\n                    /* WARNING: Subroutine does not return */\n    png_error(param_1,\"Unrecognized equation type for pCAL chunk\");\n  }\n  iVar2 = FUN_00120fc0(param_1,param_2,local_98);\n  if (iVar2 != 0) {\n    sVar3 = strlen(param_7);\n    uVar7 = (ulong)(iVar2 + 1);\n    lVar4 = sVar3 + (param_6 != 0);\n    uVar8 = uVar7 + 10 + lVar4;\n    lVar5 = png_malloc(param_1,(long)param_6 << 3);\n    local_99 = (undefined)param_6;\n    local_b0 = (undefined)param_5;\n    if (param_6 < 1) {\n      if (param_1 == 0) {\n        png_write_chunk_data(0,local_98,uVar7);\n        png_save_int_32(local_a2,param_3);\n        png_save_int_32(local_9e,param_4);\n        local_9a = local_b0;\n        png_write_chunk_data(0,local_a2,10);\n        png_write_chunk_data(0,param_7,lVar4);\n      }\n      else {\n        FUN_00125750(param_1,0x7043414c,uVar8 & 0xffffffff);\n        png_write_chunk_data(param_1,local_98,uVar7);\n        png_save_int_32(local_a2,param_3);\n        png_save_int_32(local_9e,param_4);\n        local_9a = local_b0;\n        png_write_chunk_data(param_1,local_a2,10);\n        png_write_chunk_data(param_1,param_7,lVar4);\n      }\n    }\n    else {\n      uVar9 = 0;\n      do {\n        sVar3 = strlen(*(char **)(param_8 + uVar9 * 8));\n        lVar6 = (param_6 - 1U != (uint)uVar9) + sVar3;\n        *(long *)(lVar5 + uVar9 * 8) = lVar6;\n        uVar8 = uVar8 + lVar6;\n        bVar10 = param_6 - 1U != uVar9;\n        uVar9 = uVar9 + 1;\n      } while (bVar10);\n      if (param_1 == 0) {\n        png_write_chunk_data(0,local_98,uVar7);\n        png_save_int_32(local_a2,param_3);\n        png_save_int_32(local_9e,param_4);\n        local_9a = local_b0;\n        png_write_chunk_data(0,local_a2,10);\n        png_write_chunk_data(0,param_7,lVar4);\n      }\n      else {\n        FUN_00125750(param_1,0x7043414c,uVar8 & 0xffffffff);\n        png_write_chunk_data(param_1,local_98,uVar7);\n        png_save_int_32(local_a2,param_3);\n        png_save_int_32(local_9e,param_4);\n        local_9a = local_b0;\n        png_write_chunk_data(param_1,local_a2,10);\n        png_write_chunk_data(param_1,param_7,lVar4);\n      }\n      lVar4 = 0;\n      do {\n        lVar6 = lVar4 * 8;\n        lVar1 = lVar4 * 8;\n        lVar4 = lVar4 + 1;\n        png_write_chunk_data\n                  (param_1,*(undefined8 *)(param_8 + lVar1),*(undefined8 *)(lVar5 + lVar6));\n      } while ((int)lVar4 < param_6);\n    }\n    png_free(param_1,lVar5);\n    png_write_chunk_end(param_1);\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n                    /* WARNING: Subroutine does not return */\n  png_error(param_1,\"pCAL: invalid keyword\");\n}\n\n", "FUN_001275d0": "\nvoid FUN_001275d0(undefined8 param_1,undefined param_2,char *param_3,char *param_4)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  size_t __n;\n  long in_FS_OFFSET;\n  undefined local_88;\n  undefined local_87;\n  undefined auStack134 [70];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar2 = strlen(param_3);\n  __n = strlen(param_4);\n  uVar1 = sVar2 + 2 + __n;\n  if (uVar1 < 0x41) {\n    local_88 = param_2;\n    __memcpy_chk(&local_87,param_3,sVar2 + 1,0x3f);\n    memcpy(auStack134 + sVar2,param_4,__n);\n    FUN_001259d0(param_1,0x7343414c,&local_88,uVar1);\n  }\n  else {\n    png_warning(param_1,\"Can\\'t write sCAL (buffer too small)\");\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001276a0": "\nvoid FUN_001276a0(undefined8 param_1,undefined4 param_2,undefined4 param_3,int param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined local_39 [4];\n  undefined local_35 [4];\n  undefined local_31;\n  long local_30;\n  \n  local_31 = (undefined)param_4;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (1 < param_4) {\n    png_warning(param_1,\"Unrecognized unit type for pHYs chunk\");\n  }\n  png_save_uint_32(local_39,param_2);\n  png_save_uint_32(local_35,param_3);\n  FUN_001259d0(param_1,0x70485973,local_39,9);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_00127740": "\nvoid FUN_00127740(undefined8 param_1,undefined2 *param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined local_27 [2];\n  undefined4 local_25;\n  undefined local_21;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((((byte)(*(char *)(param_2 + 1) - 1U) < 0xc) &&\n       ((byte)(*(char *)((long)param_2 + 3) - 1U) < 0x1f)) && (*(byte *)(param_2 + 2) < 0x18)) &&\n     (*(byte *)(param_2 + 3) < 0x3d)) {\n    png_save_uint_16(local_27,*param_2);\n    local_25 = *(undefined4 *)(param_2 + 1);\n    local_21 = *(undefined *)(param_2 + 3);\n    FUN_001259d0(param_1,0x74494d45,local_27,7);\n  }\n  else {\n    png_warning(param_1,\"Invalid time specified for tIME chunk\");\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", "FUN_001277f0": "\nvoid FUN_001277f0(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined *puVar5;\n  undefined8 uVar6;\n  byte bVar7;\n  ulong uVar8;\n  long lVar9;\n  \n  uVar3 = (uint)*(byte *)(param_1 + 0x26c) * (uint)*(byte *)(param_1 + 0x269);\n  if (uVar3 < 8) {\n    uVar8 = (long)(int)uVar3 * (ulong)*(uint *)(param_1 + 0x1f8) + 7 >> 3;\n  }\n  else {\n    uVar8 = ((ulong)(long)(int)uVar3 >> 3) * (ulong)*(uint *)(param_1 + 0x1f8);\n  }\n  lVar9 = uVar8 + 1;\n  *(char *)(param_1 + 0x26e) = (char)uVar3;\n  *(undefined *)(param_1 + 0x26f) = *(undefined *)(param_1 + 0x26a);\n  puVar5 = (undefined *)png_malloc(param_1,lVar9);\n  bVar7 = *(byte *)(param_1 + 0x266);\n  *(undefined **)(param_1 + 0x228) = puVar5;\n  *puVar5 = 0;\n  iVar4 = *(int *)(param_1 + 0x1fc);\n  if (iVar4 == 1) {\n    bVar7 = bVar7 & 0x1f;\n  }\n  iVar2 = *(int *)(param_1 + 0x1f8);\n  if (iVar2 == 1) {\n    bVar7 = bVar7 & 0x2f;\n  }\n  if (bVar7 == 0) {\n    cVar1 = *(char *)(param_1 + 0x264);\n    *(undefined *)(param_1 + 0x266) = 8;\n    goto joined_r0x00127906;\n  }\n  *(byte *)(param_1 + 0x266) = bVar7;\n  if (((bVar7 & 0xf0) == 0) || (*(long *)(param_1 + 0x230) != 0)) {\nLAB_0012789b:\n    if ((bVar7 & 0xe0) != 0) goto LAB_001278a3;\n  }\n  else {\n    uVar6 = png_malloc(param_1,lVar9);\n    *(undefined8 *)(param_1 + 0x230) = uVar6;\n    iVar4 = ((bVar7 >> 4 & 1) + 1) - (uint)((bVar7 & 0x20) == 0);\n    if ((bVar7 & 0x40) != 0) {\n      iVar4 = iVar4 + 1;\n      if (-1 < (char)bVar7) goto LAB_00127998;\nLAB_00127970:\n      uVar6 = png_malloc(param_1,lVar9);\n      *(undefined8 *)(param_1 + 0x238) = uVar6;\n      goto LAB_0012789b;\n    }\n    if (-1 < (char)bVar7) {\nLAB_00127998:\n      if (iVar4 < 2) goto LAB_0012789b;\n      goto LAB_00127970;\n    }\n    if (iVar4 != 0) goto LAB_00127970;\nLAB_001278a3:\n    uVar6 = png_calloc(param_1,lVar9);\n    *(undefined8 *)(param_1 + 0x220) = uVar6;\n  }\n  cVar1 = *(char *)(param_1 + 0x264);\n  iVar4 = *(int *)(param_1 + 0x1fc);\n  iVar2 = *(int *)(param_1 + 0x1f8);\njoined_r0x00127906:\n  if ((cVar1 != '\\0') && ((*(byte *)(param_1 + 0x134) & 2) == 0)) {\n    *(uint *)(param_1 + 0x200) = iVar4 + 7U >> 3;\n    *(uint *)(param_1 + 0x204) = iVar2 + 7U >> 3;\n    return;\n  }\n  *(int *)(param_1 + 0x200) = iVar4;\n  *(int *)(param_1 + 0x204) = iVar2;\n  return;\n}\n\n", "FUN_001279b0": "\nvoid FUN_001279b0(long param_1)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  uint uVar3;\n  ulong uVar4;\n  byte bVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  uVar3 = *(int *)(param_1 + 0x214) + 1;\n  *(uint *)(param_1 + 0x214) = uVar3;\n  if (uVar3 < *(uint *)(param_1 + 0x200)) {\n    return;\n  }\n  if (*(char *)(param_1 + 0x264) != '\\0') {\n    *(undefined4 *)(param_1 + 0x214) = 0;\n    bVar5 = *(char *)(param_1 + 0x265) + 1;\n    if ((*(byte *)(param_1 + 0x134) & 2) == 0) {\n      uVar4 = (ulong)bVar5;\n      do {\n        bVar5 = (byte)uVar4;\n        if (6 < bVar5) {\n          *(byte *)(param_1 + 0x265) = bVar5;\n          goto LAB_00127a0a;\n        }\n        uVar7 = (uint)(byte)(&DAT_0012d4b1)[uVar4];\n        bVar2 = (&DAT_0012d4a3)[uVar4];\n        uVar6 = ((uVar7 - 1) + *(int *)(param_1 + 0x1f8)) - (uint)(byte)(&DAT_0012d4aa)[uVar4];\n        *(uint *)(param_1 + 0x204) = uVar6 / uVar7;\n        pbVar1 = &DAT_0012d49c + uVar4;\n        uVar4 = uVar4 + 1;\n        uVar3 = ((bVar2 - 1) + *(int *)(param_1 + 0x1fc)) - (uint)*pbVar1;\n        *(uint *)(param_1 + 0x200) = uVar3 / bVar2;\n      } while ((uVar3 < bVar2) || (uVar6 < uVar7));\n      *(byte *)(param_1 + 0x265) = bVar5;\n    }\n    else {\n      *(byte *)(param_1 + 0x265) = bVar5;\n      if (6 < bVar5) goto LAB_00127a0a;\n    }\n    if (*(void **)(param_1 + 0x220) != (void *)0x0) {\n      uVar3 = (uint)*(byte *)(param_1 + 0x26c) * (uint)*(byte *)(param_1 + 0x269);\n      if (uVar3 < 8) {\n        uVar4 = (ulong)*(uint *)(param_1 + 0x1f8) * (long)(int)uVar3 + 7 >> 3;\n      }\n      else {\n        uVar4 = (ulong)*(uint *)(param_1 + 0x1f8) * ((ulong)(long)(int)uVar3 >> 3);\n      }\n      memset(*(void **)(param_1 + 0x220),0,uVar4 + 1);\n      return;\n    }\n    return;\n  }\nLAB_00127a0a:\n  FUN_00125ef0(param_1,0,0,4);\n  return;\n}\n\n", "FUN_00127b30": "\nvoid FUN_00127b30(uint *param_1,undefined8 *param_2,int param_3)\n\n{\n  byte bVar1;\n  uint uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  undefined8 *puVar6;\n  uint uVar7;\n  ulong uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  byte bVar12;\n  int iVar13;\n  undefined uVar14;\n  uint uVar15;\n  long lVar16;\n  uint uVar17;\n  \n  if (5 < param_3) {\n    return;\n  }\n  bVar12 = *(byte *)((long)param_1 + 0x13);\n  uVar4 = (ulong)bVar12;\n  uVar2 = *param_1;\n  uVar17 = (uint)(byte)(&DAT_0012d4aa)[param_3];\n  bVar1 = (&DAT_0012d4b1)[param_3];\n  uVar9 = (uint)bVar1;\n  puVar6 = param_2;\n  if (bVar12 == 2) {\n    if (uVar2 <= uVar17) {\nLAB_00127ca8:\n      uVar3 = (ulong)(uVar2 + ((bVar1 - 1) - uVar17)) / (ulong)bVar1;\n      *param_1 = (uint)uVar3;\n      goto LAB_00127cba;\n    }\n    uVar4 = (ulong)uVar17;\n    uVar10 = 0;\n    iVar13 = 6;\n    do {\n      while( true ) {\n        uVar10 = uVar10 | ((int)(uint)*(byte *)((long)param_2 + (uVar4 >> 2)) >>\n                           (~(byte)uVar4 * '\\x02' & 6) & 3U) << ((byte)iVar13 & 0x1f);\n        uVar14 = (undefined)uVar10;\n        if (iVar13 == 0) break;\n        uVar11 = (int)uVar4 + uVar9;\n        uVar4 = (ulong)uVar11;\n        iVar13 = iVar13 + -2;\n        if (uVar2 <= uVar11) goto LAB_00127d3a;\n      }\n      uVar11 = (int)uVar4 + uVar9;\n      uVar4 = (ulong)uVar11;\n      *(undefined *)puVar6 = uVar14;\n      iVar13 = 6;\n      puVar6 = (undefined8 *)((long)puVar6 + 1);\n      uVar10 = 0;\n      uVar14 = 0;\n    } while (uVar11 < uVar2);\nLAB_00127d3a:\n    if (iVar13 == 6) goto LAB_00127c60;\nLAB_00127dba:\n    *(undefined *)puVar6 = uVar14;\n    uVar2 = *param_1;\n    uVar4 = (ulong)*(byte *)((long)param_1 + 0x13);\n  }\n  else if (bVar12 == 4) {\n    if (uVar2 <= uVar17) goto LAB_00127ca8;\n    uVar4 = (ulong)uVar17;\n    uVar10 = 0;\n    iVar13 = 4;\n    do {\n      while( true ) {\n        uVar11 = (uint)*(byte *)((long)param_2 + (uVar4 >> 1));\n        if ((uVar4 & 1) == 0) {\n          uVar11 = (int)uVar11 >> 4;\n        }\n        uVar10 = uVar10 | (uVar11 & 0xf) << ((byte)iVar13 & 0x1f);\n        uVar14 = (undefined)uVar10;\n        if (iVar13 == 0) break;\n        uVar11 = (int)uVar4 + uVar9;\n        uVar4 = (ulong)uVar11;\n        iVar13 = iVar13 + -4;\n        if (uVar2 <= uVar11) goto LAB_00127e33;\n      }\n      uVar11 = (int)uVar4 + uVar9;\n      uVar4 = (ulong)uVar11;\n      *(undefined *)puVar6 = uVar14;\n      iVar13 = 4;\n      puVar6 = (undefined8 *)((long)puVar6 + 1);\n      uVar10 = 0;\n      uVar14 = 0;\n    } while (uVar11 < uVar2);\nLAB_00127e33:\n    if (iVar13 == 4) goto LAB_00127c60;\n    *(undefined *)puVar6 = uVar14;\n    uVar2 = *param_1;\n    uVar4 = (ulong)*(byte *)((long)param_1 + 0x13);\n  }\n  else {\n    if (bVar12 == 1) {\n      if (uVar2 <= uVar17) goto LAB_00127ca8;\n      uVar4 = (ulong)uVar17;\n      uVar10 = 0;\n      iVar13 = 7;\n      do {\n        while( true ) {\n          uVar10 = uVar10 | ((int)(uint)*(byte *)((long)param_2 + (uVar4 >> 3)) >>\n                             (~(byte)uVar4 & 7) & 1U) << ((byte)iVar13 & 0x1f);\n          uVar14 = (undefined)uVar10;\n          if (iVar13 == 0) break;\n          uVar11 = (int)uVar4 + uVar9;\n          uVar4 = (ulong)uVar11;\n          iVar13 = iVar13 + -1;\n          if (uVar2 <= uVar11) goto LAB_00127db0;\n        }\n        uVar11 = (int)uVar4 + uVar9;\n        uVar4 = (ulong)uVar11;\n        *(undefined *)puVar6 = uVar14;\n        iVar13 = 7;\n        puVar6 = (undefined8 *)((long)puVar6 + 1);\n        uVar10 = 0;\n        uVar14 = 0;\n      } while (uVar11 < uVar2);\nLAB_00127db0:\n      if (iVar13 != 7) goto LAB_00127dba;\n    }\n    else {\n      bVar12 = bVar12 >> 3;\n      uVar3 = (ulong)bVar12;\n      if (uVar2 <= uVar17) goto LAB_00127c66;\n      uVar11 = (uint)bVar12;\n      uVar4 = (ulong)uVar11;\n      uVar10 = uVar17;\n      do {\n        while (puVar5 = (undefined8 *)(uVar10 * uVar3 + (long)param_2), puVar5 == puVar6) {\nLAB_00127be0:\n          uVar10 = uVar10 + uVar9;\n          puVar6 = (undefined8 *)((long)puVar6 + uVar3);\n          if (uVar2 <= uVar10) goto LAB_00127c60;\n        }\n        if (uVar11 < 8) {\n          if ((bVar12 & 4) == 0) {\n            if ((uVar11 != 0) && (*(undefined *)puVar6 = *(undefined *)puVar5, (bVar12 & 2) != 0)) {\n              *(undefined2 *)((long)puVar6 + (uVar4 - 2)) =\n                   *(undefined2 *)((long)puVar5 + (uVar4 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar6 = *(undefined4 *)puVar5;\n            *(undefined4 *)((long)puVar6 + (uVar4 - 4)) =\n                 *(undefined4 *)((long)puVar5 + (uVar4 - 4));\n          }\n          goto LAB_00127be0;\n        }\n        *puVar6 = *puVar5;\n        *(undefined8 *)((long)puVar6 + (uVar4 - 8)) = *(undefined8 *)((long)puVar5 + (uVar4 - 8));\n        lVar16 = (long)puVar6 - ((ulong)(puVar6 + 1) & 0xfffffffffffffff8);\n        uVar15 = (int)lVar16 + (uint)bVar12 & 0xfffffff8;\n        if (uVar15 < 8) goto LAB_00127be0;\n        uVar7 = 0;\n        do {\n          uVar8 = (ulong)uVar7;\n          uVar7 = uVar7 + 8;\n          *(undefined8 *)(((ulong)(puVar6 + 1) & 0xfffffffffffffff8) + uVar8) =\n               *(undefined8 *)((long)puVar5 + (uVar8 - lVar16));\n        } while (uVar7 < uVar15);\n        uVar10 = uVar10 + uVar9;\n        puVar6 = (undefined8 *)((long)puVar6 + uVar3);\n      } while (uVar10 < uVar2);\n    }\nLAB_00127c60:\n    uVar2 = *param_1;\n    uVar4 = (ulong)*(byte *)((long)param_1 + 0x13);\n  }\nLAB_00127c66:\n  uVar3 = (ulong)(uVar2 + ((bVar1 - 1) - uVar17)) / (ulong)bVar1;\n  *param_1 = (uint)uVar3;\n  if (7 < (byte)uVar4) {\n    *(ulong *)(param_1 + 2) = uVar3 * (byte)((byte)uVar4 >> 3);\n    return;\n  }\nLAB_00127cba:\n  *(ulong *)(param_1 + 2) = uVar3 * uVar4 + 7 >> 3;\n  return;\n}\n\n", "FUN_00127e80": "\nvoid FUN_00127e80(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  undefined *puVar2;\n  undefined8 uVar3;\n  int iVar4;\n  byte bVar5;\n  byte bVar6;\n  uint uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  uint uVar10;\n  ulong uVar11;\n  long lVar12;\n  long lVar13;\n  int iVar14;\n  long lVar15;\n  byte *pbVar16;\n  long lVar17;\n  long lVar18;\n  ulong uVar19;\n  ulong uVar20;\n  undefined *puVar21;\n  uint uVar22;\n  int iVar23;\n  uint uVar24;\n  long lVar25;\n  long local_48;\n  \n  uVar1 = *(ulong *)(param_2 + 8);\n  bVar6 = *(byte *)(param_1 + 0x266);\n  lVar15 = *(long *)(param_1 + 0x228);\n  uVar10 = (int)(*(byte *)(param_2 + 0x13) + 7) >> 3;\n  if (uVar1 < 0x1ffffffffffffff) {\n    if ((bVar6 & 8) == 0) {\n      uVar11 = 0xfffffffffffffeff;\n      goto joined_r0x00128108;\n    }\n    if (bVar6 != 8) {\n      pbVar16 = (byte *)(lVar15 + 1);\n      if (uVar1 == 0) {\n        uVar11 = 0;\n      }\n      else {\n        uVar11 = 0;\n        do {\n          bVar5 = *pbVar16;\n          uVar9 = (ulong)bVar5;\n          if ((char)bVar5 < '\\0') {\n            uVar9 = (ulong)(0x100 - bVar5);\n          }\n          pbVar16 = pbVar16 + 1;\n          uVar11 = uVar11 + uVar9;\n        } while (pbVar16 != (byte *)(lVar15 + 1 + uVar1));\n      }\n      goto joined_r0x00128108;\n    }\n    uVar11 = 0xfffffffffffffeff;\nLAB_001284a7:\n    if ((bVar6 & 0x80) != 0) {\n      puVar2 = *(undefined **)(param_1 + 0x230);\n      uVar9 = 0;\n      lVar25 = *(long *)(param_1 + 0x228);\n      puVar21 = puVar2 + 1;\n      *puVar2 = 4;\n      lVar13 = *(long *)(param_1 + 0x220);\n      lVar18 = lVar25 + 1;\n      local_48 = lVar13 + 1;\n      uVar20 = 0;\n      if (uVar10 != 0) {\n        do {\n          while( true ) {\n            uVar19 = uVar20;\n            bVar6 = *(char *)(lVar25 + 1 + uVar19) - *(char *)(lVar13 + 1 + uVar19);\n            puVar2[uVar19 + 1] = bVar6;\n            if (-1 < (char)bVar6) break;\n            uVar9 = uVar9 + (0x100 - bVar6);\n            uVar20 = uVar19 + 1;\n            if ((long)(int)uVar10 == uVar19 + 1) goto LAB_00128538;\n          }\n          uVar9 = uVar9 + bVar6;\n          uVar20 = uVar19 + 1;\n        } while ((long)(int)uVar10 != uVar19 + 1);\nLAB_00128538:\n        uVar20 = uVar19 + 1;\n        local_48 = local_48 + uVar20;\n        lVar18 = lVar18 + uVar20;\n        puVar21 = puVar21 + uVar20;\n      }\n      if (uVar20 < uVar1) {\n        lVar12 = 0;\n        do {\n          bVar6 = *(byte *)(lVar13 + 1 + lVar12);\n          uVar10 = (uint)*(byte *)(lVar25 + 1 + lVar12);\n          uVar7 = uVar10 - bVar6;\n          uVar22 = (uint)*(byte *)(local_48 + lVar12) - (uint)bVar6;\n          iVar14 = ((int)uVar7 >> 0x1f ^ uVar7) - ((int)uVar7 >> 0x1f);\n          uVar24 = (int)(uVar7 + uVar22) >> 0x1f;\n          iVar4 = (uVar7 + uVar22 ^ uVar24) - uVar24;\n          iVar23 = iVar4;\n          if (iVar14 <= iVar4) {\n            iVar23 = iVar14;\n          }\n          if ((iVar23 < (int)((uVar22 ^ (int)uVar22 >> 0x1f) - ((int)uVar22 >> 0x1f))) &&\n             (uVar10 = (uint)bVar6, iVar14 <= iVar4)) {\n            uVar10 = (uint)*(byte *)(local_48 + lVar12);\n          }\n          uVar10 = *(byte *)(lVar18 + lVar12) - uVar10;\n          puVar21[lVar12] = (char)uVar10;\n          if ((char)uVar10 < '\\0') {\n            uVar19 = (ulong)(0x100 - (uVar10 & 0xff));\n          }\n          else {\n            uVar19 = (ulong)uVar10 & 0xff;\n          }\n          uVar9 = uVar9 + uVar19;\n          if (uVar11 < uVar9) goto LAB_00128037;\n          lVar12 = lVar12 + 1;\n        } while (uVar1 - uVar20 != lVar12);\n      }\n      if (uVar9 < uVar11) {\n        lVar15 = *(long *)(param_1 + 0x230);\n        if (*(long *)(param_1 + 0x238) != 0) {\n          *(long *)(param_1 + 0x230) = *(long *)(param_1 + 0x238);\n          *(long *)(param_1 + 0x238) = lVar15;\n        }\n      }\n    }\n  }\n  else {\n    bVar6 = bVar6 & -bVar6;\n    uVar11 = 0xfffffffffffffeff;\njoined_r0x00128108:\n    if (bVar6 == 0x10) {\n      puVar2 = *(undefined **)(param_1 + 0x230);\n      uVar11 = (ulong)(int)uVar10;\n      lVar18 = lVar15 + 1;\n      *puVar2 = 1;\n      puVar21 = puVar2 + 1;\n      if (uVar10 == 0) {\n        uVar11 = 0;\n      }\n      else {\n        uVar9 = 0;\n        do {\n          puVar2[uVar9 + 1] = *(undefined *)(lVar15 + 1 + uVar9);\n          uVar9 = uVar9 + 1;\n        } while (uVar9 != uVar11);\n        lVar18 = lVar18 + uVar11;\n        puVar21 = puVar21 + uVar11;\n      }\n      lVar25 = 0;\n      if (uVar11 < uVar1) {\n        do {\n          puVar21[lVar25] = *(char *)(lVar18 + lVar25) - *(char *)(lVar15 + 1 + lVar25);\n          lVar25 = lVar25 + 1;\n        } while (uVar1 - uVar11 != lVar25);\n      }\n    }\n    else {\n      if ((bVar6 & 0x10) != 0) {\n        puVar2 = *(undefined **)(param_1 + 0x230);\n        uVar9 = (ulong)(int)uVar10;\n        lVar18 = lVar15 + 1;\n        *puVar2 = 1;\n        puVar21 = puVar2 + 1;\n        if (uVar10 == 0) {\n          uVar9 = 0;\n          uVar20 = 0;\n        }\n        else {\n          uVar19 = 0;\n          uVar20 = 0;\n          do {\n            bVar5 = *(byte *)(lVar15 + 1 + uVar19);\n            puVar2[uVar19 + 1] = bVar5;\n            uVar8 = (ulong)bVar5;\n            if ((char)bVar5 < '\\0') {\n              uVar8 = (ulong)(0x100 - bVar5);\n            }\n            uVar19 = uVar19 + 1;\n            uVar20 = uVar20 + uVar8;\n          } while (uVar19 != uVar9);\n          lVar18 = lVar18 + uVar9;\n          puVar21 = puVar21 + uVar9;\n        }\n        if (uVar9 < uVar1) {\n          lVar25 = 0;\n          do {\n            bVar5 = *(char *)(lVar18 + lVar25) - *(char *)(lVar15 + 1 + lVar25);\n            uVar19 = (ulong)bVar5;\n            puVar21[lVar25] = bVar5;\n            if ((char)bVar5 < '\\0') {\n              uVar19 = (ulong)(0x100 - bVar5);\n            }\n            uVar20 = uVar20 + uVar19;\n            if (uVar11 < uVar20) goto LAB_00127ef0;\n            lVar25 = lVar25 + 1;\n          } while (uVar1 - uVar9 != lVar25);\n        }\n        if (uVar20 < uVar11) {\n          lVar15 = *(long *)(param_1 + 0x230);\n          uVar11 = uVar20;\n          if (*(long *)(param_1 + 0x238) != 0) {\n            *(long *)(param_1 + 0x230) = *(long *)(param_1 + 0x238);\n            *(long *)(param_1 + 0x238) = lVar15;\n          }\n        }\n      }\nLAB_00127ef0:\n      if (bVar6 == 0x20) {\n        puVar21 = *(undefined **)(param_1 + 0x230);\n        lVar15 = *(long *)(param_1 + 0x228);\n        uVar11 = 0;\n        lVar18 = *(long *)(param_1 + 0x220);\n        *puVar21 = 2;\n        if (uVar1 != 0) {\n          do {\n            puVar21[uVar11 + 1] = *(char *)(lVar15 + 1 + uVar11) - *(char *)(lVar18 + 1 + uVar11);\n            uVar11 = uVar11 + 1;\n          } while (uVar1 != uVar11);\n        }\n      }\n      else {\n        if ((bVar6 & 0x20) != 0) {\n          puVar21 = *(undefined **)(param_1 + 0x230);\n          lVar18 = *(long *)(param_1 + 0x228);\n          lVar25 = *(long *)(param_1 + 0x220);\n          *puVar21 = 2;\n          if (uVar1 == 0) {\n            uVar9 = 0;\n          }\n          else {\n            uVar20 = 0;\n            uVar9 = 0;\n            do {\n              bVar5 = *(char *)(lVar18 + 1 + uVar20) - *(char *)(lVar25 + 1 + uVar20);\n              uVar19 = (ulong)bVar5;\n              puVar21[uVar20 + 1] = bVar5;\n              if ((char)bVar5 < '\\0') {\n                uVar19 = (ulong)(0x100 - bVar5);\n              }\n              uVar9 = uVar9 + uVar19;\n              if (uVar11 < uVar9) goto LAB_00127f70;\n              uVar20 = uVar20 + 1;\n            } while (uVar1 != uVar20);\n          }\n          if (uVar9 < uVar11) {\n            lVar15 = *(long *)(param_1 + 0x230);\n            uVar11 = uVar9;\n            if (*(long *)(param_1 + 0x238) != 0) {\n              *(long *)(param_1 + 0x230) = *(long *)(param_1 + 0x238);\n              *(long *)(param_1 + 0x238) = lVar15;\n            }\n          }\n        }\nLAB_00127f70:\n        if (bVar6 == 0x40) {\n          puVar2 = *(undefined **)(param_1 + 0x230);\n          lVar25 = *(long *)(param_1 + 0x228);\n          lVar13 = *(long *)(param_1 + 0x220);\n          *puVar2 = 3;\n          lVar15 = lVar25 + 1;\n          puVar21 = puVar2 + 1;\n          lVar18 = lVar13 + 1;\n          if (uVar10 == 0) {\n            uVar11 = 0;\n          }\n          else {\n            lVar12 = 1;\n            do {\n              puVar2[lVar12] = *(char *)(lVar25 + lVar12) - (*(byte *)(lVar13 + lVar12) >> 1);\n              lVar12 = lVar12 + 1;\n            } while ((ulong)(uVar10 - 1) + 2 != lVar12);\n            lVar13 = (ulong)(uVar10 - 1) + 1;\n            uVar11 = (ulong)uVar10;\n            lVar15 = lVar15 + lVar13;\n            lVar18 = lVar18 + lVar13;\n            puVar21 = puVar21 + lVar13;\n          }\n          lVar13 = 0;\n          while (uVar11 < uVar1) {\n            iVar23 = (int)lVar13;\n            puVar21[lVar13] =\n                 *(char *)(lVar15 + lVar13) -\n                 (char)((int)((uint)*(byte *)(lVar18 + lVar13) +\n                             (uint)*(byte *)(lVar25 + 1 + lVar13)) >> 1);\n            lVar13 = lVar13 + 1;\n            uVar11 = (ulong)(uVar10 + 1 + iVar23);\n          }\n        }\n        else {\n          if ((bVar6 & 0x40) != 0) {\n            puVar2 = *(undefined **)(param_1 + 0x230);\n            lVar13 = *(long *)(param_1 + 0x228);\n            lVar12 = *(long *)(param_1 + 0x220);\n            *puVar2 = 3;\n            lVar18 = lVar13 + 1;\n            puVar21 = puVar2 + 1;\n            lVar25 = lVar12 + 1;\n            if (uVar10 == 0) {\n              uVar9 = 0;\n              uVar20 = 0;\n            }\n            else {\n              uVar20 = 0;\n              lVar17 = 1;\n              do {\n                uVar7 = (uint)*(byte *)(lVar13 + lVar17) - (uint)(*(byte *)(lVar12 + lVar17) >> 1) &\n                        0xff;\n                puVar2[lVar17] = (char)uVar7;\n                if ((char)uVar7 < '\\0') {\n                  uVar7 = 0x100 - uVar7;\n                }\n                lVar17 = lVar17 + 1;\n                uVar20 = uVar20 + uVar7;\n              } while ((ulong)(uVar10 - 1) + 2 != lVar17);\n              lVar12 = (ulong)(uVar10 - 1) + 1;\n              lVar18 = lVar18 + lVar12;\n              lVar25 = lVar25 + lVar12;\n              puVar21 = puVar21 + lVar12;\n              uVar9 = (ulong)(int)uVar10;\n            }\n            if (uVar9 < uVar1) {\n              lVar12 = 0;\n              do {\n                uVar7 = (uint)*(byte *)(lVar18 + lVar12) -\n                        ((int)((uint)*(byte *)(lVar25 + lVar12) +\n                              (uint)*(byte *)(lVar13 + 1 + lVar12)) >> 1) & 0xff;\n                puVar21[lVar12] = (char)uVar7;\n                if ((char)uVar7 < '\\0') {\n                  uVar7 = 0x100 - uVar7;\n                }\n                uVar20 = uVar20 + uVar7;\n                if (uVar11 < uVar20) goto LAB_001283a8;\n                iVar23 = (int)lVar12;\n                lVar12 = lVar12 + 1;\n              } while (uVar10 + 1 + iVar23 < uVar1);\n            }\n            if (uVar20 < uVar11) {\n              lVar15 = *(long *)(param_1 + 0x230);\n              uVar11 = uVar20;\n              if (*(long *)(param_1 + 0x238) != 0) {\n                *(long *)(param_1 + 0x230) = *(long *)(param_1 + 0x238);\n                *(long *)(param_1 + 0x238) = lVar15;\n              }\n            }\n          }\nLAB_001283a8:\n          if (bVar6 != 0x80) goto LAB_001284a7;\n          puVar2 = *(undefined **)(param_1 + 0x230);\n          lVar25 = *(long *)(param_1 + 0x228);\n          lVar13 = *(long *)(param_1 + 0x220);\n          uVar11 = (ulong)(int)uVar10;\n          *puVar2 = 4;\n          lVar15 = lVar25 + 1;\n          puVar21 = puVar2 + 1;\n          lVar18 = lVar13 + 1;\n          if (uVar10 == 0) {\n            uVar11 = 0;\n          }\n          else {\n            uVar9 = 0;\n            do {\n              puVar2[uVar9 + 1] = *(char *)(lVar25 + 1 + uVar9) - *(char *)(lVar13 + 1 + uVar9);\n              uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar11);\n            lVar15 = lVar15 + uVar11;\n            lVar18 = lVar18 + uVar11;\n            puVar21 = puVar21 + uVar11;\n          }\n          lVar12 = 0;\n          if (uVar11 < uVar1) {\n            do {\n              bVar6 = *(byte *)(lVar13 + 1 + lVar12);\n              bVar5 = *(byte *)(lVar25 + 1 + lVar12);\n              uVar10 = (uint)bVar5 - (uint)bVar6;\n              uVar7 = (uint)*(byte *)(lVar18 + lVar12) - (uint)bVar6;\n              iVar14 = ((int)uVar10 >> 0x1f ^ uVar10) - ((int)uVar10 >> 0x1f);\n              uVar22 = (int)(uVar10 + uVar7) >> 0x1f;\n              iVar4 = (uVar10 + uVar7 ^ uVar22) - uVar22;\n              iVar23 = iVar4;\n              if (iVar14 <= iVar4) {\n                iVar23 = iVar14;\n              }\n              if ((iVar23 < (int)((uVar7 ^ (int)uVar7 >> 0x1f) - ((int)uVar7 >> 0x1f))) &&\n                 (bVar5 = bVar6, iVar14 <= iVar4)) {\n                bVar5 = *(byte *)(lVar18 + lVar12);\n              }\n              puVar21[lVar12] = *(char *)(lVar15 + lVar12) - bVar5;\n              lVar12 = lVar12 + 1;\n            } while (uVar1 - uVar11 != lVar12);\n          }\n        }\n      }\n    }\n    lVar15 = *(long *)(param_1 + 0x230);\n  }\nLAB_00128037:\n  FUN_00125ef0(param_1,lVar15,*(long *)(param_2 + 8) + 1,0);\n  if (*(long *)(param_1 + 0x220) != 0) {\n    uVar3 = *(undefined8 *)(param_1 + 0x228);\n    *(long *)(param_1 + 0x228) = *(long *)(param_1 + 0x220);\n    *(undefined8 *)(param_1 + 0x220) = uVar3;\n  }\n  FUN_001279b0(param_1);\n  uVar10 = *(int *)(param_1 + 0x29c) + 1;\n  *(uint *)(param_1 + 0x29c) = uVar10;\n  if ((*(uint *)(param_1 + 0x298) <= uVar10) && (*(uint *)(param_1 + 0x298) != 0)) {\n                    /* WARNING: Treating indirect jump as call */\n    png_write_flush(param_1);\n    return;\n  }\n  return;\n}\n\n", "_DT_FINI": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n", "_ITM_deregisterTMCloneTable": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "inflate": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid inflate(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "__gmon_start__": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "malloc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", "_ITM_registerTMCloneTable": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"}
